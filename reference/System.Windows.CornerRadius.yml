### YamlMime:ManagedReference
items:
- uid: System.Windows.CornerRadius
  commentId: T:System.Windows.CornerRadius
  id: CornerRadius
  parent: System.Windows
  children:
  - System.Windows.CornerRadius.#ctor(System.Double)
  - System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.CornerRadius.BottomLeft
  - System.Windows.CornerRadius.BottomRight
  - System.Windows.CornerRadius.Equals(System.Object)
  - System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  - System.Windows.CornerRadius.GetHashCode
  - System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.TopLeft
  - System.Windows.CornerRadius.TopRight
  - System.Windows.CornerRadius.ToString
  langs:
  - csharp
  - vb
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CornerRadius
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDescribes the characteristics of a rounded corner, such as can be applied to\na <xref href=\"System.Windows.Controls.Border\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct CornerRadius
    content.vb: Public Structure CornerRadius
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.CornerRadius.#ctor(System.Double)
  commentId: M:System.Windows.CornerRadius.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: CornerRadius(Double)
  nameWithType: CornerRadius.CornerRadius(Double)
  fullName: System.Windows.CornerRadius.CornerRadius(System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structure, applying the same uniform\nradius to all its corners.\n"
  example: []
  syntax:
    content: public CornerRadius(double uniformRadius)
    parameters:
    - id: uniformRadius
      type: System.Double
      description: "\nA uniform radius applied to all four <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> properties (<xref href=\"System.Windows.CornerRadius.TopLeft\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"System.Windows.CornerRadius.TopRight\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Windows.CornerRadius.BottomRight\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Windows.CornerRadius.BottomLeft\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    content.vb: Public Sub New(uniformRadius As Double)
  overload: System.Windows.CornerRadius.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: CornerRadius(Double, Double, Double, Double)
  nameWithType: CornerRadius.CornerRadius(Double, Double, Double, Double)
  fullName: System.Windows.CornerRadius.CornerRadius(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 53
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structure, applying\nspecific radius values to its corners.\n"
  example: []
  syntax:
    content: public CornerRadius(double topLeft, double topRight, double bottomRight, double bottomLeft)
    parameters:
    - id: topLeft
      type: System.Double
      description: "\nSets the initial <xref href=\"System.Windows.CornerRadius.TopLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: topRight
      type: System.Double
      description: "\nSets the initial <xref href=\"System.Windows.CornerRadius.TopRight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: bottomRight
      type: System.Double
      description: "\nSets the initial <xref href=\"System.Windows.CornerRadius.BottomLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: bottomLeft
      type: System.Double
      description: "\nSets the initial <xref href=\"System.Windows.CornerRadius.BottomRight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Sub New(topLeft As Double, topRight As Double, bottomRight As Double, bottomLeft As Double)
  overload: System.Windows.CornerRadius.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.BottomLeft
  commentId: P:System.Windows.CornerRadius.BottomLeft
  id: BottomLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BottomLeft
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 70
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the radius of rounding, in pixels, of the bottom left corner of\nthe object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied.\n"
  example: []
  syntax:
    content: public double BottomLeft { readonly get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nA <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that represents the radius of rounding, in pixels, of the bottom\nleft corner of the object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied. The\ndefault is 0.\n"
    content.vb: Public Property BottomLeft As Double
  overload: System.Windows.CornerRadius.BottomLeft*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.BottomRight
  commentId: P:System.Windows.CornerRadius.BottomRight
  id: BottomRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BottomRight
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 81
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the radius of rounding, in pixels, of the bottom right corner of\nthe object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied.\n"
  example: []
  syntax:
    content: public double BottomRight { readonly get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nA <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that represents the radius of rounding, in pixels, of the bottom\nright corner of the object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied. The\ndefault is 0.\n"
    content.vb: Public Property BottomRight As Double
  overload: System.Windows.CornerRadius.BottomRight*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.TopLeft
  commentId: P:System.Windows.CornerRadius.TopLeft
  id: TopLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TopLeft
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 92
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the radius of rounding, in pixels, of the top left corner of the\nobject where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied.\n"
  example: []
  syntax:
    content: public double TopLeft { readonly get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nA <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that represents the radius of rounding, in pixels, of the top\nleft corner of the object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied. The\ndefault is 0.\n"
    content.vb: Public Property TopLeft As Double
  overload: System.Windows.CornerRadius.TopLeft*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.TopRight
  commentId: P:System.Windows.CornerRadius.TopRight
  id: TopRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TopRight
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 103
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the radius of rounding, in pixels, of the top right corner of the\nobject where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied.\n"
  example: []
  syntax:
    content: public double TopRight { readonly get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nA <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> that represents the radius of rounding, in pixels, of the top\nright corner of the object where a <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> is applied. The\ndefault is 0.\n"
    content.vb: Public Property TopRight As Double
  overload: System.Windows.CornerRadius.TopRight*
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.Equals(System.Object)
  commentId: M:System.Windows.CornerRadius.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: CornerRadius.Equals(Object)
  fullName: System.Windows.CornerRadius.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 114
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares this <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structure to another object for equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: "\nThe object to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the two objects are equal; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.CornerRadius.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  commentId: M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  id: Equals(System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: Equals(CornerRadius)
  nameWithType: CornerRadius.Equals(CornerRadius)
  fullName: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 127
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares this <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structure to another <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref>\nstructure for equality.\n"
  example: []
  syntax:
    content: public bool Equals(CornerRadius cornerRadius)
    parameters:
    - id: cornerRadius
      type: System.Windows.CornerRadius
      description: "\nAn instance of <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> to compare for equality.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> are equal; otherwise, false.\n"
    content.vb: Public Function Equals(cornerRadius As CornerRadius) As Boolean
  overload: System.Windows.CornerRadius.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.CornerRadius.GetHashCode
  commentId: M:System.Windows.CornerRadius.GetHashCode
  id: GetHashCode
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CornerRadius.GetHashCode()
  fullName: System.Windows.CornerRadius.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 135
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the hash code of the structure.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for this <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.CornerRadius.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.CornerRadius.ToString
  commentId: M:System.Windows.CornerRadius.ToString
  id: ToString
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CornerRadius.ToString()
  fullName: System.Windows.CornerRadius.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 144
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the string representation of the <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: System.Windows.CornerRadius.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  commentId: M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: Equality(CornerRadius, CornerRadius)
  nameWithType: CornerRadius.Equality(CornerRadius, CornerRadius)
  fullName: System.Windows.CornerRadius.Equality(System.Windows.CornerRadius, System.Windows.CornerRadius)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 158
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares the value of two <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(CornerRadius cr1, CornerRadius cr2)
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "\nThe first structure to compare.\n"
    - id: cr2
      type: System.Windows.CornerRadius
      description: "\nThe other structure to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> are equal; otherwise, false.\n"
    content.vb: Public Shared Operator =(cr1 As CornerRadius, cr2 As CornerRadius) As Boolean
  overload: System.Windows.CornerRadius.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  commentId: M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  - vb
  name: Inequality(CornerRadius, CornerRadius)
  nameWithType: CornerRadius.Inequality(CornerRadius, CornerRadius)
  fullName: System.Windows.CornerRadius.Inequality(System.Windows.CornerRadius, System.Windows.CornerRadius)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/CornerRadius.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/CornerRadius.cs
    startLine: 176
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> structures for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(CornerRadius cr1, CornerRadius cr2)
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "\nThe first structure to compare.\n"
    - id: cr2
      type: System.Windows.CornerRadius
      description: "\nThe other structure to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of <xref href=\"System.Windows.CornerRadius\" data-throw-if-not-resolved=\"false\"></xref> are not equal; otherwise, false.\n"
    content.vb: Public Shared Operator <>(cr1 As CornerRadius, cr2 As CornerRadius) As Boolean
  overload: System.Windows.CornerRadius.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Controls.Border
  commentId: T:System.Windows.Controls.Border
  name: Border
  nameWithType: Border
  fullName: System.Windows.Controls.Border
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.CornerRadius
  commentId: T:System.Windows.CornerRadius
  parent: System.Windows
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
- uid: System.Windows.CornerRadius.TopLeft
  commentId: P:System.Windows.CornerRadius.TopLeft
  isExternal: true
- uid: System.Windows.CornerRadius.TopRight
  commentId: P:System.Windows.CornerRadius.TopRight
  isExternal: true
- uid: System.Windows.CornerRadius.BottomRight
  commentId: P:System.Windows.CornerRadius.BottomRight
  isExternal: true
- uid: System.Windows.CornerRadius.BottomLeft
  commentId: P:System.Windows.CornerRadius.BottomLeft
  isExternal: true
- uid: System.Windows.CornerRadius.#ctor*
  commentId: Overload:System.Windows.CornerRadius.#ctor
  name: CornerRadius
  nameWithType: CornerRadius.CornerRadius
  fullName: System.Windows.CornerRadius.CornerRadius
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.CornerRadius.BottomLeft*
  commentId: Overload:System.Windows.CornerRadius.BottomLeft
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
- uid: System.Windows.CornerRadius.BottomRight*
  commentId: Overload:System.Windows.CornerRadius.BottomRight
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
- uid: System.Windows.CornerRadius.TopLeft*
  commentId: Overload:System.Windows.CornerRadius.TopLeft
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
- uid: System.Windows.CornerRadius.TopRight*
  commentId: Overload:System.Windows.CornerRadius.TopRight
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.CornerRadius.Equals*
  commentId: Overload:System.Windows.CornerRadius.Equals
  name: Equals
  nameWithType: CornerRadius.Equals
  fullName: System.Windows.CornerRadius.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.CornerRadius.GetHashCode*
  commentId: Overload:System.Windows.CornerRadius.GetHashCode
  name: GetHashCode
  nameWithType: CornerRadius.GetHashCode
  fullName: System.Windows.CornerRadius.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.CornerRadius.ToString*
  commentId: Overload:System.Windows.CornerRadius.ToString
  name: ToString
  nameWithType: CornerRadius.ToString
  fullName: System.Windows.CornerRadius.ToString
- uid: System.Windows.CornerRadius.op_Equality*
  commentId: Overload:System.Windows.CornerRadius.op_Equality
  name: Equality
  nameWithType: CornerRadius.Equality
  fullName: System.Windows.CornerRadius.Equality
- uid: System.Windows.CornerRadius.op_Inequality*
  commentId: Overload:System.Windows.CornerRadius.op_Inequality
  name: Inequality
  nameWithType: CornerRadius.Inequality
  fullName: System.Windows.CornerRadius.Inequality
