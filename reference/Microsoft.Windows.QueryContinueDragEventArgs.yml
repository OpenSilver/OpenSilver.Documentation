### YamlMime:ManagedReference
items:
- uid: Microsoft.Windows.QueryContinueDragEventArgs
  commentId: T:Microsoft.Windows.QueryContinueDragEventArgs
  id: QueryContinueDragEventArgs
  parent: Microsoft.Windows
  children:
  - Microsoft.Windows.QueryContinueDragEventArgs.Action
  - Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
  - Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
  langs:
  - csharp
  - vb
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: Microsoft.Windows.QueryContinueDragEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: QueryContinueDragEventArgs
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
    startLine: 11
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nContains arguments for the System.Windows.DragDrop.QueryContinueDrag event.\n"
  example: []
  syntax:
    content: 'public sealed class QueryContinueDragEventArgs : ExtendedRoutedEventArgs'
    content.vb: >-
      Public NotInheritable Class QueryContinueDragEventArgs
          Inherits ExtendedRoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.Windows.ExtendedRoutedEventArgs
  inheritedMembers:
  - Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  - Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Windows.QueryContinueDragEventArgs.Action
  commentId: P:Microsoft.Windows.QueryContinueDragEventArgs.Action
  id: Action
  parent: Microsoft.Windows.QueryContinueDragEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.Action
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Action
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
    startLine: 16
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nGets or sets the current status of the associated drag-and-drop operation.\n"
  example: []
  syntax:
    content: public DragAction Action { get; set; }
    parameters: []
    return:
      type: Microsoft.Windows.DragAction
    content.vb: Public Property Action As DragAction
  overload: Microsoft.Windows.QueryContinueDragEventArgs.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
  commentId: P:Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
  id: EscapePressed
  parent: Microsoft.Windows.QueryContinueDragEventArgs
  langs:
  - csharp
  - vb
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EscapePressed
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
    startLine: 21
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nGets a value indicating whether the ESC key has been pressed.\n"
  example: []
  syntax:
    content: public bool EscapePressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EscapePressed As Boolean
  overload: Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
  commentId: P:Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
  id: KeyStates
  parent: Microsoft.Windows.QueryContinueDragEventArgs
  langs:
  - csharp
  - vb
  name: KeyStates
  nameWithType: QueryContinueDragEventArgs.KeyStates
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyStates
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/QueryContinueDragEventArgs.cs
    startLine: 27
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nGets a flag enumeration Indicating the current state of the SHIFT, CTRL,\nand ALT keys, as well as the state of the mouse buttons.\n"
  example: []
  syntax:
    content: public DragDropKeyStates KeyStates { get; }
    parameters: []
    return:
      type: Microsoft.Windows.DragDropKeyStates
    content.vb: Public ReadOnly Property KeyStates As DragDropKeyStates
  overload: Microsoft.Windows.QueryContinueDragEventArgs.KeyStates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Windows
  commentId: N:Microsoft.Windows
  name: Microsoft.Windows
  nameWithType: Microsoft.Windows
  fullName: Microsoft.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.Windows.ExtendedRoutedEventArgs
  commentId: T:Microsoft.Windows.ExtendedRoutedEventArgs
  parent: Microsoft.Windows
  name: ExtendedRoutedEventArgs
  nameWithType: ExtendedRoutedEventArgs
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs
- uid: Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  commentId: P:Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  parent: Microsoft.Windows.ExtendedRoutedEventArgs
  name: Handled
  nameWithType: ExtendedRoutedEventArgs.Handled
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs.Handled
- uid: Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  commentId: P:Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  parent: Microsoft.Windows.ExtendedRoutedEventArgs
  name: OriginalSource
  nameWithType: ExtendedRoutedEventArgs.OriginalSource
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Windows.QueryContinueDragEventArgs.Action*
  commentId: Overload:Microsoft.Windows.QueryContinueDragEventArgs.Action
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.Action
- uid: Microsoft.Windows.DragAction
  commentId: T:Microsoft.Windows.DragAction
  parent: Microsoft.Windows
  name: DragAction
  nameWithType: DragAction
  fullName: Microsoft.Windows.DragAction
- uid: Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed*
  commentId: Overload:Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.EscapePressed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Windows.QueryContinueDragEventArgs.KeyStates*
  commentId: Overload:Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
  name: KeyStates
  nameWithType: QueryContinueDragEventArgs.KeyStates
  fullName: Microsoft.Windows.QueryContinueDragEventArgs.KeyStates
- uid: Microsoft.Windows.DragDropKeyStates
  commentId: T:Microsoft.Windows.DragDropKeyStates
  parent: Microsoft.Windows
  name: DragDropKeyStates
  nameWithType: DragDropKeyStates
  fullName: Microsoft.Windows.DragDropKeyStates
