### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  commentId: T:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  id: NullableConverter`1
  parent: System.Windows.Controls.DataVisualization.Charting
  children:
  - System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom(ITypeDescriptorContext,System.Type)
  - System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo(ITypeDescriptorContext,System.Type)
  - System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  - vb
  name: NullableConverter<T>
  nameWithType: NullableConverter<T>
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NullableConverter
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
    startLine: 20
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nConverts a string or base value to a <xref href=\"System.Nullable\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: 'public class NullableConverter<T> : TypeConverter where T : struct'
    typeParameters:
    - id: T
      description: The type should be value type.
    content.vb: >-
      Public Class NullableConverter(Of T As Structure)
          Inherits TypeConverter
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: NullableConverter(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T)
  name.vb: NullableConverter(Of T)
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom(ITypeDescriptorContext,System.Type)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom(ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(ITypeDescriptorContext,System.Type)
  parent: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  langs:
  - csharp
  - vb
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: NullableConverter<T>.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.CanConvertFrom(ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertFrom
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
    startLine: 33
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nReturns whether the type converter can convert an object from the \nspecified type to the type of this converter.\n"
  example: []
  syntax:
    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: >
        An object that provides a format context.
    - id: sourceType
      type: System.Type
      description: The type you want to convert from.
    return:
      type: System.Boolean
      description: "\nReturns true if this converter can perform the conversion; \notherwise, false.\n"
    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean
  overload: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom*
  nameWithType.vb: NullableConverter(Of T).CanConvertFrom(ITypeDescriptorContext, Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).CanConvertFrom(ITypeDescriptorContext, System.Type)
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo(ITypeDescriptorContext,System.Type)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo(ITypeDescriptorContext,System.Type)
  id: CanConvertTo(ITypeDescriptorContext,System.Type)
  parent: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  langs:
  - csharp
  - vb
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: NullableConverter<T>.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.CanConvertTo(ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertTo
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
    startLine: 58
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nReturns whether the type converter can convert an object from the \nspecified type to the type of this converter.\n"
  example: []
  syntax:
    content: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: >
        An object that provides a format context.
    - id: destinationType
      type: System.Type
      description: >
        The type you want to convert to.
    return:
      type: System.Boolean
      description: "\nReturns true if this converter can perform the conversion; \notherwise, false.\n"
    content.vb: Public Overrides Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean
  overload: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo*
  nameWithType.vb: NullableConverter(Of T).CanConvertTo(ITypeDescriptorContext, Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).CanConvertTo(ITypeDescriptorContext, System.Type)
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  langs:
  - csharp
  - vb
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: NullableConverter<T>.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.ConvertFrom(ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertFrom
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
    startLine: 77
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nConverts from the specified value to the type of this converter.\n"
  example: []
  syntax:
    content: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: >
        An object that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The \n<xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> to use as the \ncurrent culture."
    - id: value
      type: System.Object
      description: "The value to convert to the type of this \nconverter."
    return:
      type: System.Object
      description: The converted value.
    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object
  overload: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe conversion cannot be performed.\n"
  nameWithType.vb: NullableConverter(Of T).ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).ConvertFrom(ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1
  langs:
  - csharp
  - vb
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: NullableConverter<T>.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.ConvertTo(ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertTo
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/NullableConverter.cs
    startLine: 108
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nConverts from the specified value to the a specified type from the\ntype of this converter.\n"
  example: []
  syntax:
    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
    parameters:
    - id: context
      type: ITypeDescriptorContext
      description: >
        An object that provides a format context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The \n<xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> to use as the \ncurrent culture."
    - id: value
      type: System.Object
      description: "The value to convert to the type of this \nconverter."
    - id: destinationType
      type: System.Type
      description: >-
        The type of convert the value to

        .
    return:
      type: System.Object
      description: The converted value.
    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object
  overload: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\nThe conversion cannot be performed.\n"
  nameWithType.vb: NullableConverter(Of T).ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).ConvertTo(ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)
references:
- uid: System.Nullable
  commentId: T:System.Nullable
  isExternal: true
- uid: System.Windows.Controls.DataVisualization.Charting
  commentId: N:System.Windows.Controls.DataVisualization.Charting
  name: System.Windows.Controls.DataVisualization.Charting
  nameWithType: System.Windows.Controls.DataVisualization.Charting
  fullName: System.Windows.Controls.DataVisualization.Charting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertFrom
  name: CanConvertFrom
  nameWithType: NullableConverter<T>.CanConvertFrom
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.CanConvertFrom
  nameWithType.vb: NullableConverter(Of T).CanConvertFrom
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).CanConvertFrom
- uid: ITypeDescriptorContext
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: ITypeDescriptorContext
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.CanConvertTo
  name: CanConvertTo
  nameWithType: NullableConverter<T>.CanConvertTo
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.CanConvertTo
  nameWithType.vb: NullableConverter(Of T).CanConvertTo
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).CanConvertTo
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertFrom
  name: ConvertFrom
  nameWithType: NullableConverter<T>.ConvertFrom
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.ConvertFrom
  nameWithType.vb: NullableConverter(Of T).ConvertFrom
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).ConvertFrom
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.NullableConverter`1.ConvertTo
  name: ConvertTo
  nameWithType: NullableConverter<T>.ConvertTo
  fullName: System.Windows.Controls.DataVisualization.Charting.NullableConverter<T>.ConvertTo
  nameWithType.vb: NullableConverter(Of T).ConvertTo
  fullName.vb: System.Windows.Controls.DataVisualization.Charting.NullableConverter(Of T).ConvertTo
