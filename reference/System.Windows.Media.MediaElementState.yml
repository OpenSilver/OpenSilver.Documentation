### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.MediaElementState
  commentId: T:System.Windows.Media.MediaElementState
  id: MediaElementState
  parent: System.Windows.Media
  children:
  - System.Windows.Media.MediaElementState.AcquiringLicense
  - System.Windows.Media.MediaElementState.Buffering
  - System.Windows.Media.MediaElementState.Closed
  - System.Windows.Media.MediaElementState.Individualizing
  - System.Windows.Media.MediaElementState.Opening
  - System.Windows.Media.MediaElementState.Paused
  - System.Windows.Media.MediaElementState.Playing
  - System.Windows.Media.MediaElementState.Stopped
  langs:
  - csharp
  - vb
  name: MediaElementState
  nameWithType: MediaElementState
  fullName: System.Windows.Media.MediaElementState
  type: Enum
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MediaElementState
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nDefines the potential states of a MediaElement object.\n"
  example: []
  syntax:
    content: public enum MediaElementState
    content.vb: Public Enum MediaElementState
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Windows.Media.MediaElementState.Closed
  commentId: F:System.Windows.Media.MediaElementState.Closed
  id: Closed
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Closed
  nameWithType: MediaElementState.Closed
  fullName: System.Windows.Media.MediaElementState.Closed
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Closed
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> contains no media. The <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> displays a transparent frame.\n"
  example: []
  syntax:
    content: Closed = 0
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Opening
  commentId: F:System.Windows.Media.MediaElementState.Opening
  id: Opening
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Opening
  nameWithType: MediaElementState.Opening
  fullName: System.Windows.Media.MediaElementState.Opening
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Opening
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> is validating and attempting to open the Uniform Resource Identifier (URI) specified by its <xref href=\"System.Windows.Controls.MediaElement.Source\" data-throw-if-not-resolved=\"false\"></xref>\nproperty. While in this state, the <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> queues any <xref href=\"System.Windows.Controls.MediaElement.Play\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Windows.Controls.MediaElement.Pause\" data-throw-if-not-resolved=\"false\"></xref>,\nor <xref href=\"System.Windows.Controls.MediaElement.Stop\" data-throw-if-not-resolved=\"false\"></xref> commands it receives and processes them if the media is successfully opened.\n"
  example: []
  syntax:
    content: Opening = 1
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Buffering
  commentId: F:System.Windows.Media.MediaElementState.Buffering
  id: Buffering
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Buffering
  nameWithType: MediaElementState.Buffering
  fullName: System.Windows.Media.MediaElementState.Buffering
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Buffering
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> is loading the media for playback. Its <xref href=\"System.Windows.Controls.MediaElement.Position\" data-throw-if-not-resolved=\"false\"></xref> does not advance\nduring this state. If the <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> was already playing video, it continues to display the last displayed frame.\n"
  example: []
  syntax:
    content: Buffering = 2
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Playing
  commentId: F:System.Windows.Media.MediaElementState.Playing
  id: Playing
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Playing
  nameWithType: MediaElementState.Playing
  fullName: System.Windows.Media.MediaElementState.Playing
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Playing
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 43
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> is playing the media specified by its source property. Its <xref href=\"System.Windows.Controls.MediaElement.Position\" data-throw-if-not-resolved=\"false\"></xref> advances forward.\n"
  example: []
  syntax:
    content: Playing = 3
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Paused
  commentId: F:System.Windows.Media.MediaElementState.Paused
  id: Paused
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Paused
  nameWithType: MediaElementState.Paused
  fullName: System.Windows.Media.MediaElementState.Paused
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Paused
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 49
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> does not advance its <xref href=\"System.Windows.Controls.MediaElement.Position\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> was playing video,\nit continues to display the current frame.\n"
  example: []
  syntax:
    content: Paused = 4
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Stopped
  commentId: F:System.Windows.Media.MediaElementState.Stopped
  id: Stopped
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Stopped
  nameWithType: MediaElementState.Stopped
  fullName: System.Windows.Media.MediaElementState.Stopped
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Stopped
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> contains media but is not playing or paused. Its <xref href=\"System.Windows.Controls.MediaElement.Position\" data-throw-if-not-resolved=\"false\"></xref> is 0 and does not advance.\nIf the loaded media is video, the <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> displays the first frame.\n"
  example: []
  syntax:
    content: Stopped = 5
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.Individualizing
  commentId: F:System.Windows.Media.MediaElementState.Individualizing
  id: Individualizing
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: Individualizing
  nameWithType: MediaElementState.Individualizing
  fullName: System.Windows.Media.MediaElementState.Individualizing
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Individualizing
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> is in the process of ensuring that proper individualization components (only applicable when\nplaying DRM protected content) are installed on the user&apos;s computer.\n"
  example: []
  syntax:
    content: Individualizing = 6
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Media.MediaElementState.AcquiringLicense
  commentId: F:System.Windows.Media.MediaElementState.AcquiringLicense
  id: AcquiringLicense
  parent: System.Windows.Media.MediaElementState
  langs:
  - csharp
  - vb
  name: AcquiringLicense
  nameWithType: MediaElementState.AcquiringLicense
  fullName: System.Windows.Media.MediaElementState.AcquiringLicense
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AcquiringLicense
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/MediaElementState.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nThe <xref href=\"System.Windows.Controls.MediaElement\" data-throw-if-not-resolved=\"false\"></xref> is acquiring a license required to play DRM protected content. Once OnAcquireLicense has\nbeen called, the MediaElement will remain in this state until SetLicenseResponse has been called.\n"
  example: []
  syntax:
    content: AcquiringLicense = 7
    return:
      type: System.Windows.Media.MediaElementState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Windows.Controls.MediaElement
  commentId: T:System.Windows.Controls.MediaElement
  parent: System.Windows.Controls
  name: MediaElement
  nameWithType: MediaElement
  fullName: System.Windows.Controls.MediaElement
- uid: System.Windows.Media.MediaElementState
  commentId: T:System.Windows.Media.MediaElementState
  parent: System.Windows.Media
  name: MediaElementState
  nameWithType: MediaElementState
  fullName: System.Windows.Media.MediaElementState
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Windows.Controls.MediaElement.Source
  commentId: P:System.Windows.Controls.MediaElement.Source
  isExternal: true
- uid: System.Windows.Controls.MediaElement.Play
  commentId: M:System.Windows.Controls.MediaElement.Play
  isExternal: true
- uid: System.Windows.Controls.MediaElement.Pause
  commentId: M:System.Windows.Controls.MediaElement.Pause
  isExternal: true
- uid: System.Windows.Controls.MediaElement.Stop
  commentId: M:System.Windows.Controls.MediaElement.Stop
  isExternal: true
- uid: System.Windows.Controls.MediaElement.Position
  commentId: P:System.Windows.Controls.MediaElement.Position
  isExternal: true
