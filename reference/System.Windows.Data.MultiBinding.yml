### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBinding
  commentId: T:System.Windows.Data.MultiBinding
  id: MultiBinding
  parent: System.Windows.Data
  children:
  - System.Windows.Data.MultiBinding.#ctor
  - System.Windows.Data.MultiBinding.Bindings
  - System.Windows.Data.MultiBinding.Converter
  - System.Windows.Data.MultiBinding.ConverterCulture
  - System.Windows.Data.MultiBinding.ConverterParameter
  - System.Windows.Data.MultiBinding.Mode
  - System.Windows.Data.MultiBinding.NotifyOnValidationError
  - System.Windows.Data.MultiBinding.UpdateSourceTrigger
  - System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  - System.Windows.Data.MultiBinding.ValidatesOnExceptions
  - System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  langs:
  - csharp
  - vb
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MultiBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nDescribes a collection of <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> objects attached to a single binding target property.\n"
  example: []
  syntax:
    content: 'public class MultiBinding : BindingBase, IMarkupExtension<object>'
    content.vb: >-
      Public Class MultiBinding
          Inherits BindingBase
          Implements IMarkupExtension(Of Object)
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements:
  - System.Xaml.IMarkupExtension{System.Object}
  inheritedMembers:
  - System.Windows.Data.BindingBase._stringFormat
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.TargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.CheckSealed
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Data.MultiBinding.#ctor
  commentId: M:System.Windows.Data.MultiBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 35
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MultiBinding()
    content.vb: Public Sub New
  overload: System.Windows.Data.MultiBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.Bindings
  commentId: P:System.Windows.Data.MultiBinding.Bindings
  id: Bindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Bindings
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 49
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets the collection of <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> objects within this <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public Collection<BindingBase> Bindings { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
      description: "\nA collection of <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> objects. <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> currently supports only \nobjects of type <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> and not <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref>. Adding a <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> \nchild to a <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> object implicitly adds the child to the <xref href=\"System.Windows.Data.BindingBase\" data-throw-if-not-resolved=\"false\"></xref> \ncollection for the <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
    content.vb: Public ReadOnly Property Bindings As Collection(Of BindingBase)
  overload: System.Windows.Data.MultiBinding.Bindings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  commentId: P:System.Windows.Data.MultiBinding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UpdateSourceTrigger
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that determines the timing of binding source updates.\n"
  example: []
  syntax:
    content: public UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "\nA value that determines when the binding source is updated. The default is \n<xref href=\"System.Windows.Data.UpdateSourceTrigger.Default\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property UpdateSourceTrigger As UpdateSourceTrigger
  overload: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  commentId: P:System.Windows.Data.MultiBinding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterParameter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets an optional parameter to pass to a converter as additional information.\n"
  example: []
  syntax:
    content: public object ConverterParameter { get; set; }
    parameters: []
    return:
      type: System.Object
      description: "\nA parameter to pass to a converter. The default value is null.\n"
    content.vb: Public Property ConverterParameter As Object
  overload: System.Windows.Data.MultiBinding.ConverterParameter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  commentId: P:System.Windows.Data.MultiBinding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterCulture
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that applies to any converter assigned \nto bindings wrapped by the <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> or on the <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref>\nitself.\n"
  example: []
  syntax:
    content: public CultureInfo ConverterCulture { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "\nA valid <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property ConverterCulture As CultureInfo
  overload: System.Windows.Data.MultiBinding.ConverterCulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.Converter
  commentId: P:System.Windows.Data.MultiBinding.Converter
  id: Converter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Converter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 101
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the converter to use to convert the source values to or from the target value.\n"
  example: []
  syntax:
    content: public IMultiValueConverter Converter { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.IMultiValueConverter
      description: "\nA value of type <xref href=\"System.Windows.Data.IMultiValueConverter\" data-throw-if-not-resolved=\"false\"></xref> that indicates the converter to use.\nThe default value is null.\n"
    content.vb: Public Property Converter As IMultiValueConverter
  overload: System.Windows.Data.MultiBinding.Converter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.Mode
  commentId: P:System.Windows.Data.MultiBinding.Mode
  id: Mode
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Mode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates the direction of the data flow of this binding.\n"
  example: []
  syntax:
    content: public BindingMode Mode { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.BindingMode
      description: "\nOne of the <xref href=\"System.Windows.Data.BindingMode\" data-throw-if-not-resolved=\"false\"></xref> values. The default is <xref href=\"System.Windows.Data.BindingMode.OneWay\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Mode As BindingMode
  overload: System.Windows.Data.MultiBinding.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  commentId: P:System.Windows.Data.MultiBinding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnExceptions
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 137
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report exception validation errors.\n"
  example: []
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding engine will report exception validation errors; otherwise, false. The default is false.\n"
    content.vb: Public Property ValidatesOnExceptions As Boolean
  overload: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  commentId: P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnDataErrors
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 155
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report validation\nerrors from an <xref href=\"System.ComponentModel.IDataErrorInfo\" data-throw-if-not-resolved=\"false\"></xref> implementation on the bound data entity.\n"
  example: []
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding engine will report <xref href=\"System.ComponentModel.IDataErrorInfo\" data-throw-if-not-resolved=\"false\"></xref> validation errors;\notherwise, false. The default is false.\n"
    content.vb: Public Property ValidatesOnDataErrors As Boolean
  overload: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  commentId: P:System.Windows.Data.MultiBinding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NotifyOnValidationError
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 173
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the <xref href=\"System.Windows.FrameworkElement.BindingValidationError\" data-throw-if-not-resolved=\"false\"></xref>\nevent is raised on validation errors.\n"
  example: []
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the <xref href=\"System.Windows.FrameworkElement.BindingValidationError\" data-throw-if-not-resolved=\"false\"></xref> event is raised; otherwise, false.\nThe default is false.\n"
    content.vb: Public Property NotifyOnValidationError As Boolean
  overload: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  commentId: P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  - vb
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnNotifyDataErrors
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBinding.cs
    startLine: 191
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report validation errors \nfrom an <xref href=\"System.ComponentModel.INotifyDataErrorInfo\" data-throw-if-not-resolved=\"false\"></xref> implementation on the bound data entity.\n"
  example: []
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding engine will report <xref href=\"System.ComponentModel.INotifyDataErrorInfo\" data-throw-if-not-resolved=\"false\"></xref> validation errors; \notherwise, false. The default is true.\n"
    content.vb: Public Property ValidatesOnNotifyDataErrors As Boolean
  overload: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase
  commentId: T:System.Windows.Data.BindingBase
  parent: System.Windows.Data
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Xaml.IMarkupExtension{System.Object}
  commentId: T:System.Xaml.IMarkupExtension{System.Object}
  parent: System.Xaml
  definition: System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<Object>
  nameWithType: IMarkupExtension<Object>
  fullName: System.Xaml.IMarkupExtension<System.Object>
  nameWithType.vb: IMarkupExtension(Of Object)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object)
  name.vb: IMarkupExtension(Of Object)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.BindingBase._stringFormat
  commentId: F:System.Windows.Data.BindingBase._stringFormat
  parent: System.Windows.Data.BindingBase
  name: _stringFormat
  nameWithType: BindingBase._stringFormat
  fullName: System.Windows.Data.BindingBase._stringFormat
- uid: System.Windows.Data.BindingBase.FallbackValue
  commentId: P:System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.TargetNullValue
  commentId: P:System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat
  commentId: P:System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.CheckSealed
  commentId: M:System.Windows.Data.BindingBase.CheckSealed
  parent: System.Windows.Data.BindingBase
  name: CheckSealed()
  nameWithType: BindingBase.CheckSealed()
  fullName: System.Windows.Data.BindingBase.CheckSealed()
  spec.csharp:
  - uid: System.Windows.Data.BindingBase.CheckSealed
    name: CheckSealed
    nameWithType: BindingBase.CheckSealed
    fullName: System.Windows.Data.BindingBase.CheckSealed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.BindingBase.CheckSealed
    name: CheckSealed
    nameWithType: BindingBase.CheckSealed
    fullName: System.Windows.Data.BindingBase.CheckSealed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: BindingBase.ProvideValue
    fullName: System.Windows.Data.BindingBase.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: BindingBase.ProvideValue
    fullName: System.Windows.Data.BindingBase.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: System.Xaml.IMarkupExtension`1
  commentId: T:System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<T>
  nameWithType: IMarkupExtension<T>
  fullName: System.Xaml.IMarkupExtension<T>
  nameWithType.vb: IMarkupExtension(Of T)
  fullName.vb: System.Xaml.IMarkupExtension(Of T)
  name.vb: IMarkupExtension(Of T)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Windows.Data.MultiBinding
  commentId: T:System.Windows.Data.MultiBinding
  parent: System.Windows.Data
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
- uid: System.Windows.Data.MultiBinding.#ctor*
  commentId: Overload:System.Windows.Data.MultiBinding.#ctor
  name: MultiBinding
  nameWithType: MultiBinding.MultiBinding
  fullName: System.Windows.Data.MultiBinding.MultiBinding
- uid: System.Windows.Data.MultiBinding.Bindings*
  commentId: Overload:System.Windows.Data.MultiBinding.Bindings
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
  commentId: T:System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<BindingBase>
  nameWithType: Collection<BindingBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase>
  nameWithType.vb: Collection(Of BindingBase)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Windows.Data.BindingBase)
  name.vb: Collection(Of BindingBase)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingBase
    name: BindingBase
    nameWithType: BindingBase
    fullName: System.Windows.Data.BindingBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Data.BindingBase
    name: BindingBase
    nameWithType: BindingBase
    fullName: System.Windows.Data.BindingBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Windows.Data.UpdateSourceTrigger.Default
  commentId: F:System.Windows.Data.UpdateSourceTrigger.Default
  isExternal: true
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  commentId: Overload:System.Windows.Data.MultiBinding.UpdateSourceTrigger
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  commentId: T:System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ConverterParameter*
  commentId: Overload:System.Windows.Data.MultiBinding.ConverterParameter
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.MultiBinding.ConverterCulture*
  commentId: Overload:System.Windows.Data.MultiBinding.ConverterCulture
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Windows.Data.IMultiValueConverter
  commentId: T:System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System.Windows.Data.MultiBinding.Converter*
  commentId: Overload:System.Windows.Data.MultiBinding.Converter
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
- uid: System.Windows.Data.BindingMode
  commentId: T:System.Windows.Data.BindingMode
  parent: System.Windows.Data
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.BindingMode.OneWay
  commentId: F:System.Windows.Data.BindingMode.OneWay
  isExternal: true
- uid: System.Windows.Data.MultiBinding.Mode*
  commentId: Overload:System.Windows.Data.MultiBinding.Mode
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  commentId: Overload:System.Windows.Data.MultiBinding.ValidatesOnExceptions
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IDataErrorInfo
  commentId: T:System.ComponentModel.IDataErrorInfo
  isExternal: true
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  commentId: Overload:System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.FrameworkElement.BindingValidationError
  commentId: E:System.Windows.FrameworkElement.BindingValidationError
  parent: System.Windows.FrameworkElement
  name: BindingValidationError
  nameWithType: FrameworkElement.BindingValidationError
  fullName: System.Windows.FrameworkElement.BindingValidationError
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  commentId: Overload:System.Windows.Data.MultiBinding.NotifyOnValidationError
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.ComponentModel.INotifyDataErrorInfo
  commentId: T:System.ComponentModel.INotifyDataErrorInfo
  isExternal: true
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  commentId: Overload:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
