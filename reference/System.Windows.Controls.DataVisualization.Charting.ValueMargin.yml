### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  commentId: T:System.Windows.Controls.DataVisualization.Charting.ValueMargin
  id: ValueMargin
  parent: System.Windows.Controls.DataVisualization.Charting
  children:
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor(System.Object,System.Double,System.Double)
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  - System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
  langs:
  - csharp
  - vb
  name: ValueMargin
  nameWithType: ValueMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  type: Struct
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValueMargin
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 14
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nA margin specified for a given value.\n"
  example: []
  syntax:
    content: public struct ValueMargin
    content.vb: Public Structure ValueMargin
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
  commentId: P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
  id: Value
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ValueMargin.Value
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Value
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 19
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nGets the value that the margin is associated with.\n"
  example: []
  syntax:
    content: public object Value { readonly get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value*
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
  commentId: P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
  id: LowMargin
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: LowMargin
  nameWithType: ValueMargin.LowMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LowMargin
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 24
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nGets the low margin for a value.\n"
  example: []
  syntax:
    content: public double LowMargin { readonly get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LowMargin As Double
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin*
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
  commentId: P:System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
  id: HighMargin
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: HighMargin
  nameWithType: ValueMargin.HighMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HighMargin
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 29
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nGets the high margin for a value.\n"
  example: []
  syntax:
    content: public double HighMargin { readonly get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property HighMargin As Double
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin*
  modifiers.csharp:
  - public
  - readonly get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor(System.Object,System.Double,System.Double)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor(System.Object,System.Double,System.Double)
  id: '#ctor(System.Object,System.Double,System.Double)'
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: ValueMargin(Object, Double, Double)
  nameWithType: ValueMargin.ValueMargin(Object, Double, Double)
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.ValueMargin(System.Object, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 37
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nInitializes a new instance of the ValueMargin class.\n"
  example: []
  syntax:
    content: public ValueMargin(object value, double lowMargin, double highMargin)
    parameters:
    - id: value
      type: System.Object
      description: The value the margin is associated with.
    - id: lowMargin
      type: System.Double
      description: The lower margin.
    - id: highMargin
      type: System.Double
      description: The higher margin.
    content.vb: Public Sub New(value As Object, lowMargin As Double, highMargin As Double)
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ValueMargin.Equals(Object)
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 50
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nDetermines whether two value margins are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The value margin to compare with this one.
    return:
      type: System.Boolean
      description: >
        A value indicating whether the two value margins are equal.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  id: op_Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: Equality(ValueMargin, ValueMargin)
  nameWithType: ValueMargin.Equality(ValueMargin, ValueMargin)
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equality(System.Windows.Controls.DataVisualization.Charting.ValueMargin, System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 67
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nDetermines whether two unit value objects are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(ValueMargin left, ValueMargin right)
    parameters:
    - id: left
      type: System.Windows.Controls.DataVisualization.Charting.ValueMargin
      description: The left value margin.
    - id: right
      type: System.Windows.Controls.DataVisualization.Charting.ValueMargin
      description: The right value margin.
    return:
      type: System.Boolean
      description: "A value indicating  whether two value margins objects are \nequal."
    content.vb: Public Shared Operator =(left As ValueMargin, right As ValueMargin) As Boolean
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  commentId: M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  id: op_Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin,System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: Inequality(ValueMargin, ValueMargin)
  nameWithType: ValueMargin.Inequality(ValueMargin, ValueMargin)
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Inequality(System.Windows.Controls.DataVisualization.Charting.ValueMargin, System.Windows.Controls.DataVisualization.Charting.ValueMargin)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 79
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nDetermines whether two value margin objects are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(ValueMargin left, ValueMargin right)
    parameters:
    - id: left
      type: System.Windows.Controls.DataVisualization.Charting.ValueMargin
      description: The left value margin.
    - id: right
      type: System.Windows.Controls.DataVisualization.Charting.ValueMargin
      description: The right value margin.
    return:
      type: System.Boolean
      description: >-
        A value indicating whether two value margin objects are not

        equal.
    content.vb: Public Shared Operator <>(left As ValueMargin, right As ValueMargin) As Boolean
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode
  commentId: M:System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ValueMargin.GetHashCode()
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/ValueMargin.cs
    startLine: 88
  assemblies:
  - Controls.DataVisualization.OpenSilver
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nReturns the hash code of the value margin object.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: The hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Controls.DataVisualization.Charting
  commentId: N:System.Windows.Controls.DataVisualization.Charting
  name: System.Windows.Controls.DataVisualization.Charting
  nameWithType: System.Windows.Controls.DataVisualization.Charting
  fullName: System.Windows.Controls.DataVisualization.Charting
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
  name: Value
  nameWithType: ValueMargin.Value
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Value
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
  name: LowMargin
  nameWithType: ValueMargin.LowMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.LowMargin
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
  name: HighMargin
  nameWithType: ValueMargin.HighMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.HighMargin
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.#ctor
  name: ValueMargin
  nameWithType: ValueMargin.ValueMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.ValueMargin
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals
  name: Equals
  nameWithType: ValueMargin.Equals
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Equality
  name: Equality
  nameWithType: ValueMargin.Equality
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Equality
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin
  commentId: T:System.Windows.Controls.DataVisualization.Charting.ValueMargin
  parent: System.Windows.Controls.DataVisualization.Charting
  name: ValueMargin
  nameWithType: ValueMargin
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.op_Inequality
  name: Inequality
  nameWithType: ValueMargin.Inequality
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.Inequality
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode
  name: GetHashCode
  nameWithType: ValueMargin.GetHashCode
  fullName: System.Windows.Controls.DataVisualization.Charting.ValueMargin.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
