### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ClosingEventArgs
  commentId: T:System.ComponentModel.ClosingEventArgs
  id: ClosingEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)
  - System.ComponentModel.ClosingEventArgs.IsCancelable
  langs:
  - csharp
  - vb
  name: ClosingEventArgs
  nameWithType: ClosingEventArgs
  fullName: System.ComponentModel.ClosingEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClosingEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nProvides data for the <xref href=\"System.Windows.Window.Closing\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public class ClosingEventArgs : CancelEventArgs'
    content.vb: >-
      Public Class ClosingEventArgs
          Inherits CancelEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.ComponentModel.CancelEventArgs
  inheritedMembers:
  - System.ComponentModel.CancelEventArgs.Cancel
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.ClosingEventArgs
  langs:
  - csharp
  - vb
  name: ClosingEventArgs(Boolean)
  nameWithType: ClosingEventArgs.ClosingEventArgs(Boolean)
  fullName: System.ComponentModel.ClosingEventArgs.ClosingEventArgs(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nInitializes a new instance of the <xref href=\"System.ComponentModel.ClosingEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ClosingEventArgs(bool isCancelable)
    parameters:
    - id: isCancelable
      type: System.Boolean
      description: "\nInitializes the <xref href=\"System.ComponentModel.ClosingEventArgs.IsCancelable\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
    content.vb: Public Sub New(isCancelable As Boolean)
  overload: System.ComponentModel.ClosingEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.ClosingEventArgs.IsCancelable
  commentId: P:System.ComponentModel.ClosingEventArgs.IsCancelable
  id: IsCancelable
  parent: System.ComponentModel.ClosingEventArgs
  langs:
  - csharp
  - vb
  name: IsCancelable
  nameWithType: ClosingEventArgs.IsCancelable
  fullName: System.ComponentModel.ClosingEventArgs.IsCancelable
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsCancelable
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/ClosingEventArgs.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets a value that indicates whether you can cancel the <xref href=\"System.Windows.Window.Closing\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: public bool IsCancelable { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if you can cancel the event; otherwise, false.\n"
    content.vb: Public ReadOnly Property IsCancelable As Boolean
  overload: System.ComponentModel.ClosingEventArgs.IsCancelable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Window.Closing
  commentId: E:System.Windows.Window.Closing
  isExternal: true
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.CancelEventArgs
  commentId: T:System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.ComponentModel.CancelEventArgs.Cancel
  commentId: P:System.ComponentModel.CancelEventArgs.Cancel
  parent: System.ComponentModel.CancelEventArgs
  isExternal: true
  name: Cancel
  nameWithType: CancelEventArgs.Cancel
  fullName: System.ComponentModel.CancelEventArgs.Cancel
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.ClosingEventArgs
  commentId: T:System.ComponentModel.ClosingEventArgs
  parent: System.ComponentModel
  name: ClosingEventArgs
  nameWithType: ClosingEventArgs
  fullName: System.ComponentModel.ClosingEventArgs
- uid: System.ComponentModel.ClosingEventArgs.IsCancelable
  commentId: P:System.ComponentModel.ClosingEventArgs.IsCancelable
  isExternal: true
- uid: System.ComponentModel.ClosingEventArgs.#ctor*
  commentId: Overload:System.ComponentModel.ClosingEventArgs.#ctor
  name: ClosingEventArgs
  nameWithType: ClosingEventArgs.ClosingEventArgs
  fullName: System.ComponentModel.ClosingEventArgs.ClosingEventArgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ClosingEventArgs.IsCancelable*
  commentId: Overload:System.ComponentModel.ClosingEventArgs.IsCancelable
  name: IsCancelable
  nameWithType: ClosingEventArgs.IsCancelable
  fullName: System.ComponentModel.ClosingEventArgs.IsCancelable
