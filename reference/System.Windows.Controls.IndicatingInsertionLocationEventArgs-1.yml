### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  commentId: T:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  id: IndicatingInsertionLocationEventArgs`1
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget
  - System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition(System.Windows.UIElement)
  - System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex
  - System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry
  langs:
  - csharp
  - vb
  name: IndicatingInsertionLocationEventArgs<TItemsControlType>
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IndicatingInsertionLocationEventArgs
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
    startLine: 16
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nInformation about the IndicatingInsertionLocation event.\n"
  example: []
  syntax:
    content: 'public sealed class IndicatingInsertionLocationEventArgs<TItemsControlType> : ExtendedRoutedEventArgs'
    typeParameters:
    - id: TItemsControlType
      description: "The type of the control that \ncontains the items that can be dragged."
    content.vb: >-
      Public NotInheritable Class IndicatingInsertionLocationEventArgs(Of TItemsControlType)
          Inherits ExtendedRoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.Windows.ExtendedRoutedEventArgs
  inheritedMembers:
  - Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  - Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType)
  name.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType)
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget
  commentId: P:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget
  id: DropTarget
  parent: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  langs:
  - csharp
  - vb
  name: DropTarget
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.DropTarget
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.DropTarget
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DropTarget
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
    startLine: 26
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the drop target.\n"
  example: []
  syntax:
    content: public TItemsControlType DropTarget { get; }
    parameters: []
    return:
      type: '{TItemsControlType}'
    content.vb: Public ReadOnly Property DropTarget As TItemsControlType
  overload: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget*
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).DropTarget
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).DropTarget
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex
  commentId: P:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex
  id: InsertionIndex
  parent: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  langs:
  - csharp
  - vb
  name: InsertionIndex
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndex
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndex
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InsertionIndex
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
    startLine: 31
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the insertion index.\n"
  example: []
  syntax:
    content: public int? InsertionIndex { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property InsertionIndex As Integer?
  overload: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex*
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndex
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndex
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry
  commentId: P:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry
  id: InsertionIndicatorGeometry
  parent: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  langs:
  - csharp
  - vb
  name: InsertionIndicatorGeometry
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndicatorGeometry
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndicatorGeometry
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InsertionIndicatorGeometry
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
    startLine: 36
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets or sets the geometry to use to indicate the insertion point.\n"
  example: []
  syntax:
    content: public Geometry InsertionIndicatorGeometry { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Geometry
    content.vb: Public Property InsertionIndicatorGeometry As Geometry
  overload: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry*
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndicatorGeometry
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndicatorGeometry
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition(System.Windows.UIElement)
  commentId: M:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition(System.Windows.UIElement)
  id: GetPosition(System.Windows.UIElement)
  parent: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1
  langs:
  - csharp
  - vb
  name: GetPosition(UIElement)
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.GetPosition(UIElement)
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.GetPosition(System.Windows.UIElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPosition
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/IndicatingInsertionLocationEventArgs.cs
    startLine: 43
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nReturns a drop point that is relative to a specified System.Windows.UIElement.\n"
  example: []
  syntax:
    content: public Point GetPosition(UIElement relativeTo)
    parameters:
    - id: relativeTo
      type: System.Windows.UIElement
      description: A UIElement object for which to get a relative drop point.
    return:
      type: System.Windows.Point
      description: A drop point that is relative to the element specified in relativeTo.
    content.vb: Public Function GetPosition(relativeTo As UIElement) As Point
  overload: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition*
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).GetPosition(UIElement)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).GetPosition(System.Windows.UIElement)
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.Windows.ExtendedRoutedEventArgs
  commentId: T:Microsoft.Windows.ExtendedRoutedEventArgs
  parent: Microsoft.Windows
  name: ExtendedRoutedEventArgs
  nameWithType: ExtendedRoutedEventArgs
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs
- uid: Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  commentId: P:Microsoft.Windows.ExtendedRoutedEventArgs.Handled
  parent: Microsoft.Windows.ExtendedRoutedEventArgs
  name: Handled
  nameWithType: ExtendedRoutedEventArgs.Handled
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs.Handled
- uid: Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  commentId: P:Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
  parent: Microsoft.Windows.ExtendedRoutedEventArgs
  name: OriginalSource
  nameWithType: ExtendedRoutedEventArgs.OriginalSource
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Windows
  commentId: N:Microsoft.Windows
  name: Microsoft.Windows
  nameWithType: Microsoft.Windows
  fullName: Microsoft.Windows
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget*
  commentId: Overload:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.DropTarget
  name: DropTarget
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.DropTarget
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.DropTarget
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).DropTarget
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).DropTarget
- uid: '{TItemsControlType}'
  commentId: '!:TItemsControlType'
  definition: TItemsControlType
  name: TItemsControlType
  nameWithType: TItemsControlType
  fullName: TItemsControlType
- uid: TItemsControlType
  name: TItemsControlType
  nameWithType: TItemsControlType
  fullName: TItemsControlType
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex*
  commentId: Overload:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndex
  name: InsertionIndex
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndex
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndex
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndex
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndex
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry*
  commentId: Overload:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.InsertionIndicatorGeometry
  name: InsertionIndicatorGeometry
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndicatorGeometry
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.InsertionIndicatorGeometry
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndicatorGeometry
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).InsertionIndicatorGeometry
- uid: System.Windows.Media.Geometry
  commentId: T:System.Windows.Media.Geometry
  parent: System.Windows.Media
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition*
  commentId: Overload:System.Windows.Controls.IndicatingInsertionLocationEventArgs`1.GetPosition
  name: GetPosition
  nameWithType: IndicatingInsertionLocationEventArgs<TItemsControlType>.GetPosition
  fullName: System.Windows.Controls.IndicatingInsertionLocationEventArgs<TItemsControlType>.GetPosition
  nameWithType.vb: IndicatingInsertionLocationEventArgs(Of TItemsControlType).GetPosition
  fullName.vb: System.Windows.Controls.IndicatingInsertionLocationEventArgs(Of TItemsControlType).GetPosition
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
