### YamlMime:ManagedReference
items:
- uid: System.Windows.FontStyle
  commentId: T:System.Windows.FontStyle
  id: FontStyle
  parent: System.Windows
  children:
  - System.Windows.FontStyle.Equals(System.Object)
  - System.Windows.FontStyle.Equals(System.Windows.FontStyle)
  - System.Windows.FontStyle.GetHashCode
  - System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)
  - System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)
  - System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.FontStyle.ToString
  langs:
  - csharp
  - vb
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Windows.FontStyle
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FontStyle
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents the style of a font face (for instance, as normal or italic).\n"
  example: []
  syntax:
    content: 'public struct FontStyle : IFormattable'
    content.vb: >-
      Public Structure FontStyle
          Implements IFormattable
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.FontStyle.Equals(System.Object)
  commentId: M:System.Windows.FontStyle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FontStyle.Equals(Object)
  fullName: System.Windows.FontStyle.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares an object with the current <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> instance for equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: "\nAn object that represents the <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare for equality.\n"
    return:
      type: System.Boolean
      description: "\ntrue to show the two instances are equal; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.FontStyle.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.FontStyle.Equals(System.Windows.FontStyle)
  commentId: M:System.Windows.FontStyle.Equals(System.Windows.FontStyle)
  id: Equals(System.Windows.FontStyle)
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: Equals(FontStyle)
  nameWithType: FontStyle.Equals(FontStyle)
  fullName: System.Windows.FontStyle.Equals(System.Windows.FontStyle)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 51
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares this <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> structure to another <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref>\nstructure for equality.\n"
  example: []
  syntax:
    content: public bool Equals(FontStyle fontStyle)
    parameters:
    - id: fontStyle
      type: System.Windows.FontStyle
      description: "\nAn instance of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare for equality.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the two instances of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> are equal; otherwise, false.\n"
    content.vb: Public Function Equals(fontStyle As FontStyle) As Boolean
  overload: System.Windows.FontStyle.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.FontStyle.GetHashCode
  commentId: M:System.Windows.FontStyle.GetHashCode
  id: GetHashCode
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FontStyle.GetHashCode()
  fullName: System.Windows.FontStyle.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 59
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRetrieves the hash code for this object.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nAn integer hash value.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.FontStyle.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)
  commentId: M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)
  id: op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: Equality(FontStyle, FontStyle)
  nameWithType: FontStyle.Equality(FontStyle, FontStyle)
  fullName: System.Windows.FontStyle.Equality(System.Windows.FontStyle, System.Windows.FontStyle)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two instances of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(FontStyle left, FontStyle right)
    parameters:
    - id: left
      type: System.Windows.FontStyle
      description: "\nThe first instance of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare.\n"
    - id: right
      type: System.Windows.FontStyle
      description: "\nThe second instance of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the specified <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> objects are equal; otherwise,\nfalse.\n"
    content.vb: Public Shared Operator =(left As FontStyle, right As FontStyle) As Boolean
  overload: System.Windows.FontStyle.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)
  commentId: M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)
  id: op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: Inequality(FontStyle, FontStyle)
  nameWithType: FontStyle.Inequality(FontStyle, FontStyle)
  fullName: System.Windows.FontStyle.Inequality(System.Windows.FontStyle, System.Windows.FontStyle)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nEvaluates two instances of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to determine inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(FontStyle left, FontStyle right)
    parameters:
    - id: left
      type: System.Windows.FontStyle
      description: "\nThe first instance of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare.\n"
    - id: right
      type: System.Windows.FontStyle
      description: "\nThe second instance of <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> to compare.\n"
    return:
      type: System.Boolean
      description: "\nfalse to show left is equal to right; otherwise, true.\n"
    content.vb: Public Shared Operator <>(left As FontStyle, right As FontStyle) As Boolean
  overload: System.Windows.FontStyle.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.FontStyle.ToString
  commentId: M:System.Windows.FontStyle.ToString
  id: ToString
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FontStyle.ToString()
  fullName: System.Windows.FontStyle.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 96
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a string that represents the current <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that represents the value of the <xref href=\"System.Windows.FontStyle\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: System.Windows.FontStyle.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.FontStyle
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  nameWithType: FontStyle.IFormattable.ToString(String, IFormatProvider)
  fullName: System.Windows.FontStyle.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/FontStyle.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.IFormattable.ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/FontStyle.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
    content.vb: Function System.IFormattable.ToString(format As String, formatProvider As IFormatProvider) As String Implements IFormattable.ToString
  overload: System.Windows.FontStyle.System#IFormattable#ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: FontStyle.System.IFormattable.ToString(String, IFormatProvider)
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.FontStyle
  commentId: T:System.Windows.FontStyle
  parent: System.Windows
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Windows.FontStyle
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.FontStyle.Equals*
  commentId: Overload:System.Windows.FontStyle.Equals
  name: Equals
  nameWithType: FontStyle.Equals
  fullName: System.Windows.FontStyle.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.FontStyle.GetHashCode*
  commentId: Overload:System.Windows.FontStyle.GetHashCode
  name: GetHashCode
  nameWithType: FontStyle.GetHashCode
  fullName: System.Windows.FontStyle.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.FontStyle.op_Equality*
  commentId: Overload:System.Windows.FontStyle.op_Equality
  name: Equality
  nameWithType: FontStyle.Equality
  fullName: System.Windows.FontStyle.Equality
- uid: System.Windows.FontStyle.op_Inequality*
  commentId: Overload:System.Windows.FontStyle.op_Inequality
  name: Inequality
  nameWithType: FontStyle.Inequality
  fullName: System.Windows.FontStyle.Inequality
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.FontStyle.ToString*
  commentId: Overload:System.Windows.FontStyle.ToString
  name: ToString
  nameWithType: FontStyle.ToString
  fullName: System.Windows.FontStyle.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FontStyle.System#IFormattable#ToString*
  commentId: Overload:System.Windows.FontStyle.System#IFormattable#ToString
  name: IFormattable.ToString
  nameWithType: FontStyle.IFormattable.ToString
  fullName: System.Windows.FontStyle.System.IFormattable.ToString
  nameWithType.vb: FontStyle.System.IFormattable.ToString
  name.vb: System.IFormattable.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
