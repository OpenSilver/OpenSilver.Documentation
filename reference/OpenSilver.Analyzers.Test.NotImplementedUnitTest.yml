### YamlMime:ManagedReference
items:
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  commentId: T:OpenSilver.Analyzers.Test.NotImplementedUnitTest
  id: NotImplementedUnitTest
  parent: OpenSilver.Analyzers.Test
  children:
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  - OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override
  langs:
  - csharp
  - vb
  name: NotImplementedUnitTest
  nameWithType: NotImplementedUnitTest
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  type: Class
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NotImplementedUnitTest
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 8
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestClass]

      public class NotImplementedUnitTest : CSharpAnalyzerVerifier<NotImplementedAnalyzer, MSTestVerifier>
    content.vb: >-
      <TestClass>

      Public Class NotImplementedUnitTest
          Inherits CSharpAnalyzerVerifier(Of NotImplementedAnalyzer, MSTestVerifier)
  inheritance:
  - System.Object
  - Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  - Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  inheritedMembers:
  - Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic
  - Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(System.String)
  - Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  - Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty
  id: When_Empty
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Empty()
  nameWithType: NotImplementedUnitTest.When_Empty()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Empty
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 23
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Empty()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Empty As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
  id: When_Accessing_Not_Implemented_Assembly
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Not_Implemented_Assembly()
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Not_Implemented_Assembly
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 33
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Not_Implemented_Assembly()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Not_Implemented_Assembly As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member
  id: When_Accessing_Implemented_Member
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Implemented_Member()
  nameWithType: NotImplementedUnitTest.When_Accessing_Implemented_Member()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Implemented_Member
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 67
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Implemented_Member()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Implemented_Member As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
  id: When_Accessing_Not_Implemented_Method
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Not_Implemented_Method()
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Method()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Not_Implemented_Method
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 112
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Not_Implemented_Method()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Not_Implemented_Method As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  id: When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 146
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
  id: When_Accessing_Method_In_Not_Implemented_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Method_In_Not_Implemented_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Method_In_Not_Implemented_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 196
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Method_In_Not_Implemented_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Method_In_Not_Implemented_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  id: When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 233
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
  id: When_Accessing_Not_Implemented_Property
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Not_Implemented_Property()
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Property()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Not_Implemented_Property
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 279
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Not_Implemented_Property()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Not_Implemented_Property As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  id: When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 313
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
  id: When_Accessing_Property_In_Not_Implemented_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Property_In_Not_Implemented_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Property_In_Not_Implemented_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 378
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Property_In_Not_Implemented_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Property_In_Not_Implemented_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  id: When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 424
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
  id: When_Accessing_Not_Implemented_Event
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Not_Implemented_Event()
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Event()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Not_Implemented_Event
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 470
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Not_Implemented_Event()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Not_Implemented_Event As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  id: When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 506
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
  id: When_Accessing_Event_In_Not_Implemented_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Event_In_Not_Implemented_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Event_In_Not_Implemented_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 553
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Event_In_Not_Implemented_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Event_In_Not_Implemented_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  id: When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type()
  nameWithType: NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 592
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly
  id: When_Not_Implemented_Assembly
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Not_Implemented_Assembly()
  nameWithType: NotImplementedUnitTest.When_Not_Implemented_Assembly()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Not_Implemented_Assembly
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 642
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Not_Implemented_Assembly()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Not_Implemented_Assembly As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
  id: When_Constructor_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Constructor_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Constructor_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Constructor_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 676
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Constructor_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Constructor_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
  id: When_Constructor_And_Type_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Constructor_And_Type_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Constructor_And_Type_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 710
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Constructor_And_Type_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Constructor_And_Type_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
  id: When_Constructor_And_Base_Type_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Constructor_And_Base_Type_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Constructor_And_Base_Type_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 741
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Constructor_And_Base_Type_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Constructor_And_Base_Type_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override
  id: When_Method_Is_Not_An_Override
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Method_Is_Not_An_Override()
  nameWithType: NotImplementedUnitTest.When_Method_Is_Not_An_Override()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Method_Is_Not_An_Override
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 781
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Method_Is_Not_An_Override()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Method_Is_Not_An_Override As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  id: When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Method_Is_An_Override_And_Base_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Method_Is_An_Override_And_Base_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 804
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Method_Is_An_Override_And_Base_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Method_Is_An_Override_And_Base_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override
  id: When_Property_Is_Not_An_Override
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Property_Is_Not_An_Override()
  nameWithType: NotImplementedUnitTest.When_Property_Is_Not_An_Override()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Property_Is_Not_An_Override
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 839
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Property_Is_Not_An_Override()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Property_Is_Not_An_Override As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  id: When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Property_Is_An_Override_And_Base_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Property_Is_An_Override_And_Base_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 862
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Property_Is_An_Override_And_Base_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Property_Is_An_Override_And_Base_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override
  id: When_Event_Is_Not_An_Override
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Event_Is_Not_An_Override()
  nameWithType: NotImplementedUnitTest.When_Event_Is_Not_An_Override()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Event_Is_Not_An_Override
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 897
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Event_Is_Not_An_Override()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Event_Is_Not_An_Override As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  id: When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax()
  nameWithType: NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 921
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  id: When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Event_Is_An_Override_And_Base_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Event_Is_An_Override_And_Base_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 951
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Event_Is_An_Override_And_Base_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Event_Is_An_Override_And_Base_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
  id: When_Base_Class_Declaration_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Base_Class_Declaration_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Base_Class_Declaration_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 989
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Base_Class_Declaration_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Base_Class_Declaration_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
  commentId: M:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
  id: When_Base_Base_Class_Declaration_Is_Not_Implemented
  parent: OpenSilver.Analyzers.Test.NotImplementedUnitTest
  langs:
  - csharp
  - vb
  name: When_Base_Base_Class_Declaration_Is_Not_Implemented()
  nameWithType: NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented()
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented()
  type: Method
  source:
    remote:
      path: src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: When_Base_Base_Class_Declaration_Is_Not_Implemented
    path: ../OpenSilverGit/src/Analyzers/NotImplemented.Tests/NotImplementedUnitTests.cs
    startLine: 1014
  assemblies:
  - OpenSilver.Analyzers.Tests
  namespace: OpenSilver.Analyzers.Test
  syntax:
    content: >-
      [TestMethod]

      public async Task When_Base_Base_Class_Declaration_Is_Not_Implemented()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <TestMethod>

      Public Function When_Base_Base_Class_Declaration_Is_Not_Implemented As Task
  overload: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: OpenSilver.Analyzers.Test
  commentId: N:OpenSilver.Analyzers.Test
  name: OpenSilver.Analyzers.Test
  nameWithType: OpenSilver.Analyzers.Test
  fullName: OpenSilver.Analyzers.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  commentId: T:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  parent: Microsoft.CodeAnalysis.Testing
  definition: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
  name: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>
  nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>
  nameWithType.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier)
  name.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
    name: AnalyzerVerifier
    nameWithType: AnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest`2
    name: CSharpAnalyzerTest
    nameWithType: CSharpAnalyzerTest
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
    name: AnalyzerVerifier
    nameWithType: AnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest`2
    name: CSharpAnalyzerTest
    nameWithType: CSharpAnalyzerTest
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  commentId: T:Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  parent: Microsoft.CodeAnalysis.CSharp.Testing
  definition: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
  name: CSharpAnalyzerVerifier<NotImplementedAnalyzer, MSTestVerifier>
  nameWithType: CSharpAnalyzerVerifier<NotImplementedAnalyzer, MSTestVerifier>
  fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>
  nameWithType.vb: CSharpAnalyzerVerifier(Of NotImplementedAnalyzer, MSTestVerifier)
  fullName.vb: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier)
  name.vb: CSharpAnalyzerVerifier(Of NotImplementedAnalyzer, MSTestVerifier)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
    name: CSharpAnalyzerVerifier
    nameWithType: CSharpAnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
    name: CSharpAnalyzerVerifier
    nameWithType: CSharpAnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenSilver.Analyzers.NotImplementedAnalyzer
    name: NotImplementedAnalyzer
    nameWithType: NotImplementedAnalyzer
    fullName: OpenSilver.Analyzers.NotImplementedAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    name: MSTestVerifier
    nameWithType: MSTestVerifier
    fullName: Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic
  parent: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  definition: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
  name: Diagnostic()
  nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic()
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic()
  nameWithType.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic()
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic()
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
    name: Diagnostic
    nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(System.String)
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(System.String)
  parent: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  definition: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
  name: Diagnostic(String)
  nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic(String)
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic(System.String)
  nameWithType.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic(String)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic(System.String)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
    name: Diagnostic
    nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  parent: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  definition: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  name: Diagnostic(DiagnosticDescriptor)
  nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic(DiagnosticDescriptor)
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  nameWithType.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic(DiagnosticDescriptor)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
    name: Diagnostic
    nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  parent: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest{OpenSilver.Analyzers.NotImplementedAnalyzer,Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier},Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier}
  definition: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  name: VerifyAnalyzerAsync(String, DiagnosticResult[])
  nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.VerifyAnalyzerAsync(String, DiagnosticResult[])
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.VerifyAnalyzerAsync(System.String, Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  nameWithType.vb: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).VerifyAnalyzerAsync(String, DiagnosticResult())
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).VerifyAnalyzerAsync(System.String, Microsoft.CodeAnalysis.Testing.DiagnosticResult())
  name.vb: VerifyAnalyzerAsync(String, DiagnosticResult())
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
    name: VerifyAnalyzerAsync
    nameWithType: AnalyzerVerifier<NotImplementedAnalyzer, CSharpAnalyzerTest<NotImplementedAnalyzer, MSTestVerifier>, MSTestVerifier>.VerifyAnalyzerAsync
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest<OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier>.VerifyAnalyzerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
    name: VerifyAnalyzerAsync
    nameWithType: AnalyzerVerifier(Of NotImplementedAnalyzer, CSharpAnalyzerTest(Of NotImplementedAnalyzer, MSTestVerifier), MSTestVerifier).VerifyAnalyzerAsync
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerTest(Of OpenSilver.Analyzers.NotImplementedAnalyzer, Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier), Microsoft.CodeAnalysis.Testing.Verifiers.MSTestVerifier).VerifyAnalyzerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
  commentId: T:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
  isExternal: true
  name: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>
  nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>
  nameWithType.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier)
  name.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
    name: AnalyzerVerifier
    nameWithType: AnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAnalyzer
    nameWithType: TAnalyzer
    fullName: TAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTest
    nameWithType: TTest
    fullName: TTest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVerifier
    nameWithType: TVerifier
    fullName: TVerifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3
    name: AnalyzerVerifier
    nameWithType: AnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAnalyzer
    nameWithType: TAnalyzer
    fullName: TAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTest
    nameWithType: TTest
    fullName: TTest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVerifier
    nameWithType: TVerifier
    fullName: TVerifier
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing
  commentId: N:Microsoft.CodeAnalysis.Testing
  isExternal: true
  name: Microsoft.CodeAnalysis.Testing
  nameWithType: Microsoft.CodeAnalysis.Testing
  fullName: Microsoft.CodeAnalysis.Testing
- uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
  commentId: T:Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
  isExternal: true
  name: CSharpAnalyzerVerifier<TAnalyzer, TVerifier>
  nameWithType: CSharpAnalyzerVerifier<TAnalyzer, TVerifier>
  fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier<TAnalyzer, TVerifier>
  nameWithType.vb: CSharpAnalyzerVerifier(Of TAnalyzer, TVerifier)
  fullName.vb: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier(Of TAnalyzer, TVerifier)
  name.vb: CSharpAnalyzerVerifier(Of TAnalyzer, TVerifier)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
    name: CSharpAnalyzerVerifier
    nameWithType: CSharpAnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAnalyzer
    nameWithType: TAnalyzer
    fullName: TAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVerifier
    nameWithType: TVerifier
    fullName: TVerifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier`2
    name: CSharpAnalyzerVerifier
    nameWithType: CSharpAnalyzerVerifier
    fullName: Microsoft.CodeAnalysis.CSharp.Testing.CSharpAnalyzerVerifier
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAnalyzer
    nameWithType: TAnalyzer
    fullName: TAnalyzer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVerifier
    nameWithType: TVerifier
    fullName: TVerifier
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.CSharp.Testing
  commentId: N:Microsoft.CodeAnalysis.CSharp.Testing
  isExternal: true
  name: Microsoft.CodeAnalysis.CSharp.Testing
  nameWithType: Microsoft.CodeAnalysis.CSharp.Testing
  fullName: Microsoft.CodeAnalysis.CSharp.Testing
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
  isExternal: true
  name: Diagnostic()
  nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic()
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic()
  nameWithType.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic()
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic()
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
    name: Diagnostic
    nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
  isExternal: true
  name: Diagnostic(String)
  nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic(String)
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic(System.String)
  nameWithType.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic(String)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic(System.String)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
    name: Diagnostic
    nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(System.String)
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  isExternal: true
  name: Diagnostic(DiagnosticDescriptor)
  nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic(DiagnosticDescriptor)
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  nameWithType.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic(DiagnosticDescriptor)
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
    name: Diagnostic
    nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.Diagnostic(Microsoft.CodeAnalysis.DiagnosticDescriptor)
    name: Diagnostic
    nameWithType: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).Diagnostic
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.CodeAnalysis.DiagnosticDescriptor
    name: DiagnosticDescriptor
    nameWithType: DiagnosticDescriptor
    fullName: Microsoft.CodeAnalysis.DiagnosticDescriptor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  commentId: M:Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  isExternal: true
  name: VerifyAnalyzerAsync(String, DiagnosticResult[])
  nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.VerifyAnalyzerAsync(String, DiagnosticResult[])
  fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.VerifyAnalyzerAsync(System.String, Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
  nameWithType.vb: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).VerifyAnalyzerAsync(String, DiagnosticResult())
  fullName.vb: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).VerifyAnalyzerAsync(System.String, Microsoft.CodeAnalysis.Testing.DiagnosticResult())
  name.vb: VerifyAnalyzerAsync(String, DiagnosticResult())
  spec.csharp:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
    name: VerifyAnalyzerAsync
    nameWithType: AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.VerifyAnalyzerAsync
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier<TAnalyzer, TTest, TVerifier>.VerifyAnalyzerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier`3.VerifyAnalyzerAsync(System.String,Microsoft.CodeAnalysis.Testing.DiagnosticResult[])
    name: VerifyAnalyzerAsync
    nameWithType: AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).VerifyAnalyzerAsync
    fullName: Microsoft.CodeAnalysis.Testing.AnalyzerVerifier(Of TAnalyzer, TTest, TVerifier).VerifyAnalyzerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    name: DiagnosticResult
    nameWithType: DiagnosticResult
    fullName: Microsoft.CodeAnalysis.Testing.DiagnosticResult
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty
  name: When_Empty
  nameWithType: NotImplementedUnitTest.When_Empty
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Empty
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
  name: When_Accessing_Not_Implemented_Assembly
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Assembly
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member
  name: When_Accessing_Implemented_Member
  nameWithType: NotImplementedUnitTest.When_Accessing_Implemented_Member
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Implemented_Member
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
  name: When_Accessing_Not_Implemented_Method
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Method
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  name: When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Method_And_Base_Implementation_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
  name: When_Accessing_Method_In_Not_Implemented_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Not_Implemented_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  name: When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Method_In_Type_With_Not_Implemented_Base_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
  name: When_Accessing_Not_Implemented_Property
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Property
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  name: When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Property_And_Base_Implementation_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
  name: When_Accessing_Property_In_Not_Implemented_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Not_Implemented_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  name: When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Property_In_Type_With_Not_Implemented_Base_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
  name: When_Accessing_Not_Implemented_Event
  nameWithType: NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Not_Implemented_Event
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  name: When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Override_Event_And_Base_Implementation_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
  name: When_Accessing_Event_In_Not_Implemented_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Not_Implemented_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  name: When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  nameWithType: NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Accessing_Event_In_Type_With_Not_Implemented_Base_Type
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly
  name: When_Not_Implemented_Assembly
  nameWithType: NotImplementedUnitTest.When_Not_Implemented_Assembly
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Not_Implemented_Assembly
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
  name: When_Constructor_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
  name: When_Constructor_And_Type_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Type_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
  name: When_Constructor_And_Base_Type_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Constructor_And_Base_Type_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override
  name: When_Method_Is_Not_An_Override
  nameWithType: NotImplementedUnitTest.When_Method_Is_Not_An_Override
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_Not_An_Override
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  name: When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Method_Is_An_Override_And_Base_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override
  name: When_Property_Is_Not_An_Override
  nameWithType: NotImplementedUnitTest.When_Property_Is_Not_An_Override
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_Not_An_Override
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  name: When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Property_Is_An_Override_And_Base_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override
  name: When_Event_Is_Not_An_Override
  nameWithType: NotImplementedUnitTest.When_Event_Is_Not_An_Override
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_Not_An_Override
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  name: When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  nameWithType: NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented_And_Uses_Event_Field_Syntax
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  name: When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Event_Is_An_Override_And_Base_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
  name: When_Base_Class_Declaration_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Class_Declaration_Is_Not_Implemented
- uid: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented*
  commentId: Overload:OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
  name: When_Base_Base_Class_Declaration_Is_Not_Implemented
  nameWithType: NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
  fullName: OpenSilver.Analyzers.Test.NotImplementedUnitTest.When_Base_Base_Class_Declaration_Is_Not_Implemented
