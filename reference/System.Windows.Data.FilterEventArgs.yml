### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.FilterEventArgs
  commentId: T:System.Windows.Data.FilterEventArgs
  id: FilterEventArgs
  parent: System.Windows.Data
  children:
  - System.Windows.Data.FilterEventArgs.#ctor(System.Object)
  - System.Windows.Data.FilterEventArgs.Accepted
  - System.Windows.Data.FilterEventArgs.Item
  langs:
  - csharp
  - vb
  name: FilterEventArgs
  nameWithType: FilterEventArgs
  fullName: System.Windows.Data.FilterEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FilterEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nArguments for the Filter event.\n"
  remarks: "\n<p>The event receiver should set Accepted to true if the item\npasses the filter, or false if it fails.</p>\n"
  example: []
  syntax:
    content: 'public class FilterEventArgs : EventArgs'
    content.vb: >-
      Public Class FilterEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Data.FilterEventArgs.#ctor(System.Object)
  commentId: M:System.Windows.Data.FilterEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.Data.FilterEventArgs
  langs:
  - csharp
  - vb
  name: FilterEventArgs(Object)
  nameWithType: FilterEventArgs.FilterEventArgs(Object)
  fullName: System.Windows.Data.FilterEventArgs.FilterEventArgs(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
    startLine: 24
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  syntax:
    content: public FilterEventArgs(object item)
    parameters:
    - id: item
      type: System.Object
    content.vb: Public Sub New(item As Object)
  overload: System.Windows.Data.FilterEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.FilterEventArgs.Accepted
  commentId: P:System.Windows.Data.FilterEventArgs.Accepted
  id: Accepted
  parent: System.Windows.Data.FilterEventArgs
  langs:
  - csharp
  - vb
  name: Accepted
  nameWithType: FilterEventArgs.Accepted
  fullName: System.Windows.Data.FilterEventArgs.Accepted
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Accepted
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  syntax:
    content: public bool Accepted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Accepted As Boolean
  overload: System.Windows.Data.FilterEventArgs.Accepted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.FilterEventArgs.Item
  commentId: P:System.Windows.Data.FilterEventArgs.Item
  id: Item
  parent: System.Windows.Data.FilterEventArgs
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: FilterEventArgs.Item
  fullName: System.Windows.Data.FilterEventArgs.Item
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Item
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/FilterEventArgs.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  syntax:
    content: public object Item { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Item As Object
  overload: System.Windows.Data.FilterEventArgs.Item*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Data.FilterEventArgs.#ctor*
  commentId: Overload:System.Windows.Data.FilterEventArgs.#ctor
  name: FilterEventArgs
  nameWithType: FilterEventArgs.FilterEventArgs
  fullName: System.Windows.Data.FilterEventArgs.FilterEventArgs
- uid: System.Windows.Data.FilterEventArgs.Accepted*
  commentId: Overload:System.Windows.Data.FilterEventArgs.Accepted
  name: Accepted
  nameWithType: FilterEventArgs.Accepted
  fullName: System.Windows.Data.FilterEventArgs.Accepted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.FilterEventArgs.Item*
  commentId: Overload:System.Windows.Data.FilterEventArgs.Item
  name: Item
  nameWithType: FilterEventArgs.Item
  fullName: System.Windows.Data.FilterEventArgs.Item
