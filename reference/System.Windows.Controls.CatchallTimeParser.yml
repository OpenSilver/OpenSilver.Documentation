### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.CatchallTimeParser
  commentId: T:System.Windows.Controls.CatchallTimeParser
  id: CatchallTimeParser
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.CatchallTimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  langs:
  - csharp
  - vb
  name: CatchallTimeParser
  nameWithType: CatchallTimeParser
  fullName: System.Windows.Controls.CatchallTimeParser
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeParsers/CatchallTimeParser.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CatchallTimeParser
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeParsers/CatchallTimeParser.cs
    startLine: 20
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nTimeParser that will allow very loose time to be entered. It will try\nto parse the first two numbers as hours and the second two numbers as \nminutes, and will not care about other characters, such as designators,\nseparators or non-time related characters.\nIf the first character is bigger than 2, it will parse only the first \ncharacter as an hour and will use the second two characters for minutes.\n"
  example: []
  syntax:
    content: 'public class CatchallTimeParser : TimeParser'
    content.vb: >-
      Public Class CatchallTimeParser
          Inherits TimeParser
  inheritance:
  - System.Object
  - System.Windows.Controls.TimeParser
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Controls.CatchallTimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  commentId: M:System.Windows.Controls.CatchallTimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  id: TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  parent: System.Windows.Controls.CatchallTimeParser
  langs:
  - csharp
  - vb
  name: TryParse(String, CultureInfo, out Nullable<DateTime>)
  nameWithType: CatchallTimeParser.TryParse(String, CultureInfo, out Nullable<DateTime>)
  fullName: System.Windows.Controls.CatchallTimeParser.TryParse(System.String, System.Globalization.CultureInfo, out System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeParsers/CatchallTimeParser.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryParse
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeParsers/CatchallTimeParser.cs
    startLine: 38
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nTries to parse a string to a DateTime.\n"
  remarks: >-
    The parsing is culture insensitive. A user can type 8p to

    indicate 20:00:00, or 20.
  example: []
  syntax:
    content: public override bool TryParse(string text, CultureInfo culture, out DateTime? result)
    parameters:
    - id: text
      type: System.String
      description: The text that should be parsed.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture being used.
    - id: result
      type: System.Nullable{System.DateTime}
      description: The parsed DateTime.
    return:
      type: System.Boolean
      description: "\nTrue if the parse was successful, false if it was not.\n"
    content.vb: Public Overrides Function TryParse(text As String, culture As CultureInfo, ByRef result As Date?) As Boolean
  overridden: System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  overload: System.Windows.Controls.CatchallTimeParser.TryParse*
  nameWithType.vb: CatchallTimeParser.TryParse(String, CultureInfo, ByRef Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Windows.Controls.CatchallTimeParser.TryParse(System.String, System.Globalization.CultureInfo, ByRef System.Nullable(Of System.DateTime))
  name.vb: TryParse(String, CultureInfo, ByRef Nullable(Of DateTime))
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.TimeParser
  commentId: T:System.Windows.Controls.TimeParser
  parent: System.Windows.Controls
  name: TimeParser
  nameWithType: TimeParser
  fullName: System.Windows.Controls.TimeParser
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  commentId: M:System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
  parent: System.Windows.Controls.TimeParser
  isExternal: true
  name: TryParse(String, CultureInfo, Nullable<DateTime>)
  nameWithType: TimeParser.TryParse(String, CultureInfo, Nullable<DateTime>)
  fullName: System.Windows.Controls.TimeParser.TryParse(System.String, System.Globalization.CultureInfo, System.Nullable<System.DateTime>)
  nameWithType.vb: TimeParser.TryParse(String, CultureInfo, Nullable(Of DateTime))
  fullName.vb: System.Windows.Controls.TimeParser.TryParse(System.String, System.Globalization.CultureInfo, System.Nullable(Of System.DateTime))
  name.vb: TryParse(String, CultureInfo, Nullable(Of DateTime))
  spec.csharp:
  - uid: System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
    name: TryParse
    nameWithType: TimeParser.TryParse
    fullName: System.Windows.Controls.TimeParser.TryParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.TimeParser.TryParse(System.String,System.Globalization.CultureInfo,System.Nullable{System.DateTime}@)
    name: TryParse
    nameWithType: TimeParser.TryParse
    fullName: System.Windows.Controls.TimeParser.TryParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.CatchallTimeParser.TryParse*
  commentId: Overload:System.Windows.Controls.CatchallTimeParser.TryParse
  name: TryParse
  nameWithType: CatchallTimeParser.TryParse
  fullName: System.Windows.Controls.CatchallTimeParser.TryParse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
