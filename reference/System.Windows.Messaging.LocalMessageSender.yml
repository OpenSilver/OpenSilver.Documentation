### YamlMime:ManagedReference
items:
- uid: System.Windows.Messaging.LocalMessageSender
  commentId: T:System.Windows.Messaging.LocalMessageSender
  id: LocalMessageSender
  parent: System.Windows.Messaging
  children:
  - System.Windows.Messaging.LocalMessageSender.#ctor(System.String)
  - System.Windows.Messaging.LocalMessageSender.#ctor(System.String,System.String)
  - System.Windows.Messaging.LocalMessageSender.Global
  - System.Windows.Messaging.LocalMessageSender.ReceiverDomain
  - System.Windows.Messaging.LocalMessageSender.ReceiverName
  - System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)
  - System.Windows.Messaging.LocalMessageSender.SendAsync(System.String,System.Object)
  - System.Windows.Messaging.LocalMessageSender.SendCompleted
  langs:
  - csharp
  - vb
  name: LocalMessageSender
  nameWithType: LocalMessageSender
  fullName: System.Windows.Messaging.LocalMessageSender
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LocalMessageSender
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 6
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nRepresents the sending end of a local messaging channel between two Silverlight-based\napplications.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public sealed class LocalMessageSender
    content.vb: >-
      <NotImplemented>

      Public NotInheritable Class LocalMessageSender
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Messaging.LocalMessageSender.Global
  commentId: F:System.Windows.Messaging.LocalMessageSender.Global
  id: Global
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: Global
  nameWithType: LocalMessageSender.Global
  fullName: System.Windows.Messaging.LocalMessageSender.Global
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Global
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 12
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nA value that represents the global domain.\n"
  example: []
  syntax:
    content: public const string Global = "*"
    return:
      type: System.String
    content.vb: Public Const Global As String = "*"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Messaging.LocalMessageSender.#ctor(System.String)
  commentId: M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: LocalMessageSender(String)
  nameWithType: LocalMessageSender.LocalMessageSender(String)
  fullName: System.Windows.Messaging.LocalMessageSender.LocalMessageSender(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Messaging.LocalMessageSender\" data-throw-if-not-resolved=\"false\"></xref>\nclass and configures it to send messages to the receiver with the specified name.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public LocalMessageSender(string receiverName)
    parameters:
    - id: receiverName
      type: System.String
      description: "\nThe <xref href=\"System.Windows.Messaging.LocalMessageReceiver.ReceiverName\" data-throw-if-not-resolved=\"false\"></xref> property value\nof the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this sender will send\nmessages to.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub New(receiverName As String)
  overload: System.Windows.Messaging.LocalMessageSender.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nreceiverName is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nreceiverName is longer than 256 characters.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageSender.#ctor(System.String,System.String)
  commentId: M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: LocalMessageSender(String, String)
  nameWithType: LocalMessageSender.LocalMessageSender(String, String)
  fullName: System.Windows.Messaging.LocalMessageSender.LocalMessageSender(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 57
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Messaging.LocalMessageSender\" data-throw-if-not-resolved=\"false\"></xref>\nclass and configures it to send messages to the receiver with the specified name\nand domain.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public LocalMessageSender(string receiverName, string receiverDomain)
    parameters:
    - id: receiverName
      type: System.String
      description: "\nThe <xref href=\"System.Windows.Messaging.LocalMessageReceiver.ReceiverName\" data-throw-if-not-resolved=\"false\"></xref> property value\nof the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this sender will send\nmessages to.\n"
    - id: receiverDomain
      type: System.String
      description: "\nThe domain of the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this sender\nwill send messages to, or <xref href=\"System.Windows.Messaging.LocalMessageSender.Global\" data-throw-if-not-resolved=\"false\"></xref>\nif the receiver is not scoped to a domain.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub New(receiverName As String, receiverDomain As String)
  overload: System.Windows.Messaging.LocalMessageSender.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nreceiverName is null.-or-receiverDomain is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nreceiverName is longer than 256 characters.-or-receiverDomain is longer than\n256 characters.-or-receiverDomain contains one or more invalid characters (&quot;,&quot;\nand &quot;:&quot;).\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageSender.SendCompleted
  commentId: E:System.Windows.Messaging.LocalMessageSender.SendCompleted
  id: SendCompleted
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: SendCompleted
  nameWithType: LocalMessageSender.SendCompleted
  fullName: System.Windows.Messaging.LocalMessageSender.SendCompleted
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SendCompleted
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nOccurs when the message has been successfully sent.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public event EventHandler<SendCompletedEventArgs> SendCompleted
    return:
      type: System.EventHandler{System.Windows.Messaging.SendCompletedEventArgs}
    content.vb: >-
      <NotImplemented>

      Public Event SendCompleted As EventHandler(Of SendCompletedEventArgs)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageSender.ReceiverDomain
  commentId: P:System.Windows.Messaging.LocalMessageSender.ReceiverDomain
  id: ReceiverDomain
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: ReceiverDomain
  nameWithType: LocalMessageSender.ReceiverDomain
  fullName: System.Windows.Messaging.LocalMessageSender.ReceiverDomain
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReceiverDomain
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nGets the domain of the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this\nsender will send messages to.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string ReceiverDomain { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe domain of the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this sender\nwill send messages to, depending on the receiver&apos;s <xref href=\"System.Windows.Messaging.LocalMessageReceiver.NameScope\" data-throw-if-not-resolved=\"false\"></xref>\nproperty value.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ReceiverDomain As String
  overload: System.Windows.Messaging.LocalMessageSender.ReceiverDomain*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageSender.ReceiverName
  commentId: P:System.Windows.Messaging.LocalMessageSender.ReceiverName
  id: ReceiverName
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: ReceiverName
  nameWithType: LocalMessageSender.ReceiverName
  fullName: System.Windows.Messaging.LocalMessageSender.ReceiverName
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReceiverName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nGets the name of the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this\nsender will send messages to.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string ReceiverName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the <xref href=\"System.Windows.Messaging.LocalMessageReceiver\" data-throw-if-not-resolved=\"false\"></xref> that this sender\nwill send messages to.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ReceiverName As String
  overload: System.Windows.Messaging.LocalMessageSender.ReceiverName*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)
  commentId: M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)
  id: SendAsync(System.String)
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: SendAsync(String)
  nameWithType: LocalMessageSender.SendAsync(String)
  fullName: System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SendAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 103
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nSends the specified message to the configured receiver asynchronously.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void SendAsync(string message)
    parameters:
    - id: message
      type: System.String
      description: "\nThe message to send.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub SendAsync(message As String)
  overload: System.Windows.Messaging.LocalMessageSender.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nmessage is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nmessage is longer than 40,960 characters.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageSender.SendAsync(System.String,System.Object)
  commentId: M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Windows.Messaging.LocalMessageSender
  langs:
  - csharp
  - vb
  name: SendAsync(String, Object)
  nameWithType: LocalMessageSender.SendAsync(String, Object)
  fullName: System.Windows.Messaging.LocalMessageSender.SendAsync(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SendAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageSender.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  summary: "\nSends the specified messages to the configured receiver asynchronously.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void SendAsync(string message, object userState)
    parameters:
    - id: message
      type: System.String
      description: "\nThe message to send.\n"
    - id: userState
      type: System.Object
      description: "\nA unique user-state object that functions as a task ID for the message transfer.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub SendAsync(message As String, userState As Object)
  overload: System.Windows.Messaging.LocalMessageSender.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nmessage is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nmessage is longer than 40,960 characters.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Messaging
  commentId: N:System.Windows.Messaging
  name: System.Windows.Messaging
  nameWithType: System.Windows.Messaging
  fullName: System.Windows.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Messaging.LocalMessageSender
  commentId: T:System.Windows.Messaging.LocalMessageSender
  name: LocalMessageSender
  nameWithType: LocalMessageSender
  fullName: System.Windows.Messaging.LocalMessageSender
- uid: System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  isExternal: true
- uid: System.Windows.Messaging.LocalMessageReceiver
  commentId: T:System.Windows.Messaging.LocalMessageReceiver
  name: LocalMessageReceiver
  nameWithType: LocalMessageReceiver
  fullName: System.Windows.Messaging.LocalMessageReceiver
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Messaging.LocalMessageSender.#ctor*
  commentId: Overload:System.Windows.Messaging.LocalMessageSender.#ctor
  name: LocalMessageSender
  nameWithType: LocalMessageSender.LocalMessageSender
  fullName: System.Windows.Messaging.LocalMessageSender.LocalMessageSender
- uid: System.Windows.Messaging.LocalMessageSender.Global
  commentId: F:System.Windows.Messaging.LocalMessageSender.Global
  isExternal: true
- uid: System.EventHandler{System.Windows.Messaging.SendCompletedEventArgs}
  commentId: T:System.EventHandler{System.Windows.Messaging.SendCompletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SendCompletedEventArgs>
  nameWithType: EventHandler<SendCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Messaging.SendCompletedEventArgs>
  nameWithType.vb: EventHandler(Of SendCompletedEventArgs)
  fullName.vb: System.EventHandler(Of System.Windows.Messaging.SendCompletedEventArgs)
  name.vb: EventHandler(Of SendCompletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Messaging.SendCompletedEventArgs
    name: SendCompletedEventArgs
    nameWithType: SendCompletedEventArgs
    fullName: System.Windows.Messaging.SendCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Messaging.SendCompletedEventArgs
    name: SendCompletedEventArgs
    nameWithType: SendCompletedEventArgs
    fullName: System.Windows.Messaging.SendCompletedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Messaging.LocalMessageReceiver.NameScope
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.NameScope
  isExternal: true
- uid: System.Windows.Messaging.LocalMessageSender.ReceiverDomain*
  commentId: Overload:System.Windows.Messaging.LocalMessageSender.ReceiverDomain
  name: ReceiverDomain
  nameWithType: LocalMessageSender.ReceiverDomain
  fullName: System.Windows.Messaging.LocalMessageSender.ReceiverDomain
- uid: System.Windows.Messaging.LocalMessageSender.ReceiverName*
  commentId: Overload:System.Windows.Messaging.LocalMessageSender.ReceiverName
  name: ReceiverName
  nameWithType: LocalMessageSender.ReceiverName
  fullName: System.Windows.Messaging.LocalMessageSender.ReceiverName
- uid: System.Windows.Messaging.LocalMessageSender.SendAsync*
  commentId: Overload:System.Windows.Messaging.LocalMessageSender.SendAsync
  name: SendAsync
  nameWithType: LocalMessageSender.SendAsync
  fullName: System.Windows.Messaging.LocalMessageSender.SendAsync
