### YamlMime:ManagedReference
items:
- uid: System.Windows.Navigation.UriMapper
  commentId: T:System.Windows.Navigation.UriMapper
  id: UriMapper
  parent: System.Windows.Navigation
  children:
  - System.Windows.Navigation.UriMapper.#ctor
  - System.Windows.Navigation.UriMapper.MapUri(System.Uri)
  - System.Windows.Navigation.UriMapper.UriMappings
  langs:
  - csharp
  - vb
  name: UriMapper
  nameWithType: UriMapper
  fullName: System.Windows.Navigation.UriMapper
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UriMapper
    path: ../OpenSilverGit/src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
    startLine: 21
  assemblies:
  - OpenSilver.Controls.Navigation
  namespace: System.Windows.Navigation
  summary: "\nDefault UriMapperBase implementation that uses a List of UriMapping \nobjects to map and transform URI values.\n"
  example: []
  syntax:
    content: 'public sealed class UriMapper : UriMapperBase'
    content.vb: >-
      Public NotInheritable Class UriMapper
          Inherits UriMapperBase
  inheritance:
  - System.Object
  - System.Windows.Navigation.UriMapperBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Navigation.UriMapper.#ctor
  commentId: M:System.Windows.Navigation.UriMapper.#ctor
  id: '#ctor'
  parent: System.Windows.Navigation.UriMapper
  langs:
  - csharp
  - vb
  name: UriMapper()
  nameWithType: UriMapper.UriMapper()
  fullName: System.Windows.Navigation.UriMapper.UriMapper()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
    startLine: 29
  assemblies:
  - OpenSilver.Controls.Navigation
  namespace: System.Windows.Navigation
  summary: "\nDefault constructor.\n"
  example: []
  syntax:
    content: public UriMapper()
    content.vb: Public Sub New
  overload: System.Windows.Navigation.UriMapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Navigation.UriMapper.UriMappings
  commentId: P:System.Windows.Navigation.UriMapper.UriMappings
  id: UriMappings
  parent: System.Windows.Navigation.UriMapper
  langs:
  - csharp
  - vb
  name: UriMappings
  nameWithType: UriMapper.UriMappings
  fullName: System.Windows.Navigation.UriMapper.UriMappings
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UriMappings
    path: ../OpenSilverGit/src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
    startLine: 41
  assemblies:
  - OpenSilver.Controls.Navigation
  namespace: System.Windows.Navigation
  summary: "\nGets a list of UriMapping objects.\n"
  example: []
  syntax:
    content: public Collection<UriMapping> UriMappings { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Navigation.UriMapping}
    content.vb: Public ReadOnly Property UriMappings As Collection(Of UriMapping)
  overload: System.Windows.Navigation.UriMapper.UriMappings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Navigation.UriMapper.MapUri(System.Uri)
  commentId: M:System.Windows.Navigation.UriMapper.MapUri(System.Uri)
  id: MapUri(System.Uri)
  parent: System.Windows.Navigation.UriMapper
  langs:
  - csharp
  - vb
  name: MapUri(Uri)
  nameWithType: UriMapper.MapUri(Uri)
  fullName: System.Windows.Navigation.UriMapper.MapUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MapUri
    path: ../OpenSilverGit/src/Runtime/Controls.Navigation/System/Windows/Navigation/UriMapper.cs
    startLine: 56
  assemblies:
  - OpenSilver.Controls.Navigation
  namespace: System.Windows.Navigation
  summary: "\nMaps a given URI and returns a mapped URI.\n"
  example: []
  syntax:
    content: public override Uri MapUri(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: Original URI value to be mapped to a new URI.
    return:
      type: System.Uri
      description: A URI derived from the <code data-dev-comment-type="paramref" class="paramref">uri</code> parameter.
    content.vb: Public Overrides Function MapUri(uri As Uri) As Uri
  overridden: System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
  overload: System.Windows.Navigation.UriMapper.MapUri*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Navigation
  commentId: N:System.Windows.Navigation
  name: System.Windows.Navigation
  nameWithType: System.Windows.Navigation
  fullName: System.Windows.Navigation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Navigation.UriMapperBase
  commentId: T:System.Windows.Navigation.UriMapperBase
  parent: System.Windows.Navigation
  name: UriMapperBase
  nameWithType: UriMapperBase
  fullName: System.Windows.Navigation.UriMapperBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Navigation.UriMapper.#ctor*
  commentId: Overload:System.Windows.Navigation.UriMapper.#ctor
  name: UriMapper
  nameWithType: UriMapper.UriMapper
  fullName: System.Windows.Navigation.UriMapper.UriMapper
- uid: System.Windows.Navigation.UriMapper.UriMappings*
  commentId: Overload:System.Windows.Navigation.UriMapper.UriMappings
  name: UriMappings
  nameWithType: UriMapper.UriMappings
  fullName: System.Windows.Navigation.UriMapper.UriMappings
- uid: System.Collections.ObjectModel.Collection{System.Windows.Navigation.UriMapping}
  commentId: T:System.Collections.ObjectModel.Collection{System.Windows.Navigation.UriMapping}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<UriMapping>
  nameWithType: Collection<UriMapping>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Navigation.UriMapping>
  nameWithType.vb: Collection(Of UriMapping)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Windows.Navigation.UriMapping)
  name.vb: Collection(Of UriMapping)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Navigation.UriMapping
    name: UriMapping
    nameWithType: UriMapping
    fullName: System.Windows.Navigation.UriMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Navigation.UriMapping
    name: UriMapping
    nameWithType: UriMapping
    fullName: System.Windows.Navigation.UriMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
  commentId: M:System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
  parent: System.Windows.Navigation.UriMapperBase
  isExternal: true
  name: MapUri(Uri)
  nameWithType: UriMapperBase.MapUri(Uri)
  fullName: System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
  spec.csharp:
  - uid: System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
    name: MapUri
    nameWithType: UriMapperBase.MapUri
    fullName: System.Windows.Navigation.UriMapperBase.MapUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Navigation.UriMapperBase.MapUri(System.Uri)
    name: MapUri
    nameWithType: UriMapperBase.MapUri
    fullName: System.Windows.Navigation.UriMapperBase.MapUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Navigation.UriMapper.MapUri*
  commentId: Overload:System.Windows.Navigation.UriMapper.MapUri
  name: MapUri
  nameWithType: UriMapper.MapUri
  fullName: System.Windows.Navigation.UriMapper.MapUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
