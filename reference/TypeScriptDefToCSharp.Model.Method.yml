### YamlMime:ManagedReference
items:
- uid: TypeScriptDefToCSharp.Model.Method
  commentId: T:TypeScriptDefToCSharp.Model.Method
  id: Method
  parent: TypeScriptDefToCSharp.Model
  children:
  - TypeScriptDefToCSharp.Model.Method.#ctor(System.Xml.Linq.XElement,TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration},TypeScriptDefToCSharp.TypeScriptDefContext)
  - TypeScriptDefToCSharp.Model.Method.#ctor(TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration})
  - TypeScriptDefToCSharp.Model.Method.IsConstructor
  - TypeScriptDefToCSharp.Model.Method.ToString
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: Method
  fullName: TypeScriptDefToCSharp.Model.Method
  type: Class
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Method
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
    startLine: 26
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: 'public class Method : Function, Declaration.Container<Param>, IDeclaration, IEnumerable<Param>, IEnumerable'
    content.vb: >-
      Public Class Method
          Inherits
           Function  Implements Declaration.Container(Of Param), IDeclaration, IEnumerable(Of Param), IEnumerable
  inheritance:
  - System.Object
  - TypeScriptDefToCSharp.Model.Declaration
  - TypeScriptDefToCSharp.Model.Function
  derivedClasses:
  - TypeScriptDefToCSharp.Model.Signature
  implements:
  - TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Param}
  - TypeScriptDefToCSharp.Model.IDeclaration
  - System.Collections.Generic.IEnumerable{TypeScriptDefToCSharp.Model.Param}
  - System.Collections.IEnumerable
  inheritedMembers:
  - TypeScriptDefToCSharp.Model.Function.Params
  - TypeScriptDefToCSharp.Model.Function.ReturnType
  - TypeScriptDefToCSharp.Model.Function.Optional
  - TypeScriptDefToCSharp.Model.Function.HasString
  - TypeScriptDefToCSharp.Model.Function.Static
  - TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  - TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
  - TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
  - TypeScriptDefToCSharp.Model.Function.GetEnumerator
  - TypeScriptDefToCSharp.Model.Function.System#Collections#IEnumerable#GetEnumerator
  - TypeScriptDefToCSharp.Model.Declaration.Name
  - TypeScriptDefToCSharp.Model.Declaration.Super
  - TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
  - TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String,System.Int32)
  - TypeScriptDefToCSharp.Model.Declaration.FirstAncestor``1
  - TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TypeScriptDefToCSharp.Model.Method.IsConstructor
  commentId: P:TypeScriptDefToCSharp.Model.Method.IsConstructor
  id: IsConstructor
  parent: TypeScriptDefToCSharp.Model.Method
  langs:
  - csharp
  - vb
  name: IsConstructor
  nameWithType: Method.IsConstructor
  fullName: TypeScriptDefToCSharp.Model.Method.IsConstructor
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsConstructor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
    startLine: 28
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public bool IsConstructor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsConstructor As Boolean
  overload: TypeScriptDefToCSharp.Model.Method.IsConstructor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TypeScriptDefToCSharp.Model.Method.#ctor(TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration})
  commentId: M:TypeScriptDefToCSharp.Model.Method.#ctor(TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration})
  id: '#ctor(TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration})'
  parent: TypeScriptDefToCSharp.Model.Method
  langs:
  - csharp
  - vb
  name: Method(Declaration.Container<Declaration>)
  nameWithType: Method.Method(Declaration.Container<Declaration>)
  fullName: TypeScriptDefToCSharp.Model.Method.Method(TypeScriptDefToCSharp.Model.Declaration.Container<TypeScriptDefToCSharp.Model.Declaration>)
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
    startLine: 30
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public Method(Declaration.Container<Declaration> super)
    parameters:
    - id: super
      type: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
    content.vb: Public Sub New(super As Declaration.Container(Of Declaration))
  overload: TypeScriptDefToCSharp.Model.Method.#ctor*
  nameWithType.vb: Method.Method(Declaration.Container(Of Declaration))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TypeScriptDefToCSharp.Model.Method.Method(TypeScriptDefToCSharp.Model.Declaration.Container(Of TypeScriptDefToCSharp.Model.Declaration))
  name.vb: Method(Declaration.Container(Of Declaration))
- uid: TypeScriptDefToCSharp.Model.Method.#ctor(System.Xml.Linq.XElement,TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration},TypeScriptDefToCSharp.TypeScriptDefContext)
  commentId: M:TypeScriptDefToCSharp.Model.Method.#ctor(System.Xml.Linq.XElement,TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration},TypeScriptDefToCSharp.TypeScriptDefContext)
  id: '#ctor(System.Xml.Linq.XElement,TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration},TypeScriptDefToCSharp.TypeScriptDefContext)'
  parent: TypeScriptDefToCSharp.Model.Method
  langs:
  - csharp
  - vb
  name: Method(XElement, Declaration.Container<Declaration>, TypeScriptDefContext)
  nameWithType: Method.Method(XElement, Declaration.Container<Declaration>, TypeScriptDefContext)
  fullName: TypeScriptDefToCSharp.Model.Method.Method(System.Xml.Linq.XElement, TypeScriptDefToCSharp.Model.Declaration.Container<TypeScriptDefToCSharp.Model.Declaration>, TypeScriptDefToCSharp.TypeScriptDefContext)
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
    startLine: 35
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public Method(XElement elem, Declaration.Container<Declaration> super, TypeScriptDefContext context)
    parameters:
    - id: elem
      type: System.Xml.Linq.XElement
    - id: super
      type: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
    - id: context
      type: TypeScriptDefToCSharp.TypeScriptDefContext
    content.vb: Public Sub New(elem As XElement, super As Declaration.Container(Of Declaration), context As TypeScriptDefContext)
  overload: TypeScriptDefToCSharp.Model.Method.#ctor*
  nameWithType.vb: Method.Method(XElement, Declaration.Container(Of Declaration), TypeScriptDefContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TypeScriptDefToCSharp.Model.Method.Method(System.Xml.Linq.XElement, TypeScriptDefToCSharp.Model.Declaration.Container(Of TypeScriptDefToCSharp.Model.Declaration), TypeScriptDefToCSharp.TypeScriptDefContext)
  name.vb: Method(XElement, Declaration.Container(Of Declaration), TypeScriptDefContext)
- uid: TypeScriptDefToCSharp.Model.Method.ToString
  commentId: M:TypeScriptDefToCSharp.Model.Method.ToString
  id: ToString
  parent: TypeScriptDefToCSharp.Model.Method
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Method.ToString()
  fullName: TypeScriptDefToCSharp.Model.Method.ToString()
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Method.cs
    startLine: 41
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: TypeScriptDefToCSharp.Model.Function.ToString
  overload: TypeScriptDefToCSharp.Model.Method.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TypeScriptDefToCSharp.Model
  commentId: N:TypeScriptDefToCSharp.Model
  name: TypeScriptDefToCSharp.Model
  nameWithType: TypeScriptDefToCSharp.Model
  fullName: TypeScriptDefToCSharp.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TypeScriptDefToCSharp.Model.Declaration
  commentId: T:TypeScriptDefToCSharp.Model.Declaration
  parent: TypeScriptDefToCSharp.Model
  name: Declaration
  nameWithType: Declaration
  fullName: TypeScriptDefToCSharp.Model.Declaration
- uid: TypeScriptDefToCSharp.Model.Function
  commentId: T:TypeScriptDefToCSharp.Model.Function
  parent: TypeScriptDefToCSharp.Model
  name: Function
  nameWithType: Function
  fullName: TypeScriptDefToCSharp.Model.Function
- uid: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Param}
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Param}
  parent: TypeScriptDefToCSharp.Model
  definition: TypeScriptDefToCSharp.Model.Declaration.Container`1
  name: Declaration.Container<Param>
  nameWithType: Declaration.Container<Param>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<TypeScriptDefToCSharp.Model.Param>
  nameWithType.vb: Declaration.Container(Of Param)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of TypeScriptDefToCSharp.Model.Param)
  name.vb: Declaration.Container(Of Param)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: <
    nameWithType: <
    fullName: <
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.IDeclaration
  commentId: T:TypeScriptDefToCSharp.Model.IDeclaration
  parent: TypeScriptDefToCSharp.Model
  name: IDeclaration
  nameWithType: IDeclaration
  fullName: TypeScriptDefToCSharp.Model.IDeclaration
- uid: System.Collections.Generic.IEnumerable{TypeScriptDefToCSharp.Model.Param}
  commentId: T:System.Collections.Generic.IEnumerable{TypeScriptDefToCSharp.Model.Param}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Param>
  nameWithType: IEnumerable<Param>
  fullName: System.Collections.Generic.IEnumerable<TypeScriptDefToCSharp.Model.Param>
  nameWithType.vb: IEnumerable(Of Param)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TypeScriptDefToCSharp.Model.Param)
  name.vb: IEnumerable(Of Param)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: TypeScriptDefToCSharp.Model.Function.Params
  commentId: P:TypeScriptDefToCSharp.Model.Function.Params
  parent: TypeScriptDefToCSharp.Model.Function
  name: Params
  nameWithType: Function.Params
  fullName: TypeScriptDefToCSharp.Model.Function.Params
- uid: TypeScriptDefToCSharp.Model.Function.ReturnType
  commentId: P:TypeScriptDefToCSharp.Model.Function.ReturnType
  parent: TypeScriptDefToCSharp.Model.Function
  name: ReturnType
  nameWithType: Function.ReturnType
  fullName: TypeScriptDefToCSharp.Model.Function.ReturnType
- uid: TypeScriptDefToCSharp.Model.Function.Optional
  commentId: P:TypeScriptDefToCSharp.Model.Function.Optional
  parent: TypeScriptDefToCSharp.Model.Function
  name: Optional
  nameWithType: Function.Optional
  fullName: TypeScriptDefToCSharp.Model.Function.Optional
- uid: TypeScriptDefToCSharp.Model.Function.HasString
  commentId: P:TypeScriptDefToCSharp.Model.Function.HasString
  parent: TypeScriptDefToCSharp.Model.Function
  name: HasString
  nameWithType: Function.HasString
  fullName: TypeScriptDefToCSharp.Model.Function.HasString
- uid: TypeScriptDefToCSharp.Model.Function.Static
  commentId: P:TypeScriptDefToCSharp.Model.Function.Static
  parent: TypeScriptDefToCSharp.Model.Function
  name: Static
  nameWithType: Function.Static
  fullName: TypeScriptDefToCSharp.Model.Function.Static
- uid: TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  commentId: M:TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  parent: TypeScriptDefToCSharp.Model.Function
  isExternal: true
  name: AddContent(XElement, TypeScriptDefContext)
  nameWithType: Function.AddContent(XElement, TypeScriptDefContext)
  fullName: TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement, TypeScriptDefToCSharp.TypeScriptDefContext)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
    name: AddContent
    nameWithType: Function.AddContent
    fullName: TypeScriptDefToCSharp.Model.Function.AddContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TypeScriptDefToCSharp.TypeScriptDefContext
    name: TypeScriptDefContext
    nameWithType: TypeScriptDefContext
    fullName: TypeScriptDefToCSharp.TypeScriptDefContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
    name: AddContent
    nameWithType: Function.AddContent
    fullName: TypeScriptDefToCSharp.Model.Function.AddContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TypeScriptDefToCSharp.TypeScriptDefContext
    name: TypeScriptDefContext
    nameWithType: TypeScriptDefContext
    fullName: TypeScriptDefToCSharp.TypeScriptDefContext
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
  commentId: M:TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
  parent: TypeScriptDefToCSharp.Model.Function
  name: GetJSParamsValues()
  nameWithType: Function.GetJSParamsValues()
  fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
    name: GetJSParamsValues
    nameWithType: Function.GetJSParamsValues
    fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
    name: GetJSParamsValues
    nameWithType: Function.GetJSParamsValues
    fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamsValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
  commentId: M:TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
  parent: TypeScriptDefToCSharp.Model.Function
  name: GetJSParamValue(Param)
  nameWithType: Function.GetJSParamValue(Param)
  fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
    name: GetJSParamValue
    nameWithType: Function.GetJSParamValue
    fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.GetJSParamValue(TypeScriptDefToCSharp.Model.Param)
    name: GetJSParamValue
    nameWithType: Function.GetJSParamValue
    fullName: TypeScriptDefToCSharp.Model.Function.GetJSParamValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefToCSharp.Model.Param
    name: Param
    nameWithType: Param
    fullName: TypeScriptDefToCSharp.Model.Param
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Function.GetEnumerator
  commentId: M:TypeScriptDefToCSharp.Model.Function.GetEnumerator
  parent: TypeScriptDefToCSharp.Model.Function
  name: GetEnumerator()
  nameWithType: Function.GetEnumerator()
  fullName: TypeScriptDefToCSharp.Model.Function.GetEnumerator()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.GetEnumerator
    name: GetEnumerator
    nameWithType: Function.GetEnumerator
    fullName: TypeScriptDefToCSharp.Model.Function.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.GetEnumerator
    name: GetEnumerator
    nameWithType: Function.GetEnumerator
    fullName: TypeScriptDefToCSharp.Model.Function.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Function.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TypeScriptDefToCSharp.Model.Function.System#Collections#IEnumerable#GetEnumerator
  parent: TypeScriptDefToCSharp.Model.Function
  name: IEnumerable.GetEnumerator()
  nameWithType: Function.IEnumerable.GetEnumerator()
  fullName: TypeScriptDefToCSharp.Model.Function.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Function.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Function.IEnumerable.GetEnumerator
    fullName: TypeScriptDefToCSharp.Model.Function.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Function.System.Collections.IEnumerable.GetEnumerator
    fullName: TypeScriptDefToCSharp.Model.Function.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Declaration.Name
  commentId: P:TypeScriptDefToCSharp.Model.Declaration.Name
  parent: TypeScriptDefToCSharp.Model.Declaration
  name: Name
  nameWithType: Declaration.Name
  fullName: TypeScriptDefToCSharp.Model.Declaration.Name
- uid: TypeScriptDefToCSharp.Model.Declaration.Super
  commentId: P:TypeScriptDefToCSharp.Model.Declaration.Super
  parent: TypeScriptDefToCSharp.Model.Declaration
  name: Super
  nameWithType: Declaration.Super
  fullName: TypeScriptDefToCSharp.Model.Declaration.Super
- uid: TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
  commentId: M:TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
  parent: TypeScriptDefToCSharp.Model.Declaration
  isExternal: true
  name: FullName(String)
  nameWithType: Declaration.FullName(String)
  fullName: TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
    name: FullName
    nameWithType: Declaration.FullName
    fullName: TypeScriptDefToCSharp.Model.Declaration.FullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.FullName(System.String)
    name: FullName
    nameWithType: Declaration.FullName
    fullName: TypeScriptDefToCSharp.Model.Declaration.FullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String,System.Int32)
  commentId: M:TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String,System.Int32)
  parent: TypeScriptDefToCSharp.Model.Declaration
  isExternal: true
  name: SkippedFullName(String, Int32)
  nameWithType: Declaration.SkippedFullName(String, Int32)
  fullName: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String, System.Int32)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String,System.Int32)
    name: SkippedFullName
    nameWithType: Declaration.SkippedFullName
    fullName: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName(System.String,System.Int32)
    name: SkippedFullName
    nameWithType: Declaration.SkippedFullName
    fullName: TypeScriptDefToCSharp.Model.Declaration.SkippedFullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor``1
  commentId: M:TypeScriptDefToCSharp.Model.Declaration.FirstAncestor``1
  parent: TypeScriptDefToCSharp.Model.Declaration
  name: FirstAncestor<TContainer>()
  nameWithType: Declaration.FirstAncestor<TContainer>()
  fullName: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor<TContainer>()
  nameWithType.vb: Declaration.FirstAncestor(Of TContainer)()
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor(Of TContainer)()
  name.vb: FirstAncestor(Of TContainer)()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor``1
    name: FirstAncestor<TContainer>
    nameWithType: Declaration.FirstAncestor<TContainer>
    fullName: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor<TContainer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor``1
    name: FirstAncestor(Of TContainer)
    nameWithType: Declaration.FirstAncestor(Of TContainer)
    fullName: TypeScriptDefToCSharp.Model.Declaration.FirstAncestor(Of TContainer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
  commentId: M:TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
  parent: TypeScriptDefToCSharp.Model.Declaration
  name: Export(TypeScriptDefContext)
  nameWithType: Declaration.Export(TypeScriptDefContext)
  fullName: TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
    name: Export
    nameWithType: Declaration.Export
    fullName: TypeScriptDefToCSharp.Model.Declaration.Export
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefToCSharp.TypeScriptDefContext
    name: TypeScriptDefContext
    nameWithType: TypeScriptDefContext
    fullName: TypeScriptDefToCSharp.TypeScriptDefContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Export(TypeScriptDefToCSharp.TypeScriptDefContext)
    name: Export
    nameWithType: Declaration.Export
    fullName: TypeScriptDefToCSharp.Model.Declaration.Export
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefToCSharp.TypeScriptDefContext
    name: TypeScriptDefContext
    nameWithType: TypeScriptDefContext
    fullName: TypeScriptDefToCSharp.TypeScriptDefContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container`1
  name: Declaration.Container<T>
  nameWithType: Declaration.Container<T>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<T>
  nameWithType.vb: Declaration.Container(Of T)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of T)
  name.vb: Declaration.Container(Of T)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefToCSharp.Model.Method.IsConstructor*
  commentId: Overload:TypeScriptDefToCSharp.Model.Method.IsConstructor
  name: IsConstructor
  nameWithType: Method.IsConstructor
  fullName: TypeScriptDefToCSharp.Model.Method.IsConstructor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TypeScriptDefToCSharp.Model.Method.#ctor*
  commentId: Overload:TypeScriptDefToCSharp.Model.Method.#ctor
  name: Method
  nameWithType: Method.Method
  fullName: TypeScriptDefToCSharp.Model.Method.Method
- uid: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
  parent: TypeScriptDefToCSharp.Model
  definition: TypeScriptDefToCSharp.Model.Declaration.Container`1
  name: Declaration.Container<Declaration>
  nameWithType: Declaration.Container<Declaration>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<TypeScriptDefToCSharp.Model.Declaration>
  nameWithType.vb: Declaration.Container(Of Declaration)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of TypeScriptDefToCSharp.Model.Declaration)
  name.vb: Declaration.Container(Of Declaration)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: <
    nameWithType: <
    fullName: <
  - uid: TypeScriptDefToCSharp.Model.Declaration
    name: Declaration
    nameWithType: Declaration
    fullName: TypeScriptDefToCSharp.Model.Declaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TypeScriptDefToCSharp.Model.Declaration
    name: Declaration
    nameWithType: Declaration
    fullName: TypeScriptDefToCSharp.Model.Declaration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: TypeScriptDefToCSharp.TypeScriptDefContext
  commentId: T:TypeScriptDefToCSharp.TypeScriptDefContext
  parent: TypeScriptDefToCSharp
  name: TypeScriptDefContext
  nameWithType: TypeScriptDefContext
  fullName: TypeScriptDefToCSharp.TypeScriptDefContext
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TypeScriptDefToCSharp
  commentId: N:TypeScriptDefToCSharp
  name: TypeScriptDefToCSharp
  nameWithType: TypeScriptDefToCSharp
  fullName: TypeScriptDefToCSharp
- uid: TypeScriptDefToCSharp.Model.Function.ToString
  commentId: M:TypeScriptDefToCSharp.Model.Function.ToString
  parent: TypeScriptDefToCSharp.Model.Function
  name: ToString()
  nameWithType: Function.ToString()
  fullName: TypeScriptDefToCSharp.Model.Function.ToString()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Function.ToString
    name: ToString
    nameWithType: Function.ToString
    fullName: TypeScriptDefToCSharp.Model.Function.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Function.ToString
    name: ToString
    nameWithType: Function.ToString
    fullName: TypeScriptDefToCSharp.Model.Function.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Method.ToString*
  commentId: Overload:TypeScriptDefToCSharp.Model.Method.ToString
  name: ToString
  nameWithType: Method.ToString
  fullName: TypeScriptDefToCSharp.Model.Method.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
