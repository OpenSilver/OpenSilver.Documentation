### YamlMime:ManagedReference
items:
- uid: System.Windows.Deployment
  commentId: T:System.Windows.Deployment
  id: Deployment
  parent: System.Windows
  children:
  - System.Windows.Deployment.#ctor
  - System.Windows.Deployment.Current
  - System.Windows.Deployment.EntryPointAssembly
  - System.Windows.Deployment.EntryPointAssemblyProperty
  - System.Windows.Deployment.EntryPointType
  - System.Windows.Deployment.EntryPointTypeProperty
  - System.Windows.Deployment.ExternalCallersFromCrossDomain
  - System.Windows.Deployment.ExternalCallersFromCrossDomainProperty
  - System.Windows.Deployment.ExternalParts
  - System.Windows.Deployment.ExternalPartsProperty
  - System.Windows.Deployment.InBrowserSettings
  - System.Windows.Deployment.InBrowserSettingsProperty
  - System.Windows.Deployment.OutOfBrowserSettings
  - System.Windows.Deployment.OutOfBrowserSettingsProperty
  - System.Windows.Deployment.Parts
  - System.Windows.Deployment.PartsProperty
  - System.Windows.Deployment.RuntimeVersion
  - System.Windows.Deployment.RuntimeVersionProperty
  langs:
  - csharp
  - vb
  name: Deployment
  nameWithType: Deployment
  fullName: System.Windows.Deployment
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Deployment
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nProvides application part and localization information in the application manifest\nwhen deploying a Silverlight-based application.\n"
  example: []
  syntax:
    content: 'public sealed class Deployment : DependencyObject, IDependencyObject'
    content.vb: >-
      Public NotInheritable Class Deployment
          Inherits DependencyObject
          Implements IDependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Deployment.#ctor
  commentId: M:System.Windows.Deployment.#ctor
  id: '#ctor'
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: Deployment()
  nameWithType: Deployment.Deployment()
  fullName: System.Windows.Deployment.Deployment()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Deployment\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Deployment()
    content.vb: Public Sub New
  overload: System.Windows.Deployment.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <xref href=\"System.Windows.Deployment.Current\" data-throw-if-not-resolved=\"false\"></xref> property has already been initialized.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Deployment.Current
  commentId: P:System.Windows.Deployment.Current
  id: Current
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: Deployment.Current
  fullName: System.Windows.Deployment.Current
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Current
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 42
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the current <xref href=\"System.Windows.Deployment\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static Deployment Current { get; }
    parameters: []
    return:
      type: System.Windows.Deployment
    content.vb: Public Shared ReadOnly Property Current As Deployment
  overload: System.Windows.Deployment.Current*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.EntryPointAssemblyProperty
  commentId: F:System.Windows.Deployment.EntryPointAssemblyProperty
  id: EntryPointAssemblyProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: EntryPointAssemblyProperty
  nameWithType: Deployment.EntryPointAssemblyProperty
  fullName: System.Windows.Deployment.EntryPointAssemblyProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EntryPointAssemblyProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 65
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.EntryPointAssembly\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty EntryPointAssemblyProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly EntryPointAssemblyProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.EntryPointAssembly
  commentId: P:System.Windows.Deployment.EntryPointAssembly
  id: EntryPointAssembly
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: EntryPointAssembly
  nameWithType: Deployment.EntryPointAssembly
  fullName: System.Windows.Deployment.EntryPointAssembly
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EntryPointAssembly
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 76
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a string name that identifies which part in the <xref href=\"System.Windows.Deployment\" data-throw-if-not-resolved=\"false\"></xref>\nis the entry point assembly.\n"
  example: []
  syntax:
    content: public string EntryPointAssembly { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string that names the assembly that should be used as the entry point assembly.\nThis is expected to be the name of one of the assemblies you specified as an\n<xref href=\"System.Windows.AssemblyPart\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property EntryPointAssembly As String
  overload: System.Windows.Deployment.EntryPointAssembly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.EntryPointTypeProperty
  commentId: F:System.Windows.Deployment.EntryPointTypeProperty
  id: EntryPointTypeProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: EntryPointTypeProperty
  nameWithType: Deployment.EntryPointTypeProperty
  fullName: System.Windows.Deployment.EntryPointTypeProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EntryPointTypeProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.EntryPointType\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty EntryPointTypeProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly EntryPointTypeProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.EntryPointType
  commentId: P:System.Windows.Deployment.EntryPointType
  id: EntryPointType
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: EntryPointType
  nameWithType: Deployment.EntryPointType
  fullName: System.Windows.Deployment.EntryPointType
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EntryPointType
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a string that identifies the namespace and type name of the class that contains\nthe <xref href=\"System.Windows.Application\" data-throw-if-not-resolved=\"false\"></xref> entry point for your application.\n"
  example: []
  syntax:
    content: public string EntryPointType { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe namespace and type name of the class that contains the <xref href=\"System.Windows.Application\" data-throw-if-not-resolved=\"false\"></xref>\nentry point.\n"
    content.vb: Public ReadOnly Property EntryPointType As String
  overload: System.Windows.Deployment.EntryPointType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.OutOfBrowserSettingsProperty
  commentId: F:System.Windows.Deployment.OutOfBrowserSettingsProperty
  id: OutOfBrowserSettingsProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: OutOfBrowserSettingsProperty
  nameWithType: Deployment.OutOfBrowserSettingsProperty
  fullName: System.Windows.Deployment.OutOfBrowserSettingsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OutOfBrowserSettingsProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.OutOfBrowserSettings\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty OutOfBrowserSettingsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly OutOfBrowserSettingsProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.OutOfBrowserSettings
  commentId: P:System.Windows.Deployment.OutOfBrowserSettings
  id: OutOfBrowserSettings
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: OutOfBrowserSettings
  nameWithType: Deployment.OutOfBrowserSettings
  fullName: System.Windows.Deployment.OutOfBrowserSettings
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OutOfBrowserSettings
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 138
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets an object that contains information about the application that is used for\nout-of-browser support.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public OutOfBrowserSettings OutOfBrowserSettings { get; }
    parameters: []
    return:
      type: System.Windows.OutOfBrowserSettings
      description: "\nInformation about the application that is used for out-of-browser support.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property OutOfBrowserSettings As OutOfBrowserSettings
  overload: System.Windows.Deployment.OutOfBrowserSettings*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.InBrowserSettingsProperty
  commentId: F:System.Windows.Deployment.InBrowserSettingsProperty
  id: InBrowserSettingsProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: InBrowserSettingsProperty
  nameWithType: Deployment.InBrowserSettingsProperty
  fullName: System.Windows.Deployment.InBrowserSettingsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InBrowserSettingsProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 152
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.InBrowserSettings\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty InBrowserSettingsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly InBrowserSettingsProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.InBrowserSettings
  commentId: P:System.Windows.Deployment.InBrowserSettings
  id: InBrowserSettings
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: InBrowserSettings
  nameWithType: Deployment.InBrowserSettings
  fullName: System.Windows.Deployment.InBrowserSettings
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InBrowserSettings
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 162
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets an object that contains information about the application that is used for\nin-browser support.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public InBrowserSettings InBrowserSettings { get; }
    parameters: []
    return:
      type: System.Windows.InBrowserSettings
      description: "\nAn object that contains information about the application that is used for in-browser\nsupport.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property InBrowserSettings As InBrowserSettings
  overload: System.Windows.Deployment.InBrowserSettings*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.PartsProperty
  commentId: F:System.Windows.Deployment.PartsProperty
  id: PartsProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: PartsProperty
  nameWithType: Deployment.PartsProperty
  fullName: System.Windows.Deployment.PartsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PartsProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 176
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.Parts\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty PartsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly PartsProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.Parts
  commentId: P:System.Windows.Deployment.Parts
  id: Parts
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: Parts
  nameWithType: Deployment.Parts
  fullName: System.Windows.Deployment.Parts
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Parts
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 184
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a collection of assembly parts that are included in the deployment.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public AssemblyPartCollection Parts { get; }
    parameters: []
    return:
      type: System.Windows.AssemblyPartCollection
      description: "\nThe collection of assembly parts. The default is an empty collection.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property Parts As AssemblyPartCollection
  overload: System.Windows.Deployment.Parts*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.ExternalPartsProperty
  commentId: F:System.Windows.Deployment.ExternalPartsProperty
  id: ExternalPartsProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: ExternalPartsProperty
  nameWithType: Deployment.ExternalPartsProperty
  fullName: System.Windows.Deployment.ExternalPartsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ExternalPartsProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 198
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.ExternalParts\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty ExternalPartsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly ExternalPartsProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.ExternalParts
  commentId: P:System.Windows.Deployment.ExternalParts
  id: ExternalParts
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: ExternalParts
  nameWithType: Deployment.ExternalParts
  fullName: System.Windows.Deployment.ExternalParts
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ExternalParts
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 207
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a collection of <xref href=\"System.Windows.ExternalPart\" data-throw-if-not-resolved=\"false\"></xref> instances that represent the\nexternal assemblies required by the application.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public ExternalPartCollection ExternalParts { get; }
    parameters: []
    return:
      type: System.Windows.ExternalPartCollection
      description: "\nThe collection of external assembly parts. The default is an empty collection.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ExternalParts As ExternalPartCollection
  overload: System.Windows.Deployment.ExternalParts*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.ExternalCallersFromCrossDomainProperty
  commentId: F:System.Windows.Deployment.ExternalCallersFromCrossDomainProperty
  id: ExternalCallersFromCrossDomainProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: ExternalCallersFromCrossDomainProperty
  nameWithType: Deployment.ExternalCallersFromCrossDomainProperty
  fullName: System.Windows.Deployment.ExternalCallersFromCrossDomainProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ExternalCallersFromCrossDomainProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 221
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.ExternalCallersFromCrossDomain\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty ExternalCallersFromCrossDomainProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly ExternalCallersFromCrossDomainProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.ExternalCallersFromCrossDomain
  commentId: P:System.Windows.Deployment.ExternalCallersFromCrossDomain
  id: ExternalCallersFromCrossDomain
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: ExternalCallersFromCrossDomain
  nameWithType: Deployment.ExternalCallersFromCrossDomain
  fullName: System.Windows.Deployment.ExternalCallersFromCrossDomain
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ExternalCallersFromCrossDomain
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 230
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates the level of access that cross-domain callers have\nto the Silverlight-based application in this deployment.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public CrossDomainAccess ExternalCallersFromCrossDomain { get; }
    parameters: []
    return:
      type: System.Windows.CrossDomainAccess
      description: "\nA value that indicates the access level of cross-domain callers.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ExternalCallersFromCrossDomain As CrossDomainAccess
  overload: System.Windows.Deployment.ExternalCallersFromCrossDomain*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Deployment.RuntimeVersionProperty
  commentId: F:System.Windows.Deployment.RuntimeVersionProperty
  id: RuntimeVersionProperty
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: RuntimeVersionProperty
  nameWithType: Deployment.RuntimeVersionProperty
  fullName: System.Windows.Deployment.RuntimeVersionProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RuntimeVersionProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 244
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.Deployment.RuntimeVersion\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static readonly DependencyProperty RuntimeVersionProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly RuntimeVersionProperty As DependencyProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Deployment.RuntimeVersion
  commentId: P:System.Windows.Deployment.RuntimeVersion
  id: RuntimeVersion
  parent: System.Windows.Deployment
  langs:
  - csharp
  - vb
  name: RuntimeVersion
  nameWithType: Deployment.RuntimeVersion
  fullName: System.Windows.Deployment.RuntimeVersion
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Deployment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RuntimeVersion
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Deployment.cs
    startLine: 252
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the Silverlight runtime version that this deployment supports.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string RuntimeVersion { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe Silverlight runtime version that this deployment supports.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property RuntimeVersion As String
  overload: System.Windows.Deployment.RuntimeVersion*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  commentId: M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Deployment
  commentId: T:System.Windows.Deployment
  parent: System.Windows
  name: Deployment
  nameWithType: Deployment
  fullName: System.Windows.Deployment
- uid: System.Windows.Deployment.Current
  commentId: P:System.Windows.Deployment.Current
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Deployment.#ctor*
  commentId: Overload:System.Windows.Deployment.#ctor
  name: Deployment
  nameWithType: Deployment.Deployment
  fullName: System.Windows.Deployment.Deployment
- uid: System.Windows.Deployment.Current*
  commentId: Overload:System.Windows.Deployment.Current
  name: Current
  nameWithType: Deployment.Current
  fullName: System.Windows.Deployment.Current
- uid: System.Windows.Deployment.EntryPointAssembly
  commentId: P:System.Windows.Deployment.EntryPointAssembly
  isExternal: true
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.AssemblyPart
  commentId: T:System.Windows.AssemblyPart
  name: AssemblyPart
  nameWithType: AssemblyPart
  fullName: System.Windows.AssemblyPart
- uid: System.Windows.Deployment.EntryPointAssembly*
  commentId: Overload:System.Windows.Deployment.EntryPointAssembly
  name: EntryPointAssembly
  nameWithType: Deployment.EntryPointAssembly
  fullName: System.Windows.Deployment.EntryPointAssembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Deployment.EntryPointType
  commentId: P:System.Windows.Deployment.EntryPointType
  isExternal: true
- uid: System.Windows.Application
  commentId: T:System.Windows.Application
  parent: System.Windows
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Deployment.EntryPointType*
  commentId: Overload:System.Windows.Deployment.EntryPointType
  name: EntryPointType
  nameWithType: Deployment.EntryPointType
  fullName: System.Windows.Deployment.EntryPointType
- uid: System.Windows.Deployment.OutOfBrowserSettings
  commentId: P:System.Windows.Deployment.OutOfBrowserSettings
  isExternal: true
- uid: System.Windows.Deployment.OutOfBrowserSettings*
  commentId: Overload:System.Windows.Deployment.OutOfBrowserSettings
  name: OutOfBrowserSettings
  nameWithType: Deployment.OutOfBrowserSettings
  fullName: System.Windows.Deployment.OutOfBrowserSettings
- uid: System.Windows.OutOfBrowserSettings
  commentId: T:System.Windows.OutOfBrowserSettings
  parent: System.Windows
  name: OutOfBrowserSettings
  nameWithType: OutOfBrowserSettings
  fullName: System.Windows.OutOfBrowserSettings
- uid: System.Windows.Deployment.InBrowserSettings
  commentId: P:System.Windows.Deployment.InBrowserSettings
  isExternal: true
- uid: System.Windows.Deployment.InBrowserSettings*
  commentId: Overload:System.Windows.Deployment.InBrowserSettings
  name: InBrowserSettings
  nameWithType: Deployment.InBrowserSettings
  fullName: System.Windows.Deployment.InBrowserSettings
- uid: System.Windows.InBrowserSettings
  commentId: T:System.Windows.InBrowserSettings
  parent: System.Windows
  name: InBrowserSettings
  nameWithType: InBrowserSettings
  fullName: System.Windows.InBrowserSettings
- uid: System.Windows.Deployment.Parts
  commentId: P:System.Windows.Deployment.Parts
  isExternal: true
- uid: System.Windows.Deployment.Parts*
  commentId: Overload:System.Windows.Deployment.Parts
  name: Parts
  nameWithType: Deployment.Parts
  fullName: System.Windows.Deployment.Parts
- uid: System.Windows.AssemblyPartCollection
  commentId: T:System.Windows.AssemblyPartCollection
  parent: System.Windows
  name: AssemblyPartCollection
  nameWithType: AssemblyPartCollection
  fullName: System.Windows.AssemblyPartCollection
- uid: System.Windows.Deployment.ExternalParts
  commentId: P:System.Windows.Deployment.ExternalParts
  isExternal: true
- uid: System.Windows.ExternalPart
  commentId: T:System.Windows.ExternalPart
  name: ExternalPart
  nameWithType: ExternalPart
  fullName: System.Windows.ExternalPart
- uid: System.Windows.Deployment.ExternalParts*
  commentId: Overload:System.Windows.Deployment.ExternalParts
  name: ExternalParts
  nameWithType: Deployment.ExternalParts
  fullName: System.Windows.Deployment.ExternalParts
- uid: System.Windows.ExternalPartCollection
  commentId: T:System.Windows.ExternalPartCollection
  parent: System.Windows
  name: ExternalPartCollection
  nameWithType: ExternalPartCollection
  fullName: System.Windows.ExternalPartCollection
- uid: System.Windows.Deployment.ExternalCallersFromCrossDomain
  commentId: P:System.Windows.Deployment.ExternalCallersFromCrossDomain
  isExternal: true
- uid: System.Windows.Deployment.ExternalCallersFromCrossDomain*
  commentId: Overload:System.Windows.Deployment.ExternalCallersFromCrossDomain
  name: ExternalCallersFromCrossDomain
  nameWithType: Deployment.ExternalCallersFromCrossDomain
  fullName: System.Windows.Deployment.ExternalCallersFromCrossDomain
- uid: System.Windows.CrossDomainAccess
  commentId: T:System.Windows.CrossDomainAccess
  parent: System.Windows
  name: CrossDomainAccess
  nameWithType: CrossDomainAccess
  fullName: System.Windows.CrossDomainAccess
- uid: System.Windows.Deployment.RuntimeVersion
  commentId: P:System.Windows.Deployment.RuntimeVersion
  isExternal: true
- uid: System.Windows.Deployment.RuntimeVersion*
  commentId: Overload:System.Windows.Deployment.RuntimeVersion
  name: RuntimeVersion
  nameWithType: Deployment.RuntimeVersion
  fullName: System.Windows.Deployment.RuntimeVersion
