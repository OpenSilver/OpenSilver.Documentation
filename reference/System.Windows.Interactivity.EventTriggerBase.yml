### YamlMime:ManagedReference
items:
- uid: System.Windows.Interactivity.EventTriggerBase
  commentId: T:System.Windows.Interactivity.EventTriggerBase
  id: EventTriggerBase
  parent: System.Windows.Interactivity
  children:
  - System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
  - System.Windows.Interactivity.EventTriggerBase.GetEventName
  - System.Windows.Interactivity.EventTriggerBase.OnAttached
  - System.Windows.Interactivity.EventTriggerBase.OnDetaching
  - System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)
  - System.Windows.Interactivity.EventTriggerBase.Source
  - System.Windows.Interactivity.EventTriggerBase.SourceName
  - System.Windows.Interactivity.EventTriggerBase.SourceNameProperty
  - System.Windows.Interactivity.EventTriggerBase.SourceObject
  - System.Windows.Interactivity.EventTriggerBase.SourceObjectProperty
  - System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
  langs:
  - csharp
  - vb
  name: EventTriggerBase
  nameWithType: EventTriggerBase
  fullName: System.Windows.Interactivity.EventTriggerBase
  type: Class
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EventTriggerBase
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 75
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nRepresents a trigger that can listen to an object other than its AssociatedObject.\n"
  remarks: This is an infrastructure class. Trigger authors should derive from EventTriggerBase&lt;T> instead of this class.
  example: []
  syntax:
    content: 'public abstract class EventTriggerBase : TriggerBase, IAttachedObject'
    content.vb: >-
      Public MustInherit Class EventTriggerBase
          Inherits TriggerBase
          Implements IAttachedObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  - System.Windows.Interactivity.TriggerBase
  derivedClasses:
  - System.Windows.Interactivity.EventTriggerBase`1
  implements:
  - System.Windows.Interactivity.IAttachedObject
  inheritedMembers:
  - System.Windows.Interactivity.TriggerBase.ActionsProperty
  - System.Windows.Interactivity.TriggerBase.AssociatedObject
  - System.Windows.Interactivity.TriggerBase.Actions
  - System.Windows.Interactivity.TriggerBase.PreviewInvoke
  - System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  - System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  - System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  - System.Windows.Interactivity.TriggerBase.Detach
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Interactivity.EventTriggerBase.SourceObjectProperty
  commentId: F:System.Windows.Interactivity.EventTriggerBase.SourceObjectProperty
  id: SourceObjectProperty
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: SourceObjectProperty
  nameWithType: EventTriggerBase.SourceObjectProperty
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceObjectProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SourceObjectProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 82
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  syntax:
    content: public static readonly DependencyProperty SourceObjectProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly SourceObjectProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Interactivity.EventTriggerBase.SourceNameProperty
  commentId: F:System.Windows.Interactivity.EventTriggerBase.SourceNameProperty
  id: SourceNameProperty
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: SourceNameProperty
  nameWithType: EventTriggerBase.SourceNameProperty
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceNameProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SourceNameProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 89
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  syntax:
    content: public static readonly DependencyProperty SourceNameProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly SourceNameProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
  commentId: P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
  id: AssociatedObjectTypeConstraint
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: AssociatedObjectTypeConstraint
  nameWithType: EventTriggerBase.AssociatedObjectTypeConstraint
  fullName: System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AssociatedObjectTypeConstraint
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 100
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the type constraint of the associated object.\n"
  remarks: Define a TypeConstraintAttribute on a derived type to constrain the types it may be attached to.
  example: []
  syntax:
    content: protected sealed override Type AssociatedObjectTypeConstraint { get; }
    parameters: []
    return:
      type: System.Type
      description: The associated object type constraint.
    content.vb: Protected NotOverridable Overrides ReadOnly Property AssociatedObjectTypeConstraint As Type
  overridden: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  overload: System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint*
  modifiers.csharp:
  - protected
  - sealed
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
  - ReadOnly
- uid: System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
  commentId: P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
  id: SourceTypeConstraint
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: SourceTypeConstraint
  nameWithType: EventTriggerBase.SourceTypeConstraint
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SourceTypeConstraint
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 119
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the source type constraint.\n"
  example: []
  syntax:
    content: protected Type SourceTypeConstraint { get; }
    parameters: []
    return:
      type: System.Type
      description: The source type constraint.
    content.vb: Protected ReadOnly Property SourceTypeConstraint As Type
  overload: System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Windows.Interactivity.EventTriggerBase.SourceObject
  commentId: P:System.Windows.Interactivity.EventTriggerBase.SourceObject
  id: SourceObject
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: SourceObject
  nameWithType: EventTriggerBase.SourceObject
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceObject
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SourceObject
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 131
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets or sets the target object. If TargetObject is not set, the target will look for the object specified by TargetName. If an element referred to by TargetName cannot be found, the target will default to the AssociatedObject. This is a dependency property.\n"
  example: []
  syntax:
    content: public object SourceObject { get; set; }
    parameters: []
    return:
      type: System.Object
      description: The target object.
    content.vb: Public Property SourceObject As Object
  overload: System.Windows.Interactivity.EventTriggerBase.SourceObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Interactivity.EventTriggerBase.SourceName
  commentId: P:System.Windows.Interactivity.EventTriggerBase.SourceName
  id: SourceName
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: SourceName
  nameWithType: EventTriggerBase.SourceName
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceName
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SourceName
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 141
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets or sets the name of the element this EventTriggerBase listens for as a source. If the name is not set or cannot be resolved, the AssociatedObject will be used.  This is a dependency property.\n"
  example: []
  syntax:
    content: public string SourceName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name of the source element.
    content.vb: Public Property SourceName As String
  overload: System.Windows.Interactivity.EventTriggerBase.SourceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Interactivity.EventTriggerBase.Source
  commentId: P:System.Windows.Interactivity.EventTriggerBase.Source
  id: Source
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: EventTriggerBase.Source
  fullName: System.Windows.Interactivity.EventTriggerBase.Source
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Source
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 153
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the resolved source. If <code></code> is not set or cannot be resolved, defaults to AssociatedObject.\n"
  remarks: In general, this property should be used in place of AssociatedObject in derived classes.
  example: []
  syntax:
    content: public object Source { get; }
    parameters: []
    return:
      type: System.Object
      description: The resolved source object.
    content.vb: Public ReadOnly Property Source As Object
  overload: System.Windows.Interactivity.EventTriggerBase.Source*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The element pointed to by <code></code> does not satisify the type constraint.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Interactivity.EventTriggerBase.GetEventName
  commentId: M:System.Windows.Interactivity.EventTriggerBase.GetEventName
  id: GetEventName
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: GetEventName()
  nameWithType: EventTriggerBase.GetEventName()
  fullName: System.Windows.Interactivity.EventTriggerBase.GetEventName()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEventName
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 218
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nSpecifies the name of the Event this EventTriggerBase is listening for.\n"
  example: []
  syntax:
    content: protected abstract string GetEventName()
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetEventName As String
  overload: System.Windows.Interactivity.EventTriggerBase.GetEventName*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)
  commentId: M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)
  id: OnEvent(System.EventArgs)
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: OnEvent(EventArgs)
  nameWithType: EventTriggerBase.OnEvent(EventArgs)
  fullName: System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnEvent
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 227
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nCalled when the event associated with this EventTriggerBase is fired. By default, this will invoke all actions on the trigger.\n"
  remarks: Override this to provide more granular control over when actions associated with this trigger will be invoked.
  example: []
  syntax:
    content: protected virtual void OnEvent(EventArgs eventArgs)
    parameters:
    - id: eventArgs
      type: System.EventArgs
      description: The <xref href="System.EventArgs" data-throw-if-not-resolved="false"></xref> instance containing the event data.
    content.vb: Protected Overridable Sub OnEvent(eventArgs As EventArgs)
  overload: System.Windows.Interactivity.EventTriggerBase.OnEvent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Interactivity.EventTriggerBase.OnAttached
  commentId: M:System.Windows.Interactivity.EventTriggerBase.OnAttached
  id: OnAttached
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: OnAttached()
  nameWithType: EventTriggerBase.OnAttached()
  fullName: System.Windows.Interactivity.EventTriggerBase.OnAttached()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnAttached
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 273
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nCalled after the trigger is attached to an AssociatedObject.\n"
  example: []
  syntax:
    content: protected override void OnAttached()
    content.vb: Protected Overrides Sub OnAttached
  overridden: System.Windows.Interactivity.TriggerBase.OnAttached
  overload: System.Windows.Interactivity.EventTriggerBase.OnAttached*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Windows.Interactivity.EventTriggerBase.OnDetaching
  commentId: M:System.Windows.Interactivity.EventTriggerBase.OnDetaching
  id: OnDetaching
  parent: System.Windows.Interactivity.EventTriggerBase
  langs:
  - csharp
  - vb
  name: OnDetaching()
  nameWithType: EventTriggerBase.OnDetaching()
  fullName: System.Windows.Interactivity.EventTriggerBase.OnDetaching()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/EventTriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnDetaching
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/EventTriggerBase.cs
    startLine: 323
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nCalled when the trigger is being detached from its AssociatedObject, but before it has actually occurred.\n"
  example: []
  syntax:
    content: protected override void OnDetaching()
    content.vb: Protected Overrides Sub OnDetaching
  overridden: System.Windows.Interactivity.TriggerBase.OnDetaching
  overload: System.Windows.Interactivity.EventTriggerBase.OnDetaching*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Windows.Interactivity
  commentId: N:System.Windows.Interactivity
  name: System.Windows.Interactivity
  nameWithType: System.Windows.Interactivity
  fullName: System.Windows.Interactivity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Interactivity.TriggerBase
  commentId: T:System.Windows.Interactivity.TriggerBase
  parent: System.Windows.Interactivity
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.Interactivity.TriggerBase
- uid: System.Windows.Interactivity.IAttachedObject
  commentId: T:System.Windows.Interactivity.IAttachedObject
  parent: System.Windows.Interactivity
  name: IAttachedObject
  nameWithType: IAttachedObject
  fullName: System.Windows.Interactivity.IAttachedObject
- uid: System.Windows.Interactivity.TriggerBase.ActionsProperty
  commentId: F:System.Windows.Interactivity.TriggerBase.ActionsProperty
  parent: System.Windows.Interactivity.TriggerBase
  name: ActionsProperty
  nameWithType: TriggerBase.ActionsProperty
  fullName: System.Windows.Interactivity.TriggerBase.ActionsProperty
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObject
  commentId: P:System.Windows.Interactivity.TriggerBase.AssociatedObject
  parent: System.Windows.Interactivity.TriggerBase
  name: AssociatedObject
  nameWithType: TriggerBase.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObject
- uid: System.Windows.Interactivity.TriggerBase.Actions
  commentId: P:System.Windows.Interactivity.TriggerBase.Actions
  parent: System.Windows.Interactivity.TriggerBase
  name: Actions
  nameWithType: TriggerBase.Actions
  fullName: System.Windows.Interactivity.TriggerBase.Actions
- uid: System.Windows.Interactivity.TriggerBase.PreviewInvoke
  commentId: E:System.Windows.Interactivity.TriggerBase.PreviewInvoke
  parent: System.Windows.Interactivity.TriggerBase
  name: PreviewInvoke
  nameWithType: TriggerBase.PreviewInvoke
  fullName: System.Windows.Interactivity.TriggerBase.PreviewInvoke
- uid: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  commentId: M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  parent: System.Windows.Interactivity.TriggerBase
  isExternal: true
  name: InvokeActions(Object)
  nameWithType: TriggerBase.InvokeActions(Object)
  fullName: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  spec.csharp:
  - uid: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
    name: InvokeActions
    nameWithType: TriggerBase.InvokeActions
    fullName: System.Windows.Interactivity.TriggerBase.InvokeActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
    name: InvokeActions
    nameWithType: TriggerBase.InvokeActions
    fullName: System.Windows.Interactivity.TriggerBase.InvokeActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  commentId: P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  parent: System.Windows.Interactivity.TriggerBase
  name: IAttachedObject.AssociatedObject
  nameWithType: TriggerBase.IAttachedObject.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  nameWithType.vb: TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  name.vb: System.Windows.Interactivity.IAttachedObject.AssociatedObject
- uid: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.TriggerBase
  name: Attach(DependencyObject)
  nameWithType: TriggerBase.Attach(DependencyObject)
  fullName: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: TriggerBase.Attach
    fullName: System.Windows.Interactivity.TriggerBase.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: TriggerBase.Attach
    fullName: System.Windows.Interactivity.TriggerBase.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.TriggerBase.Detach
  commentId: M:System.Windows.Interactivity.TriggerBase.Detach
  parent: System.Windows.Interactivity.TriggerBase
  name: Detach()
  nameWithType: TriggerBase.Detach()
  fullName: System.Windows.Interactivity.TriggerBase.Detach()
  spec.csharp:
  - uid: System.Windows.Interactivity.TriggerBase.Detach
    name: Detach
    nameWithType: TriggerBase.Detach
    fullName: System.Windows.Interactivity.TriggerBase.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.TriggerBase.Detach
    name: Detach
    nameWithType: TriggerBase.Detach
    fullName: System.Windows.Interactivity.TriggerBase.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.DependencyObjectHelper
  definition: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors()
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors()
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors()
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors(DependencyObject)
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors(DependencyObject)
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.DependencyObjectHelper
  commentId: T:System.Windows.Interactivity.DependencyObjectHelper
  parent: System.Windows.Interactivity
  name: DependencyObjectHelper
  nameWithType: DependencyObjectHelper
  fullName: System.Windows.Interactivity.DependencyObjectHelper
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  commentId: P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  parent: System.Windows.Interactivity.TriggerBase
  name: AssociatedObjectTypeConstraint
  nameWithType: TriggerBase.AssociatedObjectTypeConstraint
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
- uid: System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
  name: AssociatedObjectTypeConstraint
  nameWithType: EventTriggerBase.AssociatedObjectTypeConstraint
  fullName: System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
  name: SourceTypeConstraint
  nameWithType: EventTriggerBase.SourceTypeConstraint
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint
- uid: System.Windows.Interactivity.EventTriggerBase.SourceObject*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.SourceObject
  name: SourceObject
  nameWithType: EventTriggerBase.SourceObject
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceObject
- uid: System.Windows.Interactivity.EventTriggerBase.SourceName*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.SourceName
  name: SourceName
  nameWithType: EventTriggerBase.SourceName
  fullName: System.Windows.Interactivity.EventTriggerBase.SourceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Interactivity.EventTriggerBase.Source*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.Source
  name: Source
  nameWithType: EventTriggerBase.Source
  fullName: System.Windows.Interactivity.EventTriggerBase.Source
- uid: System.Windows.Interactivity.EventTriggerBase.GetEventName*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.GetEventName
  name: GetEventName
  nameWithType: EventTriggerBase.GetEventName
  fullName: System.Windows.Interactivity.EventTriggerBase.GetEventName
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Interactivity.EventTriggerBase.OnEvent*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.OnEvent
  name: OnEvent
  nameWithType: EventTriggerBase.OnEvent
  fullName: System.Windows.Interactivity.EventTriggerBase.OnEvent
- uid: System.Windows.Interactivity.TriggerBase.OnAttached
  commentId: M:System.Windows.Interactivity.TriggerBase.OnAttached
  parent: System.Windows.Interactivity.TriggerBase
  name: OnAttached()
  nameWithType: TriggerBase.OnAttached()
  fullName: System.Windows.Interactivity.TriggerBase.OnAttached()
  spec.csharp:
  - uid: System.Windows.Interactivity.TriggerBase.OnAttached
    name: OnAttached
    nameWithType: TriggerBase.OnAttached
    fullName: System.Windows.Interactivity.TriggerBase.OnAttached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.TriggerBase.OnAttached
    name: OnAttached
    nameWithType: TriggerBase.OnAttached
    fullName: System.Windows.Interactivity.TriggerBase.OnAttached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.EventTriggerBase.OnAttached*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.OnAttached
  name: OnAttached
  nameWithType: EventTriggerBase.OnAttached
  fullName: System.Windows.Interactivity.EventTriggerBase.OnAttached
- uid: System.Windows.Interactivity.TriggerBase.OnDetaching
  commentId: M:System.Windows.Interactivity.TriggerBase.OnDetaching
  parent: System.Windows.Interactivity.TriggerBase
  name: OnDetaching()
  nameWithType: TriggerBase.OnDetaching()
  fullName: System.Windows.Interactivity.TriggerBase.OnDetaching()
  spec.csharp:
  - uid: System.Windows.Interactivity.TriggerBase.OnDetaching
    name: OnDetaching
    nameWithType: TriggerBase.OnDetaching
    fullName: System.Windows.Interactivity.TriggerBase.OnDetaching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.TriggerBase.OnDetaching
    name: OnDetaching
    nameWithType: TriggerBase.OnDetaching
    fullName: System.Windows.Interactivity.TriggerBase.OnDetaching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.EventTriggerBase.OnDetaching*
  commentId: Overload:System.Windows.Interactivity.EventTriggerBase.OnDetaching
  name: OnDetaching
  nameWithType: EventTriggerBase.OnDetaching
  fullName: System.Windows.Interactivity.EventTriggerBase.OnDetaching
