### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  commentId: T:System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  parent: System.Windows
  children:
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  - vb
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LogicalTreeHelper
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 23
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nProvides static helper methods for querying objects in the logical tree.\n"
  example: []
  syntax:
    content: public static class LogicalTreeHelper
    content.vb: Public Module LogicalTreeHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  commentId: M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  - vb
  name: FindLogicalNode(DependencyObject, String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject, String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject, System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FindLogicalNode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAttempts to find and return an object that has the specified name. The search\nstarts from the specified object and continues into subnodes of the logical tree.\n"
  example: []
  syntax:
    content: public static DependencyObject FindLogicalNode(DependencyObject logicalTreeNode, string elementName)
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "\nThe object to start searching from.\n"
    - id: elementName
      type: System.String
      description: "\nThe name of the object to find.\n"
    return:
      type: System.Windows.DependencyObject
      description: "\nThe object with the matching name, if one is found; returns null if no matching\nname was found in the logical tree.\n"
    content.vb: Public Shared Function FindLogicalNode(logicalTreeNode As DependencyObject, elementName As String) As DependencyObject
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  commentId: M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  - vb
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetChildren
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 104
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the collection of immediate child objects of the specified object, by\nprocessing the logical tree.\n"
  example: []
  syntax:
    content: public static IEnumerable GetChildren(DependencyObject current)
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "\nThe object from which to start processing the logical tree.\n"
    return:
      type: System.Collections.IEnumerable
      description: "\nThe enumerable collection of immediate child objects from the logical tree of\nthe specified object.\n"
    content.vb: Public Shared Function GetChildren(current As DependencyObject) As IEnumerable
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  commentId: M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  - vb
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetChildren
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the collection of immediate child objects of the specified <xref href=\"System.Windows.FrameworkElement\" data-throw-if-not-resolved=\"false\"></xref>\nby processing the logical tree.\n"
  example: []
  syntax:
    content: public static IEnumerable GetChildren(FrameworkElement current)
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "\nThe object from which to start processing the logical tree.\n"
    return:
      type: System.Collections.IEnumerable
      description: "\nThe enumerable collection of immediate child objects starting from current in the logical tree.\n"
    content.vb: Public Shared Function GetChildren(current As FrameworkElement) As IEnumerable
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  commentId: M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  - vb
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetParent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 148
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the parent object of the specified object by processing the logical tree.\n"
  example: []
  syntax:
    content: public static DependencyObject GetParent(DependencyObject current)
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "\nThe object to find the parent object for.\n"
    return:
      type: System.Windows.DependencyObject
      description: "\nThe requested parent object.\n"
    content.vb: Public Shared Function GetParent(current As DependencyObject) As DependencyObject
  overload: System.Windows.LogicalTreeHelper.GetParent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.FrameworkElement)
  commentId: M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.FrameworkElement)
  id: GetParent(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  - vb
  name: GetParent(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetParent(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetParent(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetParent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/LogicalTreeHelper.cs
    startLine: 172
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the parent object of the specified object by processing the logical tree.\n"
  example: []
  syntax:
    content: public static DependencyObject GetParent(FrameworkElement current)
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "\nThe object to find the parent object for.\n"
    return:
      type: System.Windows.DependencyObject
      description: "\nThe requested parent object.\n"
    content.vb: Public Shared Function GetParent(current As FrameworkElement) As DependencyObject
  overload: System.Windows.LogicalTreeHelper.GetParent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  commentId: Overload:System.Windows.LogicalTreeHelper.FindLogicalNode
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  commentId: Overload:System.Windows.LogicalTreeHelper.GetChildren
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
  fullName: System.Windows.LogicalTreeHelper.GetChildren
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent*
  commentId: Overload:System.Windows.LogicalTreeHelper.GetParent
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
  fullName: System.Windows.LogicalTreeHelper.GetParent
