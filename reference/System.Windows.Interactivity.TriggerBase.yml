### YamlMime:ManagedReference
items:
- uid: System.Windows.Interactivity.TriggerBase
  commentId: T:System.Windows.Interactivity.TriggerBase
  id: TriggerBase
  parent: System.Windows.Interactivity
  children:
  - System.Windows.Interactivity.TriggerBase.Actions
  - System.Windows.Interactivity.TriggerBase.ActionsProperty
  - System.Windows.Interactivity.TriggerBase.AssociatedObject
  - System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  - System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  - System.Windows.Interactivity.TriggerBase.Detach
  - System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  - System.Windows.Interactivity.TriggerBase.OnAttached
  - System.Windows.Interactivity.TriggerBase.OnDetaching
  - System.Windows.Interactivity.TriggerBase.PreviewInvoke
  - System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  langs:
  - csharp
  - vb
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.Interactivity.TriggerBase
  type: Class
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TriggerBase
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 77
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nRepresents an object that can invoke Actions conditionally.\n"
  remarks: This is an infrastructure class. Trigger authors should derive from Trigger&lt;T> instead of this class.
  example: []
  syntax:
    content: 'public abstract class TriggerBase : DependencyObject, IAttachedObject'
    content.vb: >-
      Public MustInherit Class TriggerBase
          Inherits DependencyObject
          Implements IAttachedObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  derivedClasses:
  - System.Windows.Interactivity.EventTriggerBase
  - System.Windows.Interactivity.TriggerBase`1
  implements:
  - System.Windows.Interactivity.IAttachedObject
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Interactivity.TriggerBase.ActionsProperty
  commentId: F:System.Windows.Interactivity.TriggerBase.ActionsProperty
  id: ActionsProperty
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: ActionsProperty
  nameWithType: TriggerBase.ActionsProperty
  fullName: System.Windows.Interactivity.TriggerBase.ActionsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ActionsProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 97
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  syntax:
    content: public static readonly DependencyProperty ActionsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly ActionsProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObject
  commentId: P:System.Windows.Interactivity.TriggerBase.AssociatedObject
  id: AssociatedObject
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: AssociatedObject
  nameWithType: TriggerBase.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObject
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AssociatedObject
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 120
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the object to which the trigger is attached.\n"
  example: []
  syntax:
    content: protected DependencyObject AssociatedObject { get; }
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: The associated object.
    content.vb: Protected ReadOnly Property AssociatedObject As DependencyObject
  overload: System.Windows.Interactivity.TriggerBase.AssociatedObject*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  commentId: P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  id: AssociatedObjectTypeConstraint
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: AssociatedObjectTypeConstraint
  nameWithType: TriggerBase.AssociatedObjectTypeConstraint
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AssociatedObjectTypeConstraint
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 135
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the type constraint of the associated object.\n"
  example: []
  syntax:
    content: protected virtual Type AssociatedObjectTypeConstraint { get; }
    parameters: []
    return:
      type: System.Type
      description: The associated object type constraint.
    content.vb: Protected Overridable ReadOnly Property AssociatedObjectTypeConstraint As Type
  overload: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: System.Windows.Interactivity.TriggerBase.Actions
  commentId: P:System.Windows.Interactivity.TriggerBase.Actions
  id: Actions
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: TriggerBase.Actions
  fullName: System.Windows.Interactivity.TriggerBase.Actions
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Actions
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 150
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the actions associated with this trigger.\n"
  example: []
  syntax:
    content: public TriggerActionCollection Actions { get; }
    parameters: []
    return:
      type: System.Windows.Interactivity.TriggerActionCollection
      description: The actions associated with this trigger.
    content.vb: Public ReadOnly Property Actions As TriggerActionCollection
  overload: System.Windows.Interactivity.TriggerBase.Actions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Interactivity.TriggerBase.PreviewInvoke
  commentId: E:System.Windows.Interactivity.TriggerBase.PreviewInvoke
  id: PreviewInvoke
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: PreviewInvoke
  nameWithType: TriggerBase.PreviewInvoke
  fullName: System.Windows.Interactivity.TriggerBase.PreviewInvoke
  type: Event
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PreviewInvoke
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 161
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nEvent handler for registering to PreviewInvoke.\n"
  example: []
  syntax:
    content: public event EventHandler<PreviewInvokeEventArgs> PreviewInvoke
    return:
      type: System.EventHandler{System.Windows.Interactivity.PreviewInvokeEventArgs}
    content.vb: Public Event PreviewInvoke As EventHandler(Of PreviewInvokeEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  commentId: M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  id: InvokeActions(System.Object)
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: InvokeActions(Object)
  nameWithType: TriggerBase.InvokeActions(Object)
  fullName: System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InvokeActions
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 167
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nInvoke all actions associated with this trigger.\n"
  remarks: Derived classes should call this to fire the trigger.
  example: []
  syntax:
    content: protected void InvokeActions(object parameter)
    parameters:
    - id: parameter
      type: System.Object
    content.vb: Protected Sub InvokeActions(parameter As Object)
  overload: System.Windows.Interactivity.TriggerBase.InvokeActions*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Interactivity.TriggerBase.OnAttached
  commentId: M:System.Windows.Interactivity.TriggerBase.OnAttached
  id: OnAttached
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: OnAttached()
  nameWithType: TriggerBase.OnAttached()
  fullName: System.Windows.Interactivity.TriggerBase.OnAttached()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnAttached
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 190
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nCalled after the trigger is attached to an AssociatedObject.\n"
  example: []
  syntax:
    content: protected virtual void OnAttached()
    content.vb: Protected Overridable Sub OnAttached
  overload: System.Windows.Interactivity.TriggerBase.OnAttached*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Interactivity.TriggerBase.OnDetaching
  commentId: M:System.Windows.Interactivity.TriggerBase.OnDetaching
  id: OnDetaching
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: OnDetaching()
  nameWithType: TriggerBase.OnDetaching()
  fullName: System.Windows.Interactivity.TriggerBase.OnDetaching()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnDetaching
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 197
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nCalled when the trigger is being detached from its AssociatedObject, but before it has actually occurred.\n"
  example: []
  syntax:
    content: protected virtual void OnDetaching()
    content.vb: Protected Overridable Sub OnDetaching
  overload: System.Windows.Interactivity.TriggerBase.OnDetaching*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  commentId: P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  id: System#Windows#Interactivity#IAttachedObject#AssociatedObject
  isEii: true
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: IAttachedObject.AssociatedObject
  nameWithType: TriggerBase.IAttachedObject.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.Windows.Interactivity.IAttachedObject.AssociatedObject
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 219
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the associated object.\n"
  example: []
  syntax:
    content: DependencyObject IAttachedObject.AssociatedObject { get; }
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: The associated object.
    content.vb: ReadOnly WriteOnly Property System.Windows.Interactivity.IAttachedObject.AssociatedObject As DependencyObject Implements IAttachedObject.AssociatedObject
  overload: System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject*
  implements:
  - System.Windows.Interactivity.IAttachedObject.AssociatedObject
  nameWithType.vb: TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Windows.Interactivity.IAttachedObject.AssociatedObject
- uid: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  id: Attach(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: Attach(DependencyObject)
  nameWithType: TriggerBase.Attach(DependencyObject)
  fullName: System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Attach
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 233
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nAttaches to the specified object.\n"
  example: []
  syntax:
    content: public void Attach(DependencyObject dependencyObject)
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: The object to attach to.
    content.vb: Public Sub Attach(dependencyObject As DependencyObject)
  overload: System.Windows.Interactivity.TriggerBase.Attach*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Cannot host the same trigger on more than one object at a time.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: dependencyObject does not satisfy the trigger type constraint.
  implements:
  - System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Interactivity.TriggerBase.Detach
  commentId: M:System.Windows.Interactivity.TriggerBase.Detach
  id: Detach
  parent: System.Windows.Interactivity.TriggerBase
  langs:
  - csharp
  - vb
  name: Detach()
  nameWithType: TriggerBase.Detach()
  fullName: System.Windows.Interactivity.TriggerBase.Detach()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/TriggerBase.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Detach
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/TriggerBase.cs
    startLine: 268
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nDetaches this instance from its associated object.\n"
  example: []
  syntax:
    content: public void Detach()
    content.vb: Public Sub Detach
  overload: System.Windows.Interactivity.TriggerBase.Detach*
  implements:
  - System.Windows.Interactivity.IAttachedObject.Detach
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Interactivity
  commentId: N:System.Windows.Interactivity
  name: System.Windows.Interactivity
  nameWithType: System.Windows.Interactivity
  fullName: System.Windows.Interactivity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Interactivity.IAttachedObject
  commentId: T:System.Windows.Interactivity.IAttachedObject
  parent: System.Windows.Interactivity
  name: IAttachedObject
  nameWithType: IAttachedObject
  fullName: System.Windows.Interactivity.IAttachedObject
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.DependencyObjectHelper
  definition: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors()
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors()
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors()
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors(DependencyObject)
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors(DependencyObject)
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.DependencyObjectHelper
  commentId: T:System.Windows.Interactivity.DependencyObjectHelper
  parent: System.Windows.Interactivity
  name: DependencyObjectHelper
  nameWithType: DependencyObjectHelper
  fullName: System.Windows.Interactivity.DependencyObjectHelper
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObject*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.AssociatedObject
  name: AssociatedObject
  nameWithType: TriggerBase.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObject
- uid: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
  name: AssociatedObjectTypeConstraint
  nameWithType: TriggerBase.AssociatedObjectTypeConstraint
  fullName: System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Interactivity.TriggerBase.Actions*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.Actions
  name: Actions
  nameWithType: TriggerBase.Actions
  fullName: System.Windows.Interactivity.TriggerBase.Actions
- uid: System.Windows.Interactivity.TriggerActionCollection
  commentId: T:System.Windows.Interactivity.TriggerActionCollection
  parent: System.Windows.Interactivity
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.Interactivity.TriggerActionCollection
- uid: System.EventHandler{System.Windows.Interactivity.PreviewInvokeEventArgs}
  commentId: T:System.EventHandler{System.Windows.Interactivity.PreviewInvokeEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PreviewInvokeEventArgs>
  nameWithType: EventHandler<PreviewInvokeEventArgs>
  fullName: System.EventHandler<System.Windows.Interactivity.PreviewInvokeEventArgs>
  nameWithType.vb: EventHandler(Of PreviewInvokeEventArgs)
  fullName.vb: System.EventHandler(Of System.Windows.Interactivity.PreviewInvokeEventArgs)
  name.vb: EventHandler(Of PreviewInvokeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Interactivity.PreviewInvokeEventArgs
    name: PreviewInvokeEventArgs
    nameWithType: PreviewInvokeEventArgs
    fullName: System.Windows.Interactivity.PreviewInvokeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Interactivity.PreviewInvokeEventArgs
    name: PreviewInvokeEventArgs
    nameWithType: PreviewInvokeEventArgs
    fullName: System.Windows.Interactivity.PreviewInvokeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.TriggerBase.InvokeActions*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.InvokeActions
  name: InvokeActions
  nameWithType: TriggerBase.InvokeActions
  fullName: System.Windows.Interactivity.TriggerBase.InvokeActions
- uid: System.Windows.Interactivity.TriggerBase.OnAttached*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.OnAttached
  name: OnAttached
  nameWithType: TriggerBase.OnAttached
  fullName: System.Windows.Interactivity.TriggerBase.OnAttached
- uid: System.Windows.Interactivity.TriggerBase.OnDetaching*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.OnDetaching
  name: OnDetaching
  nameWithType: TriggerBase.OnDetaching
  fullName: System.Windows.Interactivity.TriggerBase.OnDetaching
- uid: System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  name: IAttachedObject.AssociatedObject
  nameWithType: TriggerBase.IAttachedObject.AssociatedObject
  fullName: System.Windows.Interactivity.TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  nameWithType.vb: TriggerBase.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  name.vb: System.Windows.Interactivity.IAttachedObject.AssociatedObject
- uid: System.Windows.Interactivity.IAttachedObject.AssociatedObject
  commentId: P:System.Windows.Interactivity.IAttachedObject.AssociatedObject
  parent: System.Windows.Interactivity.IAttachedObject
  name: AssociatedObject
  nameWithType: IAttachedObject.AssociatedObject
  fullName: System.Windows.Interactivity.IAttachedObject.AssociatedObject
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Interactivity.TriggerBase.Attach*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.Attach
  name: Attach
  nameWithType: TriggerBase.Attach
  fullName: System.Windows.Interactivity.TriggerBase.Attach
- uid: System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.IAttachedObject
  name: Attach(DependencyObject)
  nameWithType: IAttachedObject.Attach(DependencyObject)
  fullName: System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: IAttachedObject.Attach
    fullName: System.Windows.Interactivity.IAttachedObject.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: IAttachedObject.Attach
    fullName: System.Windows.Interactivity.IAttachedObject.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.TriggerBase.Detach*
  commentId: Overload:System.Windows.Interactivity.TriggerBase.Detach
  name: Detach
  nameWithType: TriggerBase.Detach
  fullName: System.Windows.Interactivity.TriggerBase.Detach
- uid: System.Windows.Interactivity.IAttachedObject.Detach
  commentId: M:System.Windows.Interactivity.IAttachedObject.Detach
  parent: System.Windows.Interactivity.IAttachedObject
  name: Detach()
  nameWithType: IAttachedObject.Detach()
  fullName: System.Windows.Interactivity.IAttachedObject.Detach()
  spec.csharp:
  - uid: System.Windows.Interactivity.IAttachedObject.Detach
    name: Detach
    nameWithType: IAttachedObject.Detach
    fullName: System.Windows.Interactivity.IAttachedObject.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.IAttachedObject.Detach
    name: Detach
    nameWithType: IAttachedObject.Detach
    fullName: System.Windows.Interactivity.IAttachedObject.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
