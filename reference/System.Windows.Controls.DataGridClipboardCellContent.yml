### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataGridClipboardCellContent
  commentId: T:System.Windows.Controls.DataGridClipboardCellContent
  id: DataGridClipboardCellContent
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)
  - System.Windows.Controls.DataGridClipboardCellContent.Column
  - System.Windows.Controls.DataGridClipboardCellContent.Content
  - System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)
  - System.Windows.Controls.DataGridClipboardCellContent.GetHashCode
  - System.Windows.Controls.DataGridClipboardCellContent.Item
  - System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  - System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  langs:
  - csharp
  - vb
  name: DataGridClipboardCellContent
  nameWithType: DataGridClipboardCellContent
  fullName: System.Windows.Controls.DataGridClipboardCellContent
  type: Struct
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataGridClipboardCellContent
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 16
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nThis structure encapsulate the cell information necessary when clipboard content is prepared.\n"
  example: []
  syntax:
    content: public struct DataGridClipboardCellContent
    content.vb: Public Structure DataGridClipboardCellContent
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)
  commentId: M:System.Windows.Controls.DataGridClipboardCellContent.#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)
  id: '#ctor(System.Object,System.Windows.Controls.DataGridColumn,System.Object)'
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: DataGridClipboardCellContent(Object, DataGridColumn, Object)
  nameWithType: DataGridClipboardCellContent.DataGridClipboardCellContent(Object, DataGridColumn, Object)
  fullName: System.Windows.Controls.DataGridClipboardCellContent.DataGridClipboardCellContent(System.Object, System.Windows.Controls.DataGridColumn, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 34
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCreates a new DataGridClipboardCellValue structure containing information about a DataGrid cell.\n"
  example: []
  syntax:
    content: public DataGridClipboardCellContent(object item, DataGridColumn column, object content)
    parameters:
    - id: item
      type: System.Object
      description: DataGrid row item containing the cell.
    - id: column
      type: System.Windows.Controls.DataGridColumn
      description: DataGridColumn containing the cell.
    - id: content
      type: System.Object
      description: DataGrid cell value.
    content.vb: Public Sub New(item As Object, column As DataGridColumn, content As Object)
  overload: System.Windows.Controls.DataGridClipboardCellContent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridClipboardCellContent.Column
  commentId: P:System.Windows.Controls.DataGridClipboardCellContent.Column
  id: Column
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: DataGridClipboardCellContent.Column
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Column
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Column
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 48
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nDataGridColumn containing the cell.\n"
  example: []
  syntax:
    content: public readonly DataGridColumn Column { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridColumn
    content.vb: Public ReadOnly Property Column As DataGridColumn
  overload: System.Windows.Controls.DataGridClipboardCellContent.Column*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridClipboardCellContent.Content
  commentId: P:System.Windows.Controls.DataGridClipboardCellContent.Content
  id: Content
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: DataGridClipboardCellContent.Content
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Content
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Content
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 59
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCell content.\n"
  example: []
  syntax:
    content: public readonly object Content { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Content As Object
  overload: System.Windows.Controls.DataGridClipboardCellContent.Content*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridClipboardCellContent.Item
  commentId: P:System.Windows.Controls.DataGridClipboardCellContent.Item
  id: Item
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: DataGridClipboardCellContent.Item
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Item
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Item
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 70
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nDataGrid row item containing the cell.\n"
  example: []
  syntax:
    content: public readonly object Item { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Item As Object
  overload: System.Windows.Controls.DataGridClipboardCellContent.Item*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)
  commentId: M:System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DataGridClipboardCellContent.Equals(Object)
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 87
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nField-by-field comparison to avoid reflection-based ValueType.Equals.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: DataGridClipboardCellContent to compare.
    return:
      type: System.Boolean
      description: True iff this and data are equal
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Controls.DataGridClipboardCellContent.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.DataGridClipboardCellContent.GetHashCode
  commentId: M:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DataGridClipboardCellContent.GetHashCode()
  fullName: System.Windows.Controls.DataGridClipboardCellContent.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 101
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns a deterministic hash code.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash value.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.Controls.DataGridClipboardCellContent.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  commentId: M:System.Windows.Controls.DataGridClipboardCellContent.op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  id: op_Equality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Equality(DataGridClipboardCellContent, DataGridClipboardCellContent)
  nameWithType: DataGridClipboardCellContent.Equality(DataGridClipboardCellContent, DataGridClipboardCellContent)
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Equality(System.Windows.Controls.DataGridClipboardCellContent, System.Windows.Controls.DataGridClipboardCellContent)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 112
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nField-by-field comparison to avoid reflection-based ValueType.Equals.\n"
  example: []
  syntax:
    content: public static bool operator ==(DataGridClipboardCellContent clipboardCellContent1, DataGridClipboardCellContent clipboardCellContent2)
    parameters:
    - id: clipboardCellContent1
      type: System.Windows.Controls.DataGridClipboardCellContent
      description: The first DataGridClipboardCellContent.
    - id: clipboardCellContent2
      type: System.Windows.Controls.DataGridClipboardCellContent
      description: The second DataGridClipboardCellContent.
    return:
      type: System.Boolean
      description: True iff clipboardCellContent1 and clipboardCellContent2 are equal.
    content.vb: Public Shared Operator =(clipboardCellContent1 As DataGridClipboardCellContent, clipboardCellContent2 As DataGridClipboardCellContent) As Boolean
  overload: System.Windows.Controls.DataGridClipboardCellContent.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  commentId: M:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  id: op_Inequality(System.Windows.Controls.DataGridClipboardCellContent,System.Windows.Controls.DataGridClipboardCellContent)
  parent: System.Windows.Controls.DataGridClipboardCellContent
  langs:
  - csharp
  - vb
  name: Inequality(DataGridClipboardCellContent, DataGridClipboardCellContent)
  nameWithType: DataGridClipboardCellContent.Inequality(DataGridClipboardCellContent, DataGridClipboardCellContent)
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Inequality(System.Windows.Controls.DataGridClipboardCellContent, System.Windows.Controls.DataGridClipboardCellContent)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridClipboardCellContent.cs
    startLine: 123
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nField-by-field comparison to avoid reflection-based ValueType.Equals.\n"
  example: []
  syntax:
    content: public static bool operator !=(DataGridClipboardCellContent clipboardCellContent1, DataGridClipboardCellContent clipboardCellContent2)
    parameters:
    - id: clipboardCellContent1
      type: System.Windows.Controls.DataGridClipboardCellContent
      description: The first DataGridClipboardCellContent.
    - id: clipboardCellContent2
      type: System.Windows.Controls.DataGridClipboardCellContent
      description: The second DataGridClipboardCellContent.
    return:
      type: System.Boolean
      description: True iff clipboardCellContent1 and clipboardCellContent2 are NOT equal.
    content.vb: Public Shared Operator <>(clipboardCellContent1 As DataGridClipboardCellContent, clipboardCellContent2 As DataGridClipboardCellContent) As Boolean
  overload: System.Windows.Controls.DataGridClipboardCellContent.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.DataGridClipboardCellContent.#ctor*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.#ctor
  name: DataGridClipboardCellContent
  nameWithType: DataGridClipboardCellContent.DataGridClipboardCellContent
  fullName: System.Windows.Controls.DataGridClipboardCellContent.DataGridClipboardCellContent
- uid: System.Windows.Controls.DataGridColumn
  commentId: T:System.Windows.Controls.DataGridColumn
  parent: System.Windows.Controls
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Windows.Controls.DataGridColumn
- uid: System.Windows.Controls.DataGridClipboardCellContent.Column*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.Column
  name: Column
  nameWithType: DataGridClipboardCellContent.Column
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Column
- uid: System.Windows.Controls.DataGridClipboardCellContent.Content*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.Content
  name: Content
  nameWithType: DataGridClipboardCellContent.Content
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Content
- uid: System.Windows.Controls.DataGridClipboardCellContent.Item*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.Item
  name: Item
  nameWithType: DataGridClipboardCellContent.Item
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Item
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataGridClipboardCellContent.Equals*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.Equals
  name: Equals
  nameWithType: DataGridClipboardCellContent.Equals
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataGridClipboardCellContent.GetHashCode*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.GetHashCode
  name: GetHashCode
  nameWithType: DataGridClipboardCellContent.GetHashCode
  fullName: System.Windows.Controls.DataGridClipboardCellContent.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.DataGridClipboardCellContent.op_Equality*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.op_Equality
  name: Equality
  nameWithType: DataGridClipboardCellContent.Equality
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Equality
- uid: System.Windows.Controls.DataGridClipboardCellContent
  commentId: T:System.Windows.Controls.DataGridClipboardCellContent
  parent: System.Windows.Controls
  name: DataGridClipboardCellContent
  nameWithType: DataGridClipboardCellContent
  fullName: System.Windows.Controls.DataGridClipboardCellContent
- uid: System.Windows.Controls.DataGridClipboardCellContent.op_Inequality*
  commentId: Overload:System.Windows.Controls.DataGridClipboardCellContent.op_Inequality
  name: Inequality
  nameWithType: DataGridClipboardCellContent.Inequality
  fullName: System.Windows.Controls.DataGridClipboardCellContent.Inequality
