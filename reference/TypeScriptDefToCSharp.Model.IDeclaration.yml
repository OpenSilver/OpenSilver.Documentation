### YamlMime:ManagedReference
items:
- uid: TypeScriptDefToCSharp.Model.IDeclaration
  commentId: T:TypeScriptDefToCSharp.Model.IDeclaration
  id: IDeclaration
  parent: TypeScriptDefToCSharp.Model
  children:
  - TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  - TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  - TypeScriptDefToCSharp.Model.IDeclaration.Name
  - TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  - TypeScriptDefToCSharp.Model.IDeclaration.Super
  langs:
  - csharp
  - vb
  name: IDeclaration
  nameWithType: IDeclaration
  fullName: TypeScriptDefToCSharp.Model.IDeclaration
  type: Interface
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IDeclaration
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 26
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public interface IDeclaration
    content.vb: Public Interface IDeclaration
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Name
  commentId: P:TypeScriptDefToCSharp.Model.IDeclaration.Name
  id: Name
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IDeclaration.Name
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Name
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 28
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: TypeScriptDefToCSharp.Model.IDeclaration.Name*
  modifiers.csharp:
  - get
  - set
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Super
  commentId: P:TypeScriptDefToCSharp.Model.IDeclaration.Super
  id: Super
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  langs:
  - csharp
  - vb
  name: Super
  nameWithType: IDeclaration.Super
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Super
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Super
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 29
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: Declaration.Container<Declaration> Super { get; set; }
    parameters: []
    return:
      type: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
    content.vb: Property Super As Declaration.Container(Of Declaration)
  overload: TypeScriptDefToCSharp.Model.IDeclaration.Super*
  modifiers.csharp:
  - get
  - set
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  id: FullName(System.String)
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  langs:
  - csharp
  - vb
  name: FullName(String)
  nameWithType: IDeclaration.FullName(String)
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FullName
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 31
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string FullName(string sep)
    parameters:
    - id: sep
      type: System.String
    return:
      type: System.String
    content.vb: Function FullName(sep As String) As String
  overload: TypeScriptDefToCSharp.Model.IDeclaration.FullName*
- uid: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  id: SkippedFullName(System.String,System.Int32)
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  langs:
  - csharp
  - vb
  name: SkippedFullName(String, Int32)
  nameWithType: IDeclaration.SkippedFullName(String, Int32)
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SkippedFullName
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 32
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string SkippedFullName(string sep, int count)
    parameters:
    - id: sep
      type: System.String
    - id: count
      type: System.Int32
    return:
      type: System.String
    content.vb: Function SkippedFullName(sep As String, count As Integer) As String
  overload: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName*
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  id: FirstAncestor``1
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  langs:
  - csharp
  - vb
  name: FirstAncestor<TContainer>()
  nameWithType: IDeclaration.FirstAncestor<TContainer>()
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor<TContainer>()
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FirstAncestor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 33
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: >-
      TContainer FirstAncestor<TContainer>()
          where TContainer : Declaration.Container<Declaration>
    typeParameters:
    - id: TContainer
    return:
      type: '{TContainer}'
    content.vb: Function FirstAncestor(Of TContainer As Declaration.Container(Of Declaration)) As TContainer
  overload: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor*
  nameWithType.vb: IDeclaration.FirstAncestor(Of TContainer)()
  fullName.vb: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor(Of TContainer)()
  name.vb: FirstAncestor(Of TContainer)()
references:
- uid: TypeScriptDefToCSharp.Model
  commentId: N:TypeScriptDefToCSharp.Model
  name: TypeScriptDefToCSharp.Model
  nameWithType: TypeScriptDefToCSharp.Model
  fullName: TypeScriptDefToCSharp.Model
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Name*
  commentId: Overload:TypeScriptDefToCSharp.Model.IDeclaration.Name
  name: Name
  nameWithType: IDeclaration.Name
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Super*
  commentId: Overload:TypeScriptDefToCSharp.Model.IDeclaration.Super
  name: Super
  nameWithType: IDeclaration.Super
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Super
- uid: TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container{TypeScriptDefToCSharp.Model.Declaration}
  parent: TypeScriptDefToCSharp.Model
  definition: TypeScriptDefToCSharp.Model.Declaration.Container`1
  name: Declaration.Container<Declaration>
  nameWithType: Declaration.Container<Declaration>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<TypeScriptDefToCSharp.Model.Declaration>
  nameWithType.vb: Declaration.Container(Of Declaration)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of TypeScriptDefToCSharp.Model.Declaration)
  name.vb: Declaration.Container(Of Declaration)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: <
    nameWithType: <
    fullName: <
  - uid: TypeScriptDefToCSharp.Model.Declaration
    name: Declaration
    nameWithType: Declaration
    fullName: TypeScriptDefToCSharp.Model.Declaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TypeScriptDefToCSharp.Model.Declaration
    name: Declaration
    nameWithType: Declaration
    fullName: TypeScriptDefToCSharp.Model.Declaration
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container`1
  name: Declaration.Container<T>
  nameWithType: Declaration.Container<T>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<T>
  nameWithType.vb: Declaration.Container(Of T)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of T)
  name.vb: Declaration.Container(Of T)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
    name: Declaration.Container
    nameWithType: Declaration.Container
    fullName: TypeScriptDefToCSharp.Model.Declaration.Container
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FullName*
  commentId: Overload:TypeScriptDefToCSharp.Model.IDeclaration.FullName
  name: FullName
  nameWithType: IDeclaration.FullName
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FullName
- uid: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName*
  commentId: Overload:TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName
  name: SkippedFullName
  nameWithType: IDeclaration.SkippedFullName
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor*
  commentId: Overload:TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor
  name: FirstAncestor
  nameWithType: IDeclaration.FirstAncestor
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor
- uid: '{TContainer}'
  commentId: '!:TContainer'
  definition: TContainer
  name: TContainer
  nameWithType: TContainer
  fullName: TContainer
- uid: TContainer
  name: TContainer
  nameWithType: TContainer
  fullName: TContainer
