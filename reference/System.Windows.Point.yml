### YamlMime:ManagedReference
items:
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  id: Point
  parent: System.Windows
  children:
  - System.Windows.Point.#ctor(System.Double,System.Double)
  - System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.Equals(System.Object)
  - System.Windows.Point.Equals(System.Windows.Point)
  - System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.GetHashCode
  - System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  - System.Windows.Point.Offset(System.Double,System.Double)
  - System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size
  - System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector
  - System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.Parse(System.String)
  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  - System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  - System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Point.ToString
  - System.Windows.Point.ToString(System.IFormatProvider)
  - System.Windows.Point.X
  - System.Windows.Point.Y
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Point
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 23
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents an x- and y-coordinate pair in two-dimensional space. Can also represent\na logical point for certain property usages.\n"
  example: []
  syntax:
    content: 'public struct Point : IFormattable'
    content.vb: >-
      Public Structure Point
          Implements IFormattable
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Point.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Point.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Point(Double, Double)
  nameWithType: Point.Point(Double, Double)
  fullName: System.Windows.Point.Point(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the specified values.\ncontains the specified values.\n"
  example: []
  syntax:
    content: public Point(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: "\nThe x-coordinate value of the <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    - id: y
      type: System.Double
      description: "\nThe y-coordinate value of the <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Sub New(x As Double, y As Double)
  overload: System.Windows.Point.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Parse(System.String)
  commentId: M:System.Windows.Point.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Point.Parse(String)
  fullName: System.Windows.Point.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Parse
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nConstructs a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> from the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Point Parse(string source)
    parameters:
    - id: source
      type: System.String
      description: "\nA string representation of a point.\n"
    return:
      type: System.Windows.Point
      description: "\nThe equivalent <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Shared Function Parse(source As String) As Point
  overload: System.Windows.Point.Parse*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\nsource is not composed of two comma- or space-delimited double values.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  commentId: M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)
  id: Add(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Add(Point, Vector)
  nameWithType: Point.Add(Point, Vector)
  fullName: System.Windows.Point.Add(System.Windows.Point, System.Windows.Vector)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Add
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 84
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nAdds a <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and returns the result as a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public static Point Add(Point point, Vector vector)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to add.\n"
    - id: vector
      type: System.Windows.Vector
      description: "\nThe <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> structure to add.\n"
    return:
      type: System.Windows.Point
      description: "\nReturns the sum of point and vector.\n"
    content.vb: Public Shared Function Add(point As Point, vector As Vector) As Point
  overload: System.Windows.Point.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  commentId: M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  id: Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Multiply(Point, Matrix)
  nameWithType: Point.Multiply(Point, Matrix)
  fullName: System.Windows.Point.Multiply(System.Windows.Point, System.Windows.Media.Matrix)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Multiply
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nTransforms the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure by the specified <xref href=\"System.Windows.Media.Matrix\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public static Point Multiply(Point point, Matrix matrix)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point to transform.\n"
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "\nThe transformation matrix.\n"
    return:
      type: System.Windows.Point
      description: "\nThe transformed point.\n"
    content.vb: Public Shared Function Multiply(point As Point, matrix As Matrix) As Point
  overload: System.Windows.Point.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)
  id: Subtract(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Subtract(Point, Point)
  nameWithType: Point.Subtract(Point, Point)
  fullName: System.Windows.Point.Subtract(System.Windows.Point, System.Windows.Point)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Subtract
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSubtracts the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> from another specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and returns the \ndifference as a <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector Subtract(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe point from which point2 is subtracted.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe point to subtract from point1.\n"
    return:
      type: System.Windows.Vector
      description: "\nThe difference between point1 and point2.\n"
    content.vb: Public Shared Function Subtract(point1 As Point, point2 As Point) As Vector
  overload: System.Windows.Point.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  commentId: M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)
  id: Subtract(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Subtract(Point, Vector)
  nameWithType: Point.Subtract(Point, Vector)
  fullName: System.Windows.Point.Subtract(System.Windows.Point, System.Windows.Vector)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Subtract
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 128
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSubtracts the specified <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> from the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and returns the \nresulting <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Point Subtract(Point point, Vector vector)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\n"
    - id: vector
      type: System.Windows.Vector
      description: "\nThe vector to subtract from point.\n"
    return:
      type: System.Windows.Point
      description: "\nThe difference between point and vector.\n"
    content.vb: Public Shared Function Subtract(point As Point, vector As Vector) As Point
  overload: System.Windows.Point.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.X
  commentId: P:System.Windows.Point.X
  id: X
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: X
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 138
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>\nstructure.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\nThe default value is 0.\n"
    content.vb: Public Property X As Double
  overload: System.Windows.Point.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Y
  commentId: P:System.Windows.Point.Y
  id: Y
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Y
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 151
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>-coordinate value of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\nThe default value is 0.\n"
    content.vb: Public Property Y As Double
  overload: System.Windows.Point.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Offset(System.Double,System.Double)
  commentId: M:System.Windows.Point.Offset(System.Double,System.Double)
  id: Offset(System.Double,System.Double)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Offset(Double, Double)
  nameWithType: Point.Offset(Double, Double)
  fullName: System.Windows.Point.Offset(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Offset
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 166
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nOffsets a point&apos;s <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> coordinates by the specified amounts.\n"
  example: []
  syntax:
    content: public void Offset(double offsetX, double offsetY)
    parameters:
    - id: offsetX
      type: System.Double
      description: "\nThe amount to offset the point&apos;s <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> coordinate.\n"
    - id: offsetY
      type: System.Double
      description: "\nThe amount to offset the point&apos;s <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> coordinate.\n"
    content.vb: Public Sub Offset(offsetX As Double, offsetY As Double)
  overload: System.Windows.Point.Offset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)
  id: Equals(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equals(Point, Point)
  nameWithType: Point.Equals(Point, Point)
  fullName: System.Windows.Point.Equals(System.Windows.Point, System.Windows.Point)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 184
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public static bool Equals(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe first point to compare.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe second point to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if point1 and point2 contain the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values; otherwise, false.\n"
    content.vb: Public Shared Function Equals(point1 As Point, point2 As Point) As Boolean
  overload: System.Windows.Point.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.Equals(System.Object)
  commentId: M:System.Windows.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Windows.Point.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 197
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nDetermines whether the specified object is a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and whether\nit contains the same values as this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: "\nThe object to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if obj is a <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and contains the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values as this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Point.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.Equals(System.Windows.Point)
  commentId: M:System.Windows.Point.Equals(System.Windows.Point)
  id: Equals(System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: System.Windows.Point.Equals(System.Windows.Point)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 209
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public bool Equals(Point value)
    parameters:
    - id: value
      type: System.Windows.Point
      description: "\nThe point to compare to this instance.\n"
    return:
      type: System.Boolean
      description: "\ntrue if both <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures contain the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values; otherwise, false.\n"
    content.vb: Public Function Equals(value As Point) As Boolean
  overload: System.Windows.Point.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.GetHashCode
  commentId: M:System.Windows.Point.GetHashCode
  id: GetHashCode
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Windows.Point.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 217
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the hash code for this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nThe hash code for this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.Point.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.ToString
  commentId: M:System.Windows.Point.ToString
  id: ToString
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Windows.Point.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 226
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: System.Windows.Point.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Point.ToString(System.IFormatProvider)
  commentId: M:System.Windows.Point.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Point.ToString(IFormatProvider)
  fullName: System.Windows.Point.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 239
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\nCulture-specific formatting information.\n"
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues of this <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: System.Windows.Point.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  nameWithType: Point.IFormattable.ToString(String, IFormatProvider)
  fullName: System.Windows.Point.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.IFormattable.ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 251
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a string representation of this object based on the format string\nand IFormatProvider passed in.\nIf the provider is null, the CurrentCulture is used.\nSee the documentation for IFormattable for more information.\n"
  example: []
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider provider)
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
      description: "\nA string representation of this object.\n"
    content.vb: Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString
  overload: System.Windows.Point.System#IFormattable#ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Point.System.IFormattable.ToString(String, IFormatProvider)
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
- uid: System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  commentId: M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)
  id: op_Addition(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Addition(Point, Vector)
  nameWithType: Point.Addition(Point, Vector)
  fullName: System.Windows.Point.Addition(System.Windows.Point, System.Windows.Vector)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Addition
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 287
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nTranslates the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> and returns the result.\n"
  example: []
  syntax:
    content: public static Point operator +(Point point, Vector vector)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point to translate.\n"
    - id: vector
      type: System.Windows.Vector
      description: "\nThe amount by which to translate point.\n"
    return:
      type: System.Windows.Point
      description: "\nThe result of translating the specified point by the specified vector.\n"
    content.vb: Public Shared Operator +(point As Point, vector As Vector) As Point
  overload: System.Windows.Point.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)
  id: op_Subtraction(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Subtraction(Point, Point)
  nameWithType: Point.Subtraction(Point, Point)
  fullName: System.Windows.Point.Subtraction(System.Windows.Point, System.Windows.Point)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Subtraction
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 302
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSubtracts the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> from another specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>\nand returns the difference as a <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Vector operator -(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe point from which point2 is subtracted.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe point to subtract from point1.\n"
    return:
      type: System.Windows.Vector
      description: "\nThe difference between point1 and point2.\n"
    content.vb: Public Shared Operator -(point1 As Point, point2 As Point) As Vector
  overload: System.Windows.Point.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  commentId: M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)
  id: op_Subtraction(System.Windows.Point,System.Windows.Vector)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Subtraction(Point, Vector)
  nameWithType: Point.Subtraction(Point, Vector)
  fullName: System.Windows.Point.Subtraction(System.Windows.Point, System.Windows.Vector)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Subtraction
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 317
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nSubtracts the specified <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> from the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> and returns the \nresulting <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Point operator -(Point point, Vector vector)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point from which vector is subtracted.\n"
    - id: vector
      type: System.Windows.Vector
      description: "\nThe vector to subtract from point1.\n"
    return:
      type: System.Windows.Point
      description: "\nThe difference between point and vector.\n"
    content.vb: Public Shared Operator -(point As Point, vector As Vector) As Point
  overload: System.Windows.Point.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  commentId: M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  id: op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Multiply(Point, Matrix)
  nameWithType: Point.Multiply(Point, Matrix)
  fullName: System.Windows.Point.Multiply(System.Windows.Point, System.Windows.Media.Matrix)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Multiply
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 331
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nTransforms the specified <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"System.Windows.Media.Matrix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Point operator *(Point point, Matrix matrix)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point to transform.\n"
    - id: matrix
      type: System.Windows.Media.Matrix
      description: "\nThe transformation matrix.\n"
    return:
      type: System.Windows.Point
      description: "\nThe result of transforming the specified point using the specified matrix.\n"
    content.vb: Public Shared Operator *(point As Point, matrix As Matrix) As Point
  overload: System.Windows.Point.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)
  id: op_Equality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Equality(Point, Point)
  nameWithType: Point.Equality(Point, Point)
  fullName: System.Windows.Point.Equality(System.Windows.Point, System.Windows.Point)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 346
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe first <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to compare.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe second <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if both the <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values of\npoint1 and point2 are equal; otherwise, false.\n"
    content.vb: Public Shared Operator =(point1 As Point, point2 As Point) As Boolean
  overload: System.Windows.Point.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  commentId: M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)
  id: op_Inequality(System.Windows.Point,System.Windows.Point)
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Inequality(Point, Point)
  nameWithType: Point.Inequality(Point, Point)
  fullName: System.Windows.Point.Inequality(System.Windows.Point, System.Windows.Point)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 364
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCompares two <xref href=\"System.Windows.Point\" data-throw-if-not-resolved=\"false\"></xref> structures for inequality\n"
  example: []
  syntax:
    content: public static bool operator !=(Point point1, Point point2)
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "\nThe first point to compare.\n"
    - id: point2
      type: System.Windows.Point
      description: "\nThe second point to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if point1 and point2 have different <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues; false if point1 and point2 have the same <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref>\nvalues.\n"
    content.vb: Public Shared Operator <>(point1 As Point, point2 As Point) As Boolean
  overload: System.Windows.Point.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size
  commentId: M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size
  id: op_Explicit(System.Windows.Point)~System.Windows.Size
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Explicit(Point to Size)
  nameWithType: Point.Explicit(Point to Size)
  fullName: System.Windows.Point.Explicit(System.Windows.Point to System.Windows.Size)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Explicit
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 378
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <xref href=\"System.Windows.Size\" data-throw-if-not-resolved=\"false\"></xref> structure with a <xref href=\"System.Windows.Size.Width\" data-throw-if-not-resolved=\"false\"></xref> equal to this point&apos;s \n<xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> value and a <xref href=\"System.Windows.Size.Height\" data-throw-if-not-resolved=\"false\"></xref> equal to this point&apos;s <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public static explicit operator Size(Point point)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point to convert.\n"
    return:
      type: System.Windows.Size
      description: "\nA <xref href=\"System.Windows.Size\" data-throw-if-not-resolved=\"false\"></xref> structure with a <xref href=\"System.Windows.Size.Width\" data-throw-if-not-resolved=\"false\"></xref> equal to this point&apos;s <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> \nvalue and a <xref href=\"System.Windows.Size.Height\" data-throw-if-not-resolved=\"false\"></xref> equal to this point&apos;s <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
    content.vb: Public Shared Narrowing Operator CType(point As Point) As Size
  overload: System.Windows.Point.op_Explicit*
  nameWithType.vb: Point.Narrowing(Point to Size)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Point.Narrowing(System.Windows.Point to System.Windows.Size)
  name.vb: Narrowing(Point to Size)
- uid: System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector
  commentId: M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector
  id: op_Explicit(System.Windows.Point)~System.Windows.Vector
  parent: System.Windows.Point
  langs:
  - csharp
  - vb
  name: Explicit(Point to Vector)
  nameWithType: Point.Explicit(Point to Vector)
  fullName: System.Windows.Point.Explicit(System.Windows.Point to System.Windows.Vector)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Point.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Explicit
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Point.cs
    startLine: 391
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nCreates a <xref href=\"System.Windows.Vector\" data-throw-if-not-resolved=\"false\"></xref> structure with an <xref href=\"System.Windows.Vector.X\" data-throw-if-not-resolved=\"false\"></xref> value equal to the point&apos;s \n<xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> value and a <xref href=\"System.Windows.Vector.Y\" data-throw-if-not-resolved=\"false\"></xref> value equal to the point&apos;s <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public static explicit operator Vector(Point point)
    parameters:
    - id: point
      type: System.Windows.Point
      description: "\nThe point to convert.\n"
    return:
      type: System.Windows.Vector
      description: "\nA vector with an <xref href=\"System.Windows.Vector.X\" data-throw-if-not-resolved=\"false\"></xref> value equal to the point&apos;s <xref href=\"System.Windows.Point.X\" data-throw-if-not-resolved=\"false\"></xref> value and a \n<xref href=\"System.Windows.Vector.Y\" data-throw-if-not-resolved=\"false\"></xref> value equal to the point&apos;s <xref href=\"System.Windows.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
    content.vb: Public Shared Narrowing Operator CType(point As Point) As Vector
  overload: System.Windows.Point.op_Explicit*
  nameWithType.vb: Point.Narrowing(Point to Vector)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Point.Narrowing(System.Windows.Point to System.Windows.Vector)
  name.vb: Narrowing(Point to Vector)
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Point.#ctor*
  commentId: Overload:System.Windows.Point.#ctor
  name: Point
  nameWithType: Point.Point
  fullName: System.Windows.Point.Point
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: System.Windows.Point.Parse*
  commentId: Overload:System.Windows.Point.Parse
  name: Parse
  nameWithType: Point.Parse
  fullName: System.Windows.Point.Parse
- uid: System.Windows.Vector
  commentId: T:System.Windows.Vector
  parent: System.Windows
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Point.Add*
  commentId: Overload:System.Windows.Point.Add
  name: Add
  nameWithType: Point.Add
  fullName: System.Windows.Point.Add
- uid: System.Windows.Media.Matrix
  commentId: T:System.Windows.Media.Matrix
  parent: System.Windows.Media
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Point.Multiply*
  commentId: Overload:System.Windows.Point.Multiply
  name: Multiply
  nameWithType: Point.Multiply
  fullName: System.Windows.Point.Multiply
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Windows.Point.Subtract*
  commentId: Overload:System.Windows.Point.Subtract
  name: Subtract
  nameWithType: Point.Subtract
  fullName: System.Windows.Point.Subtract
- uid: System.Windows.Point.X
  commentId: P:System.Windows.Point.X
  isExternal: true
- uid: System.Windows.Point.X*
  commentId: Overload:System.Windows.Point.X
  name: X
  nameWithType: Point.X
  fullName: System.Windows.Point.X
- uid: System.Windows.Point.Y
  commentId: P:System.Windows.Point.Y
  isExternal: true
- uid: System.Windows.Point.Y*
  commentId: Overload:System.Windows.Point.Y
  name: Y
  nameWithType: Point.Y
  fullName: System.Windows.Point.Y
- uid: System.Windows.Point.Offset*
  commentId: Overload:System.Windows.Point.Offset
  name: Offset
  nameWithType: Point.Offset
  fullName: System.Windows.Point.Offset
- uid: System.Windows.Point.Equals*
  commentId: Overload:System.Windows.Point.Equals
  name: Equals
  nameWithType: Point.Equals
  fullName: System.Windows.Point.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Point.GetHashCode*
  commentId: Overload:System.Windows.Point.GetHashCode
  name: GetHashCode
  nameWithType: Point.GetHashCode
  fullName: System.Windows.Point.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Point.ToString*
  commentId: Overload:System.Windows.Point.ToString
  name: ToString
  nameWithType: Point.ToString
  fullName: System.Windows.Point.ToString
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Point.System#IFormattable#ToString*
  commentId: Overload:System.Windows.Point.System#IFormattable#ToString
  name: IFormattable.ToString
  nameWithType: Point.IFormattable.ToString
  fullName: System.Windows.Point.System.IFormattable.ToString
  nameWithType.vb: Point.System.IFormattable.ToString
  name.vb: System.IFormattable.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Point.op_Addition*
  commentId: Overload:System.Windows.Point.op_Addition
  name: Addition
  nameWithType: Point.Addition
  fullName: System.Windows.Point.Addition
- uid: System.Windows.Point.op_Subtraction*
  commentId: Overload:System.Windows.Point.op_Subtraction
  name: Subtraction
  nameWithType: Point.Subtraction
  fullName: System.Windows.Point.Subtraction
- uid: System.Windows.Point.op_Multiply*
  commentId: Overload:System.Windows.Point.op_Multiply
  name: Multiply
  nameWithType: Point.Multiply
  fullName: System.Windows.Point.Multiply
- uid: System.Windows.Point.op_Equality*
  commentId: Overload:System.Windows.Point.op_Equality
  name: Equality
  nameWithType: Point.Equality
  fullName: System.Windows.Point.Equality
- uid: System.Windows.Point.op_Inequality*
  commentId: Overload:System.Windows.Point.op_Inequality
  name: Inequality
  nameWithType: Point.Inequality
  fullName: System.Windows.Point.Inequality
- uid: System.Windows.Size
  commentId: T:System.Windows.Size
  parent: System.Windows
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Size.Width
  commentId: P:System.Windows.Size.Width
  isExternal: true
- uid: System.Windows.Size.Height
  commentId: P:System.Windows.Size.Height
  isExternal: true
- uid: System.Windows.Point.op_Explicit*
  commentId: Overload:System.Windows.Point.op_Explicit
  name: Explicit
  nameWithType: Point.Explicit
  fullName: System.Windows.Point.Explicit
  nameWithType.vb: Point.Narrowing
  fullName.vb: System.Windows.Point.Narrowing
  name.vb: Narrowing
- uid: System.Windows.Vector.X
  commentId: P:System.Windows.Vector.X
  isExternal: true
- uid: System.Windows.Vector.Y
  commentId: P:System.Windows.Vector.Y
  isExternal: true
