### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.SortDescription
  commentId: T:System.ComponentModel.SortDescription
  id: SortDescription
  parent: System.ComponentModel
  children:
  - System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)
  - System.ComponentModel.SortDescription.Direction
  - System.ComponentModel.SortDescription.Equals(System.Object)
  - System.ComponentModel.SortDescription.GetHashCode
  - System.ComponentModel.SortDescription.IsSealed
  - System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  - System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  - System.ComponentModel.SortDescription.PropertyName
  langs:
  - csharp
  - vb
  name: SortDescription
  nameWithType: SortDescription
  fullName: System.ComponentModel.SortDescription
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SortDescription
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nDefines a property and direction to sort a list by.\n"
  example: []
  syntax:
    content: public struct SortDescription
    content.vb: Public Structure SortDescription
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)
  commentId: M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)
  id: '#ctor(System.String,System.ComponentModel.ListSortDirection)'
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: SortDescription(String, ListSortDirection)
  nameWithType: SortDescription.SortDescription(String, ListSortDirection)
  fullName: System.ComponentModel.SortDescription.SortDescription(System.String, System.ComponentModel.ListSortDirection)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nCreate a sort description.\n"
  example: []
  syntax:
    content: public SortDescription(string propertyName, ListSortDirection direction)
    parameters:
    - id: propertyName
      type: System.String
      description: Property to sort by
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: Specifies the direction of sort operation
    content.vb: Public Sub New(propertyName As String, direction As ListSortDirection)
  overload: System.ComponentModel.SortDescription.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: 'direction is not a valid value for ListSortDirection '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.SortDescription.PropertyName
  commentId: P:System.ComponentModel.SortDescription.PropertyName
  id: PropertyName
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: PropertyName
  nameWithType: SortDescription.PropertyName
  fullName: System.ComponentModel.SortDescription.PropertyName
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PropertyName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nProperty name to sort by.\n"
  example: []
  syntax:
    content: public string PropertyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PropertyName As String
  overload: System.ComponentModel.SortDescription.PropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.SortDescription.Direction
  commentId: P:System.ComponentModel.SortDescription.Direction
  id: Direction
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: SortDescription.Direction
  fullName: System.ComponentModel.SortDescription.Direction
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Direction
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 76
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nSort direction.\n"
  example: []
  syntax:
    content: public ListSortDirection Direction { get; set; }
    parameters: []
    return:
      type: System.ComponentModel.ListSortDirection
    content.vb: Public Property Direction As ListSortDirection
  overload: System.ComponentModel.SortDescription.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.SortDescription.IsSealed
  commentId: P:System.ComponentModel.SortDescription.IsSealed
  id: IsSealed
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: IsSealed
  nameWithType: SortDescription.IsSealed
  fullName: System.ComponentModel.SortDescription.IsSealed
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsSealed
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 94
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturns true if the SortDescription is in use (sealed).\n"
  example: []
  syntax:
    content: public readonly bool IsSealed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSealed As Boolean
  overload: System.ComponentModel.SortDescription.IsSealed*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.SortDescription.Equals(System.Object)
  commentId: M:System.ComponentModel.SortDescription.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SortDescription.Equals(Object)
  fullName: System.ComponentModel.SortDescription.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 110
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: 'Override of Object.Equals '
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.ComponentModel.SortDescription.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  commentId: M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  id: op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: Equality(SortDescription, SortDescription)
  nameWithType: SortDescription.Equality(SortDescription, SortDescription)
  fullName: System.ComponentModel.SortDescription.Equality(System.ComponentModel.SortDescription, System.ComponentModel.SortDescription)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 116
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: 'Equality operator for SortDescription. '
  example: []
  syntax:
    content: public static bool operator ==(SortDescription sd1, SortDescription sd2)
    parameters:
    - id: sd1
      type: System.ComponentModel.SortDescription
    - id: sd2
      type: System.ComponentModel.SortDescription
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(sd1 As SortDescription, sd2 As SortDescription) As Boolean
  overload: System.ComponentModel.SortDescription.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  commentId: M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  id: op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: Inequality(SortDescription, SortDescription)
  nameWithType: SortDescription.Inequality(SortDescription, SortDescription)
  fullName: System.ComponentModel.SortDescription.Inequality(System.ComponentModel.SortDescription, System.ComponentModel.SortDescription)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: 'Inequality operator for SortDescription. '
  example: []
  syntax:
    content: public static bool operator !=(SortDescription sd1, SortDescription sd2)
    parameters:
    - id: sd1
      type: System.ComponentModel.SortDescription
    - id: sd2
      type: System.ComponentModel.SortDescription
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(sd1 As SortDescription, sd2 As SortDescription) As Boolean
  overload: System.ComponentModel.SortDescription.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.SortDescription.GetHashCode
  commentId: M:System.ComponentModel.SortDescription.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.SortDescription
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SortDescription.GetHashCode()
  fullName: System.ComponentModel.SortDescription.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/SortDescription.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: 'Override of Object.GetHashCode '
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.ComponentModel.SortDescription.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.InvalidEnumArgumentException
  commentId: T:System.ComponentModel.InvalidEnumArgumentException
  isExternal: true
- uid: System.ComponentModel.SortDescription.#ctor*
  commentId: Overload:System.ComponentModel.SortDescription.#ctor
  name: SortDescription
  nameWithType: SortDescription.SortDescription
  fullName: System.ComponentModel.SortDescription.SortDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ListSortDirection
  commentId: T:System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: true
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.ComponentModel.SortDescription.PropertyName*
  commentId: Overload:System.ComponentModel.SortDescription.PropertyName
  name: PropertyName
  nameWithType: SortDescription.PropertyName
  fullName: System.ComponentModel.SortDescription.PropertyName
- uid: System.ComponentModel.SortDescription.Direction*
  commentId: Overload:System.ComponentModel.SortDescription.Direction
  name: Direction
  nameWithType: SortDescription.Direction
  fullName: System.ComponentModel.SortDescription.Direction
- uid: System.ComponentModel.SortDescription.IsSealed*
  commentId: Overload:System.ComponentModel.SortDescription.IsSealed
  name: IsSealed
  nameWithType: SortDescription.IsSealed
  fullName: System.ComponentModel.SortDescription.IsSealed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.SortDescription.Equals*
  commentId: Overload:System.ComponentModel.SortDescription.Equals
  name: Equals
  nameWithType: SortDescription.Equals
  fullName: System.ComponentModel.SortDescription.Equals
- uid: System.ComponentModel.SortDescription.op_Equality*
  commentId: Overload:System.ComponentModel.SortDescription.op_Equality
  name: Equality
  nameWithType: SortDescription.Equality
  fullName: System.ComponentModel.SortDescription.Equality
- uid: System.ComponentModel.SortDescription
  commentId: T:System.ComponentModel.SortDescription
  parent: System.ComponentModel
  name: SortDescription
  nameWithType: SortDescription
  fullName: System.ComponentModel.SortDescription
- uid: System.ComponentModel.SortDescription.op_Inequality*
  commentId: Overload:System.ComponentModel.SortDescription.op_Inequality
  name: Inequality
  nameWithType: SortDescription.Inequality
  fullName: System.ComponentModel.SortDescription.Inequality
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.SortDescription.GetHashCode*
  commentId: Overload:System.ComponentModel.SortDescription.GetHashCode
  name: GetHashCode
  nameWithType: SortDescription.GetHashCode
  fullName: System.ComponentModel.SortDescription.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
