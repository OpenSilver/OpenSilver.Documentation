### YamlMime:ManagedReference
items:
- uid: System.Settings
  commentId: T:System.Settings
  id: Settings
  parent: System
  children:
  - System.Settings.#ctor
  - System.Settings.DefaultResourceLookupMode
  - System.Settings.DefaultSoapCredentialsMode
  - System.Settings.EnableAutoZoom
  - System.Settings.EnableBindingErrorsLogging
  - System.Settings.EnableBindingErrorsThrowing
  - System.Settings.EnableCacheVisualization
  - System.Settings.EnableFrameRateCounter
  - System.Settings.EnableGPUAcceleration
  - System.Settings.EnableHTMLAccess
  - System.Settings.EnableInteropLogging
  - System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  - System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  - System.Settings.EnablePerformanceLogging
  - System.Settings.EnableRedrawRegions
  - System.Settings.EnableWebRequestsLogging
  - System.Settings.MaxFrameRate
  - System.Settings.ProgressiveRenderingChunkSize
  - System.Settings.ScrollDebounce
  - System.Settings.Windowless
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: Settings
  fullName: System.Settings
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Settings
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 24
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public class Settings
    content.vb: Public Class Settings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Settings.#ctor
  commentId: M:System.Settings.#ctor
  id: '#ctor'
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: Settings()
  nameWithType: Settings.Settings()
  fullName: System.Settings.Settings()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public Settings()
    content.vb: Public Sub New
  overload: System.Settings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Settings.DefaultResourceLookupMode
  commentId: P:System.Settings.DefaultResourceLookupMode
  id: DefaultResourceLookupMode
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: DefaultResourceLookupMode
  nameWithType: Settings.DefaultResourceLookupMode
  fullName: System.Settings.DefaultResourceLookupMode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DefaultResourceLookupMode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 65
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public InheritanceBehavior DefaultResourceLookupMode { get; set; }
    parameters: []
    return:
      type: System.Windows.InheritanceBehavior
    content.vb: Public Property DefaultResourceLookupMode As InheritanceBehavior
  overload: System.Settings.DefaultResourceLookupMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.ScrollDebounce
  commentId: P:System.Settings.ScrollDebounce
  id: ScrollDebounce
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: ScrollDebounce
  nameWithType: Settings.ScrollDebounce
  fullName: System.Settings.ScrollDebounce
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ScrollDebounce
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public TimeSpan ScrollDebounce { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ScrollDebounce As TimeSpan
  overload: System.Settings.ScrollDebounce*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.DefaultSoapCredentialsMode
  commentId: P:System.Settings.DefaultSoapCredentialsMode
  id: DefaultSoapCredentialsMode
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: DefaultSoapCredentialsMode
  nameWithType: Settings.DefaultSoapCredentialsMode
  fullName: System.Settings.DefaultSoapCredentialsMode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DefaultSoapCredentialsMode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public CredentialsMode DefaultSoapCredentialsMode { get; set; }
    parameters: []
    return:
      type: System.Net.CredentialsMode
    content.vb: Public Property DefaultSoapCredentialsMode As CredentialsMode
  overload: System.Settings.DefaultSoapCredentialsMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableBindingErrorsLogging
  commentId: P:System.Settings.EnableBindingErrorsLogging
  id: EnableBindingErrorsLogging
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableBindingErrorsLogging
  nameWithType: Settings.EnableBindingErrorsLogging
  fullName: System.Settings.EnableBindingErrorsLogging
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableBindingErrorsLogging
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 75
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnableBindingErrorsLogging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableBindingErrorsLogging As Boolean
  overload: System.Settings.EnableBindingErrorsLogging*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableBindingErrorsThrowing
  commentId: P:System.Settings.EnableBindingErrorsThrowing
  id: EnableBindingErrorsThrowing
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableBindingErrorsThrowing
  nameWithType: Settings.EnableBindingErrorsThrowing
  fullName: System.Settings.EnableBindingErrorsThrowing
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableBindingErrorsThrowing
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnableBindingErrorsThrowing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableBindingErrorsThrowing As Boolean
  overload: System.Settings.EnableBindingErrorsThrowing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableWebRequestsLogging
  commentId: P:System.Settings.EnableWebRequestsLogging
  id: EnableWebRequestsLogging
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableWebRequestsLogging
  nameWithType: Settings.EnableWebRequestsLogging
  fullName: System.Settings.EnableWebRequestsLogging
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableWebRequestsLogging
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnableWebRequestsLogging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableWebRequestsLogging As Boolean
  overload: System.Settings.EnableWebRequestsLogging*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableInteropLogging
  commentId: P:System.Settings.EnableInteropLogging
  id: EnableInteropLogging
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableInteropLogging
  nameWithType: Settings.EnableInteropLogging
  fullName: System.Settings.EnableInteropLogging
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableInteropLogging
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnableInteropLogging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableInteropLogging As Boolean
  overload: System.Settings.EnableInteropLogging*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnablePerformanceLogging
  commentId: P:System.Settings.EnablePerformanceLogging
  id: EnablePerformanceLogging
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnablePerformanceLogging
  nameWithType: Settings.EnablePerformanceLogging
  fullName: System.Settings.EnablePerformanceLogging
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnablePerformanceLogging
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 94
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnablePerformanceLogging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnablePerformanceLogging As Boolean
  overload: System.Settings.EnablePerformanceLogging*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  commentId: P:System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  id: EnableOptimizationWhereCollapsedControlsAreNotRendered
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableOptimizationWhereCollapsedControlsAreNotRendered
  nameWithType: Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  fullName: System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableOptimizationWhereCollapsedControlsAreNotRendered
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 105
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nWhen True, do not apply the CSS properties of the UI elements that are not visible.\nThose property are applied later, when the control becomes visible.\nEnabling this option results in improved performance.\n"
  example: []
  syntax:
    content: public bool EnableOptimizationWhereCollapsedControlsAreNotRendered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableOptimizationWhereCollapsedControlsAreNotRendered As Boolean
  overload: System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.ProgressiveRenderingChunkSize
  commentId: P:System.Settings.ProgressiveRenderingChunkSize
  id: ProgressiveRenderingChunkSize
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: ProgressiveRenderingChunkSize
  nameWithType: Settings.ProgressiveRenderingChunkSize
  fullName: System.Settings.ProgressiveRenderingChunkSize
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProgressiveRenderingChunkSize
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 120
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets the number of children in a Panel to render progressively in a batch.\nSetting this option can improve performance.\nValue of 0 or less means progressive rendering is disabled.\nThe default value is 0.\n"
  remarks: "\nA value close to 1 can break UI in some cases.\n"
  example: []
  syntax:
    content: public int ProgressiveRenderingChunkSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProgressiveRenderingChunkSize As Integer
  overload: System.Settings.ProgressiveRenderingChunkSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  commentId: P:System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  id: EnableInvalidPropertyMetadataDefaultValueExceptions
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableInvalidPropertyMetadataDefaultValueExceptions
  nameWithType: Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  fullName: System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableInvalidPropertyMetadataDefaultValueExceptions
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 126
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public bool EnableInvalidPropertyMetadataDefaultValueExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EnableInvalidPropertyMetadataDefaultValueExceptions As Boolean
  overload: System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.Windowless
  commentId: P:System.Settings.Windowless
  id: Windowless
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: Windowless
  nameWithType: Settings.Windowless
  fullName: System.Settings.Windowless
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Windowless
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 143
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets a value that indicates whether the Silverlight plug-in displays as a windowless\nplug-in. (Applies to Windows versions of Silverlight only.)\n"
  example: []
  syntax:
    content: public bool Windowless { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the Silverlight plug-in displays as a windowless plug-in; otherwise, false.\n"
    content.vb: Public ReadOnly Property Windowless As Boolean
  overload: System.Settings.Windowless*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Settings.EnableHTMLAccess
  commentId: P:System.Settings.EnableHTMLAccess
  id: EnableHTMLAccess
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableHTMLAccess
  nameWithType: Settings.EnableHTMLAccess
  fullName: System.Settings.EnableHTMLAccess
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableHTMLAccess
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 159
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets a value that indicates whether the Silverlight plug-in allows hosted content\nor its runtime to access the HTML DOM.\n"
  example: []
  syntax:
    content: public bool EnableHTMLAccess { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if hosted content can access the browser DOM; otherwise, false.\n"
    content.vb: Public ReadOnly Property EnableHTMLAccess As Boolean
  overload: System.Settings.EnableHTMLAccess*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Settings.MaxFrameRate
  commentId: P:System.Settings.MaxFrameRate
  id: MaxFrameRate
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: MaxFrameRate
  nameWithType: Settings.MaxFrameRate
  fullName: System.Settings.MaxFrameRate
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MaxFrameRate
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 168
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets the maximum number of frames to render per second.\n"
  example: []
  syntax:
    content: public int MaxFrameRate { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer value that specifies the maximum number of frames to render per second.\nThe default value is 60.\n"
    content.vb: Public Property MaxFrameRate As Integer
  overload: System.Settings.MaxFrameRate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableAutoZoom
  commentId: P:System.Settings.EnableAutoZoom
  id: EnableAutoZoom
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableAutoZoom
  nameWithType: Settings.EnableAutoZoom
  fullName: System.Settings.EnableAutoZoom
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableAutoZoom
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 182
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets a value that indicates whether the Silverlight plug-in will resize\nits content based on the current browser zoom setting.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool EnableAutoZoom { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if Silverlight responds to the browser zoom setting; otherwise, false. The\ndefault is true.\n"
    content.vb: >-
      <NotImplemented>

      Public Property EnableAutoZoom As Boolean
  overload: System.Settings.EnableAutoZoom*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableCacheVisualization
  commentId: P:System.Settings.EnableCacheVisualization
  id: EnableCacheVisualization
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableCacheVisualization
  nameWithType: Settings.EnableCacheVisualization
  fullName: System.Settings.EnableCacheVisualization
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableCacheVisualization
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 193
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets a value that indicates whether to use a non-production analysis\nvisualization mode, which shows areas of a page that are not being GPU accelerated\nwith a colored overlay. Do not use in production code.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool EnableCacheVisualization { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if cache visualization is enabled; otherwise, false.\n"
    content.vb: >-
      <NotImplemented>

      Public Property EnableCacheVisualization As Boolean
  overload: System.Settings.EnableCacheVisualization*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableFrameRateCounter
  commentId: P:System.Settings.EnableFrameRateCounter
  id: EnableFrameRateCounter
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableFrameRateCounter
  nameWithType: Settings.EnableFrameRateCounter
  fullName: System.Settings.EnableFrameRateCounter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableFrameRateCounter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 205
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets a value that indicates whether to display the current frame rate\nin the hosting browser&apos;s status bar. (Microsoft Internet Explorer only.)\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool EnableFrameRateCounter { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the frames-per-second (fps) of the current rendered Silverlight content\nwill be displayed in the hosting browser&apos;s status bar; otherwise, false. The\ndefault is false.\n"
    content.vb: >-
      <NotImplemented>

      Public Property EnableFrameRateCounter As Boolean
  overload: System.Settings.EnableFrameRateCounter*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Settings.EnableGPUAcceleration
  commentId: P:System.Settings.EnableGPUAcceleration
  id: EnableGPUAcceleration
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableGPUAcceleration
  nameWithType: Settings.EnableGPUAcceleration
  fullName: System.Settings.EnableGPUAcceleration
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableGPUAcceleration
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 215
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets a value that indicates whether to use graphics processor unit (GPU) hardware\nacceleration for cached compositions, which potentially results in graphics optimization.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool EnableGPUAcceleration { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if hardware acceleration is enabled; otherwise, false.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property EnableGPUAcceleration As Boolean
  overload: System.Settings.EnableGPUAcceleration*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Settings.EnableRedrawRegions
  commentId: P:System.Settings.EnableRedrawRegions
  id: EnableRedrawRegions
  parent: System.Settings
  langs:
  - csharp
  - vb
  name: EnableRedrawRegions
  nameWithType: Settings.EnableRedrawRegions
  fullName: System.Settings.EnableRedrawRegions
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/Settings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnableRedrawRegions
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/Settings.cs
    startLine: 226
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets a value that indicates whether to show the areas of the Silverlight\nplug-in that are being redrawn each frame.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool EnableRedrawRegions { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the areas of the plug-in that are being redrawn each frame are shown;\notherwise, false.\n"
    content.vb: >-
      <NotImplemented>

      Public Property EnableRedrawRegions As Boolean
  overload: System.Settings.EnableRedrawRegions*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Settings.#ctor*
  commentId: Overload:System.Settings.#ctor
  name: Settings
  nameWithType: Settings.Settings
  fullName: System.Settings.Settings
- uid: System.Settings.DefaultResourceLookupMode*
  commentId: Overload:System.Settings.DefaultResourceLookupMode
  name: DefaultResourceLookupMode
  nameWithType: Settings.DefaultResourceLookupMode
  fullName: System.Settings.DefaultResourceLookupMode
- uid: System.Windows.InheritanceBehavior
  commentId: T:System.Windows.InheritanceBehavior
  parent: System.Windows
  name: InheritanceBehavior
  nameWithType: InheritanceBehavior
  fullName: System.Windows.InheritanceBehavior
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Settings.ScrollDebounce*
  commentId: Overload:System.Settings.ScrollDebounce
  name: ScrollDebounce
  nameWithType: Settings.ScrollDebounce
  fullName: System.Settings.ScrollDebounce
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Settings.DefaultSoapCredentialsMode*
  commentId: Overload:System.Settings.DefaultSoapCredentialsMode
  name: DefaultSoapCredentialsMode
  nameWithType: Settings.DefaultSoapCredentialsMode
  fullName: System.Settings.DefaultSoapCredentialsMode
- uid: System.Net.CredentialsMode
  commentId: T:System.Net.CredentialsMode
  parent: System.Net
  name: CredentialsMode
  nameWithType: CredentialsMode
  fullName: System.Net.CredentialsMode
- uid: System.Net
  commentId: N:System.Net
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Settings.EnableBindingErrorsLogging*
  commentId: Overload:System.Settings.EnableBindingErrorsLogging
  name: EnableBindingErrorsLogging
  nameWithType: Settings.EnableBindingErrorsLogging
  fullName: System.Settings.EnableBindingErrorsLogging
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Settings.EnableBindingErrorsThrowing*
  commentId: Overload:System.Settings.EnableBindingErrorsThrowing
  name: EnableBindingErrorsThrowing
  nameWithType: Settings.EnableBindingErrorsThrowing
  fullName: System.Settings.EnableBindingErrorsThrowing
- uid: System.Settings.EnableWebRequestsLogging*
  commentId: Overload:System.Settings.EnableWebRequestsLogging
  name: EnableWebRequestsLogging
  nameWithType: Settings.EnableWebRequestsLogging
  fullName: System.Settings.EnableWebRequestsLogging
- uid: System.Settings.EnableInteropLogging*
  commentId: Overload:System.Settings.EnableInteropLogging
  name: EnableInteropLogging
  nameWithType: Settings.EnableInteropLogging
  fullName: System.Settings.EnableInteropLogging
- uid: System.Settings.EnablePerformanceLogging*
  commentId: Overload:System.Settings.EnablePerformanceLogging
  name: EnablePerformanceLogging
  nameWithType: Settings.EnablePerformanceLogging
  fullName: System.Settings.EnablePerformanceLogging
- uid: System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered*
  commentId: Overload:System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  name: EnableOptimizationWhereCollapsedControlsAreNotRendered
  nameWithType: Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
  fullName: System.Settings.EnableOptimizationWhereCollapsedControlsAreNotRendered
- uid: System.Settings.ProgressiveRenderingChunkSize*
  commentId: Overload:System.Settings.ProgressiveRenderingChunkSize
  name: ProgressiveRenderingChunkSize
  nameWithType: Settings.ProgressiveRenderingChunkSize
  fullName: System.Settings.ProgressiveRenderingChunkSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions*
  commentId: Overload:System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  name: EnableInvalidPropertyMetadataDefaultValueExceptions
  nameWithType: Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
  fullName: System.Settings.EnableInvalidPropertyMetadataDefaultValueExceptions
- uid: System.Settings.Windowless*
  commentId: Overload:System.Settings.Windowless
  name: Windowless
  nameWithType: Settings.Windowless
  fullName: System.Settings.Windowless
- uid: System.Settings.EnableHTMLAccess*
  commentId: Overload:System.Settings.EnableHTMLAccess
  name: EnableHTMLAccess
  nameWithType: Settings.EnableHTMLAccess
  fullName: System.Settings.EnableHTMLAccess
- uid: System.Settings.MaxFrameRate*
  commentId: Overload:System.Settings.MaxFrameRate
  name: MaxFrameRate
  nameWithType: Settings.MaxFrameRate
  fullName: System.Settings.MaxFrameRate
- uid: System.Settings.EnableAutoZoom*
  commentId: Overload:System.Settings.EnableAutoZoom
  name: EnableAutoZoom
  nameWithType: Settings.EnableAutoZoom
  fullName: System.Settings.EnableAutoZoom
- uid: System.Settings.EnableCacheVisualization*
  commentId: Overload:System.Settings.EnableCacheVisualization
  name: EnableCacheVisualization
  nameWithType: Settings.EnableCacheVisualization
  fullName: System.Settings.EnableCacheVisualization
- uid: System.Settings.EnableFrameRateCounter*
  commentId: Overload:System.Settings.EnableFrameRateCounter
  name: EnableFrameRateCounter
  nameWithType: Settings.EnableFrameRateCounter
  fullName: System.Settings.EnableFrameRateCounter
- uid: System.Settings.EnableGPUAcceleration*
  commentId: Overload:System.Settings.EnableGPUAcceleration
  name: EnableGPUAcceleration
  nameWithType: Settings.EnableGPUAcceleration
  fullName: System.Settings.EnableGPUAcceleration
- uid: System.Settings.EnableRedrawRegions*
  commentId: Overload:System.Settings.EnableRedrawRegions
  name: EnableRedrawRegions
  nameWithType: Settings.EnableRedrawRegions
  fullName: System.Settings.EnableRedrawRegions
