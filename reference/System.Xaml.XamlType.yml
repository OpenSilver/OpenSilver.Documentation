### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  id: XamlType
  parent: System.Xaml
  children:
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.CanConvertFrom(System.Xaml.XamlType)
  - System.Xaml.XamlType.CanConvertTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsImmutable
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsImmutable
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.SerializationVisibility
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  - vb
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 47
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: 'public class XamlType : IEquatable<XamlType>'
    content.vb: >-
      Public Class XamlType
          Implements IEquatable(Of XamlType)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Xaml.XamlType}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  commentId: M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: XamlType(Type, XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type, XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(System.Type, System.Xaml.XamlSchemaContext)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 95
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType(Type underlyingType, XamlSchemaContext schemaContext)
    parameters:
    - id: underlyingType
      type: System.Type
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
    content.vb: Public Sub New(underlyingType As Type, schemaContext As XamlSchemaContext)
  overload: System.Xaml.XamlType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  commentId: M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: XamlType(Type, XamlSchemaContext, XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type, XamlSchemaContext, XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(System.Type, System.Xaml.XamlSchemaContext, System.Xaml.Schema.XamlTypeInvoker)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 121
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType(Type underlyingType, XamlSchemaContext schemaContext, XamlTypeInvoker invoker)
    parameters:
    - id: underlyingType
      type: System.Type
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
    content.vb: Public Sub New(underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)
  overload: System.Xaml.XamlType.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  commentId: M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: XamlType(String, String, IList<XamlType>, XamlSchemaContext)
  nameWithType: XamlType.XamlType(String, String, IList<XamlType>, XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(System.String, System.String, System.Collections.Generic.IList<System.Xaml.XamlType>, System.Xaml.XamlSchemaContext)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 156
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType(string unknownTypeNamespace, string unknownTypeName, IList<XamlType> typeArguments, XamlSchemaContext schemaContext)
    parameters:
    - id: unknownTypeNamespace
      type: System.String
    - id: unknownTypeName
      type: System.String
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
    content.vb: Public Sub New(unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)
  overload: System.Xaml.XamlType.#ctor*
  nameWithType.vb: XamlType.XamlType(String, String, IList(Of XamlType), XamlSchemaContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.XamlType.XamlType(System.String, System.String, System.Collections.Generic.IList(Of System.Xaml.XamlType), System.Xaml.XamlSchemaContext)
  name.vb: XamlType(String, String, IList(Of XamlType), XamlSchemaContext)
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  commentId: M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: XamlType(String, IList<XamlType>, XamlSchemaContext)
  nameWithType: XamlType.XamlType(String, IList<XamlType>, XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(System.String, System.Collections.Generic.IList<System.Xaml.XamlType>, System.Xaml.XamlSchemaContext)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 173
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected XamlType(string typeName, IList<XamlType> typeArguments, XamlSchemaContext schemaContext)
    parameters:
    - id: typeName
      type: System.String
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
    content.vb: Protected Sub New(typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)
  overload: System.Xaml.XamlType.#ctor*
  nameWithType.vb: XamlType.XamlType(String, IList(Of XamlType), XamlSchemaContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Xaml.XamlType.XamlType(System.String, System.Collections.Generic.IList(Of System.Xaml.XamlType), System.Xaml.XamlSchemaContext)
  name.vb: XamlType(String, IList(Of XamlType), XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  commentId: P:System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowedContentTypes
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 198
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public IList<XamlType> AllowedContentTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)
  overload: System.Xaml.XamlType.AllowedContentTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.BaseType
  commentId: P:System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BaseType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 200
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType BaseType { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Public ReadOnly Property BaseType As XamlType
  overload: System.Xaml.XamlType.BaseType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  commentId: P:System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConstructionRequiresArguments
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 202
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ConstructionRequiresArguments As Boolean
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.ContentProperty
  commentId: P:System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContentProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 204
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlMember ContentProperty { get; }
    parameters: []
    return:
      type: System.Xaml.XamlMember
    content.vb: Public ReadOnly Property ContentProperty As XamlMember
  overload: System.Xaml.XamlType.ContentProperty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.ContentWrappers
  commentId: P:System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContentWrappers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 206
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public IList<XamlType> ContentWrappers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Public ReadOnly Property ContentWrappers As IList(Of XamlType)
  overload: System.Xaml.XamlType.ContentWrappers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.DeferringLoader
  commentId: P:System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DeferringLoader
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 208
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlValueConverter<XamlDeferringLoader> DeferringLoader { get; }
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
    content.vb: Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)
  overload: System.Xaml.XamlType.DeferringLoader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.Invoker
  commentId: P:System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Invoker
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 210
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlTypeInvoker Invoker { get; }
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
    content.vb: Public ReadOnly Property Invoker As XamlTypeInvoker
  overload: System.Xaml.XamlType.Invoker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsAmbient
  commentId: P:System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAmbient
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 214
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsAmbient { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAmbient As Boolean
  overload: System.Xaml.XamlType.IsAmbient*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsArray
  commentId: P:System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsArray
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 216
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsArray { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsArray As Boolean
  overload: System.Xaml.XamlType.IsArray*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsCollection
  commentId: P:System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsCollection
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 219
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsCollection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCollection As Boolean
  overload: System.Xaml.XamlType.IsCollection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsConstructible
  commentId: P:System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsConstructible
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 221
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsConstructible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConstructible As Boolean
  overload: System.Xaml.XamlType.IsConstructible*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsDictionary
  commentId: P:System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsDictionary
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 223
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsDictionary { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDictionary As Boolean
  overload: System.Xaml.XamlType.IsDictionary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsGeneric
  commentId: P:System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsGeneric
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 225
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsGeneric { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsGeneric As Boolean
  overload: System.Xaml.XamlType.IsGeneric*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsMarkupExtension
  commentId: P:System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsMarkupExtension
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 227
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsMarkupExtension { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMarkupExtension As Boolean
  overload: System.Xaml.XamlType.IsMarkupExtension*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsNameScope
  commentId: P:System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsNameScope
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 229
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsNameScope { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNameScope As Boolean
  overload: System.Xaml.XamlType.IsNameScope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsNameValid
  commentId: P:System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsNameValid
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 231
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsNameValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNameValid As Boolean
  overload: System.Xaml.XamlType.IsNameValid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsNullable
  commentId: P:System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsNullable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 233
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsNullable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNullable As Boolean
  overload: System.Xaml.XamlType.IsNullable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsPublic
  commentId: P:System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsPublic
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 235
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsPublic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPublic As Boolean
  overload: System.Xaml.XamlType.IsPublic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsUnknown
  commentId: P:System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsUnknown
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 237
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsUnknown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUnknown As Boolean
  overload: System.Xaml.XamlType.IsUnknown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  commentId: P:System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsUsableDuringInitialization
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 239
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUsableDuringInitialization As Boolean
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  commentId: P:System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsWhitespaceSignificantCollection
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 241
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.IsXData
  commentId: P:System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsXData
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 243
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsXData { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsXData As Boolean
  overload: System.Xaml.XamlType.IsXData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.ItemType
  commentId: P:System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ItemType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 245
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType ItemType { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Public ReadOnly Property ItemType As XamlType
  overload: System.Xaml.XamlType.ItemType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.KeyType
  commentId: P:System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 247
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType KeyType { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Public ReadOnly Property KeyType As XamlType
  overload: System.Xaml.XamlType.KeyType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  commentId: P:System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MarkupExtensionReturnType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 249
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType MarkupExtensionReturnType { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Public ReadOnly Property MarkupExtensionReturnType As XamlType
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.Name
  commentId: P:System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 251
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: System.Xaml.XamlType.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  commentId: P:System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PreferredXamlNamespace
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 253
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public string PreferredXamlNamespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PreferredXamlNamespace As String
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.SchemaContext
  commentId: P:System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SchemaContext
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 270
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlSchemaContext SchemaContext { get; }
    parameters: []
    return:
      type: System.Xaml.XamlSchemaContext
    content.vb: Public ReadOnly Property SchemaContext As XamlSchemaContext
  overload: System.Xaml.XamlType.SchemaContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  commentId: P:System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TrimSurroundingWhitespace
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 272
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TrimSurroundingWhitespace As Boolean
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.TypeArguments
  commentId: P:System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TypeArguments
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 274
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public IList<XamlType> TypeArguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Public ReadOnly Property TypeArguments As IList(Of XamlType)
  overload: System.Xaml.XamlType.TypeArguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.TypeConverter
  commentId: P:System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TypeConverter
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 277
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlValueConverter<TypeConverter> TypeConverter { get; }
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
    content.vb: Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)
  overload: System.Xaml.XamlType.TypeConverter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.UnderlyingType
  commentId: P:System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UnderlyingType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 279
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public Type UnderlyingType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property UnderlyingType As Type
  overload: System.Xaml.XamlType.UnderlyingType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.ValueSerializer
  commentId: P:System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValueSerializer
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 281
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlValueConverter<ValueSerializer> ValueSerializer { get; }
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.Markup.ValueSerializer}
    content.vb: Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)
  overload: System.Xaml.XamlType.ValueSerializer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Equality(XamlType, XamlType)
  nameWithType: XamlType.Equality(XamlType, XamlType)
  fullName: System.Xaml.XamlType.Equality(System.Xaml.XamlType, System.Xaml.XamlType)
  type: Operator
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 296
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public static bool operator ==(XamlType left, XamlType right)
    parameters:
    - id: left
      type: System.Xaml.XamlType
    - id: right
      type: System.Xaml.XamlType
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As XamlType, right As XamlType) As Boolean
  overload: System.Xaml.XamlType.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Inequality(XamlType, XamlType)
  nameWithType: XamlType.Inequality(XamlType, XamlType)
  fullName: System.Xaml.XamlType.Inequality(System.Xaml.XamlType, System.Xaml.XamlType)
  type: Operator
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 301
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public static bool operator !=(XamlType left, XamlType right)
    parameters:
    - id: left
      type: System.Xaml.XamlType
    - id: right
      type: System.Xaml.XamlType
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As XamlType, right As XamlType) As Boolean
  overload: System.Xaml.XamlType.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 306
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool Equals(XamlType other)
    parameters:
    - id: other
      type: System.Xaml.XamlType
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As XamlType) As Boolean
  overload: System.Xaml.XamlType.Equals*
  implements:
  - System.IEquatable{System.Xaml.XamlType}.Equals(System.Xaml.XamlType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.Equals(System.Object)
  commentId: M:System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 315
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: System.Xaml.XamlType.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xaml.XamlType.GetHashCode
  commentId: M:System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 321
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: System.Xaml.XamlType.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xaml.XamlType.ToString
  commentId: M:System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 332
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Xaml.XamlType.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xaml.XamlType.CanConvertFrom(System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.CanConvertFrom(System.Xaml.XamlType)
  id: CanConvertFrom(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: CanConvertFrom(XamlType)
  nameWithType: XamlType.CanConvertFrom(XamlType)
  fullName: System.Xaml.XamlType.CanConvertFrom(System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertFrom
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 343
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nGets a value indicating this type can be assigned or converted from the specified type.\n"
  example: []
  syntax:
    content: public bool CanConvertFrom(XamlType xamlType)
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: Type to convert from.
    return:
      type: System.Boolean
      description: <code>true</code>, if it can be assigned or converted from the input type , <code>false</code> otherwise.
    content.vb: Public Function CanConvertFrom(xamlType As XamlType) As Boolean
  overload: System.Xaml.XamlType.CanConvertFrom*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.CanConvertTo(System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.CanConvertTo(System.Xaml.XamlType)
  id: CanConvertTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: CanConvertTo(XamlType)
  nameWithType: XamlType.CanConvertTo(XamlType)
  fullName: System.Xaml.XamlType.CanConvertTo(System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertTo
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 363
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nGets a value indicating this type can be assigned or converted to the specified type\n"
  example: []
  syntax:
    content: public bool CanConvertTo(XamlType xamlType)
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: Type to convert to.
    return:
      type: System.Boolean
      description: <code>true</code>, if it can be assigned or converted to the input type , <code>false</code> otherwise.
    content.vb: Public Function CanConvertTo(xamlType As XamlType) As Boolean
  overload: System.Xaml.XamlType.CanConvertTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.IsImmutable
  commentId: P:System.Xaml.XamlType.IsImmutable
  id: IsImmutable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: IsImmutable
  nameWithType: XamlType.IsImmutable
  fullName: System.Xaml.XamlType.IsImmutable
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsImmutable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 378
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool IsImmutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsImmutable As Boolean
  overload: System.Xaml.XamlType.IsImmutable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlType.LookupIsImmutable
  commentId: M:System.Xaml.XamlType.LookupIsImmutable
  id: LookupIsImmutable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsImmutable()
  nameWithType: XamlType.LookupIsImmutable()
  fullName: System.Xaml.XamlType.LookupIsImmutable()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsImmutable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 381
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsImmutable()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsImmutable As Boolean
  overload: System.Xaml.XamlType.LookupIsImmutable*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanAssignTo
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 406
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual bool CanAssignTo(XamlType xamlType)
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanAssignTo(xamlType As XamlType) As Boolean
  overload: System.Xaml.XamlType.CanAssignTo*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  commentId: M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAliasedProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 432
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlMember GetAliasedProperty(XamlDirective directive)
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
    return:
      type: System.Xaml.XamlMember
    content.vb: Public Function GetAliasedProperty(directive As XamlDirective) As XamlMember
  overload: System.Xaml.XamlType.GetAliasedProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  commentId: M:System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAllAttachableMembers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 444
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public ICollection<XamlMember> GetAllAttachableMembers()
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
    content.vb: Public Function GetAllAttachableMembers As ICollection(Of XamlMember)
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetAllMembers
  commentId: M:System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAllMembers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 451
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public ICollection<XamlMember> GetAllMembers()
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
    content.vb: Public Function GetAllMembers As ICollection(Of XamlMember)
  overload: System.Xaml.XamlType.GetAllMembers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  commentId: M:System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAttachableMember
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 463
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlMember GetAttachableMember(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Xaml.XamlMember
    content.vb: Public Function GetAttachableMember(name As String) As XamlMember
  overload: System.Xaml.XamlType.GetAttachableMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetMember(System.String)
  commentId: M:System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetMember
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 468
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlMember GetMember(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Xaml.XamlMember
    content.vb: Public Function GetMember(name As String) As XamlMember
  overload: System.Xaml.XamlType.GetMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  commentId: M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPositionalParameters
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 478
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public IList<XamlType> GetPositionalParameters(int parameterCount)
    parameters:
    - id: parameterCount
      type: System.Int32
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Public Function GetPositionalParameters(parameterCount As Integer) As IList(Of XamlType)
  overload: System.Xaml.XamlType.GetPositionalParameters*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlType.GetXamlNamespaces
  commentId: M:System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetXamlNamespaces
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 483
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual IList<string> GetXamlNamespaces()
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Overridable Function GetXamlNamespaces As IList(Of String)
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  commentId: M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupAliasedProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 524
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember LookupAliasedProperty(XamlDirective directive)
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function LookupAliasedProperty(directive As XamlDirective) As XamlMember
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  commentId: M:System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupAllAttachableMembers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 551
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual IEnumerable<XamlMember> LookupAllAttachableMembers()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
    content.vb: Protected Overridable Function LookupAllAttachableMembers As IEnumerable(Of XamlMember)
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupAllMembers
  commentId: M:System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupAllMembers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 625
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual IEnumerable<XamlMember> LookupAllMembers()
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
    content.vb: Protected Overridable Function LookupAllMembers As IEnumerable(Of XamlMember)
  overload: System.Xaml.XamlType.LookupAllMembers*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  commentId: M:System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupAllowedContentTypes
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 673
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual IList<XamlType> LookupAllowedContentTypes()
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Protected Overridable Function LookupAllowedContentTypes As IList(Of XamlType)
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  commentId: M:System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupAttachableMember
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 690
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember LookupAttachableMember(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function LookupAttachableMember(name As String) As XamlMember
  overload: System.Xaml.XamlType.LookupAttachableMember*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupBaseType
  commentId: M:System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupBaseType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 695
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlType LookupBaseType()
    return:
      type: System.Xaml.XamlType
    content.vb: Protected Overridable Function LookupBaseType As XamlType
  overload: System.Xaml.XamlType.LookupBaseType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupCollectionKind
  commentId: M:System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupCollectionKind
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 704
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlCollectionKind LookupCollectionKind()
    return:
      type: System.Xaml.Schema.XamlCollectionKind
    content.vb: Protected Overridable Function LookupCollectionKind As XamlCollectionKind
  overload: System.Xaml.XamlType.LookupCollectionKind*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  commentId: M:System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupConstructionRequiresArguments
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 722
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupConstructionRequiresArguments As Boolean
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupContentProperty
  commentId: M:System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupContentProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 746
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember LookupContentProperty()
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function LookupContentProperty As XamlMember
  overload: System.Xaml.XamlType.LookupContentProperty*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupContentWrappers
  commentId: M:System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupContentWrappers
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 752
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual IList<XamlType> LookupContentWrappers()
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Protected Overridable Function LookupContentWrappers As IList(Of XamlType)
  overload: System.Xaml.XamlType.LookupContentWrappers*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  commentId: M:System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupCustomAttributeProvider
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 768
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual ICustomAttributeProvider LookupCustomAttributeProvider()
    return:
      type: System.Reflection.ICustomAttributeProvider
    content.vb: Protected Overridable Function LookupCustomAttributeProvider As ICustomAttributeProvider
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupDeferringLoader
  commentId: M:System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupDeferringLoader
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 773
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlValueConverter<XamlDeferringLoader> LookupDeferringLoader()
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
    content.vb: Protected Overridable Function LookupDeferringLoader As XamlValueConverter(Of XamlDeferringLoader)
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupInvoker
  commentId: M:System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupInvoker
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 787
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlTypeInvoker LookupInvoker()
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
    content.vb: Protected Overridable Function LookupInvoker As XamlTypeInvoker
  overload: System.Xaml.XamlType.LookupInvoker*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsAmbient
  commentId: M:System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsAmbient
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 792
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsAmbient()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsAmbient As Boolean
  overload: System.Xaml.XamlType.LookupIsAmbient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsConstructible
  commentId: M:System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsConstructible
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 800
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsConstructible()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsConstructible As Boolean
  overload: System.Xaml.XamlType.LookupIsConstructible*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  commentId: M:System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsMarkupExtension
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 813
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsMarkupExtension()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsMarkupExtension As Boolean
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsNameScope
  commentId: M:System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsNameScope
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 818
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsNameScope()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsNameScope As Boolean
  overload: System.Xaml.XamlType.LookupIsNameScope*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsNullable
  commentId: M:System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsNullable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 823
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsNullable()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsNullable As Boolean
  overload: System.Xaml.XamlType.LookupIsNullable*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsPublic
  commentId: M:System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsPublic
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 828
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsPublic()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsPublic As Boolean
  overload: System.Xaml.XamlType.LookupIsPublic*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsUnknown
  commentId: M:System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsUnknown
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 833
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsUnknown()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsUnknown As Boolean
  overload: System.Xaml.XamlType.LookupIsUnknown*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  commentId: M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsWhitespaceSignificantCollection
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 838
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsWhitespaceSignificantCollection As Boolean
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupIsXData
  commentId: M:System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupIsXData
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 844
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupIsXData()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupIsXData As Boolean
  overload: System.Xaml.XamlType.LookupIsXData*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupItemType
  commentId: M:System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupItemType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 849
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlType LookupItemType()
    return:
      type: System.Xaml.XamlType
    content.vb: Protected Overridable Function LookupItemType As XamlType
  overload: System.Xaml.XamlType.LookupItemType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupKeyType
  commentId: M:System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupKeyType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 879
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlType LookupKeyType()
    return:
      type: System.Xaml.XamlType
    content.vb: Protected Overridable Function LookupKeyType As XamlType
  overload: System.Xaml.XamlType.LookupKeyType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  commentId: M:System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupMarkupExtensionReturnType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 888
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlType LookupMarkupExtensionReturnType()
    return:
      type: System.Xaml.XamlType
    content.vb: Protected Overridable Function LookupMarkupExtensionReturnType As XamlType
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  commentId: M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupMember(String, Boolean)
  nameWithType: XamlType.LookupMember(String, Boolean)
  fullName: System.Xaml.XamlType.LookupMember(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupMember
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 894
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember LookupMember(string name, bool skipReadOnlyCheck)
    parameters:
    - id: name
      type: System.String
    - id: skipReadOnlyCheck
      type: System.Boolean
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function LookupMember(name As String, skipReadOnlyCheck As Boolean) As XamlMember
  overload: System.Xaml.XamlType.LookupMember*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  commentId: M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupPositionalParameters
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 900
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual IList<XamlType> LookupPositionalParameters(int parameterCount)
    parameters:
    - id: parameterCount
      type: System.Int32
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
    content.vb: Protected Overridable Function LookupPositionalParameters(parameterCount As Integer) As IList(Of XamlType)
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  commentId: M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupSetMarkupExtensionHandler
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 928
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual EventHandler<XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler()
    return:
      type: System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
    content.vb: Protected Overridable Function LookupSetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  commentId: M:System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupSetTypeConverterHandler
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 939
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual EventHandler<XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler()
    return:
      type: System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
    content.vb: Protected Overridable Function LookupSetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  commentId: M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupTrimSurroundingWhitespace
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 950
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupTrimSurroundingWhitespace As Boolean
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupTypeConverter
  commentId: M:System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupTypeConverter
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 955
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlValueConverter<TypeConverter> LookupTypeConverter()
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
    content.vb: Protected Overridable Function LookupTypeConverter As XamlValueConverter(Of TypeConverter)
  overload: System.Xaml.XamlType.LookupTypeConverter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupUnderlyingType
  commentId: M:System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupUnderlyingType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 995
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual Type LookupUnderlyingType()
    return:
      type: System.Type
    content.vb: Protected Overridable Function LookupUnderlyingType As Type
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  commentId: M:System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupUsableDuringInitialization
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 1000
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function LookupUsableDuringInitialization As Boolean
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.LookupValueSerializer
  commentId: M:System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LookupValueSerializer
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 1006
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlValueConverter<ValueSerializer> LookupValueSerializer()
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.Markup.ValueSerializer}
    content.vb: Protected Overridable Function LookupValueSerializer As XamlValueConverter(Of ValueSerializer)
  overload: System.Xaml.XamlType.LookupValueSerializer*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlType.SerializationVisibility
  commentId: P:System.Xaml.XamlType.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlType
  langs:
  - csharp
  - vb
  name: SerializationVisibility
  nameWithType: XamlType.SerializationVisibility
  fullName: System.Xaml.XamlType.SerializationVisibility
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SerializationVisibility
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlType.cs
    startLine: 1039
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nVisability object during serialization. This property lookup attribute <xref href=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public DesignerSerializationVisibility SerializationVisibility { get; }
    parameters: []
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
    content.vb: Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility
  overload: System.Xaml.XamlType.SerializationVisibility*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{System.Xaml.XamlType}
  commentId: T:System.IEquatable{System.Xaml.XamlType}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<XamlType>
  nameWithType: IEquatable<XamlType>
  fullName: System.IEquatable<System.Xaml.XamlType>
  nameWithType.vb: IEquatable(Of XamlType)
  fullName.vb: System.IEquatable(Of System.Xaml.XamlType)
  name.vb: IEquatable(Of XamlType)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.XamlType.#ctor*
  commentId: Overload:System.Xaml.XamlType.#ctor
  name: XamlType
  nameWithType: XamlType.XamlType
  fullName: System.Xaml.XamlType.XamlType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  commentId: T:System.Xaml.XamlSchemaContext
  parent: System.Xaml
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.Schema.XamlTypeInvoker
  commentId: T:System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema
  commentId: N:System.Xaml.Schema
  name: System.Xaml.Schema
  nameWithType: System.Xaml.Schema
  fullName: System.Xaml.Schema
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  commentId: T:System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  nameWithType.vb: IList(Of XamlType)
  fullName.vb: System.Collections.Generic.IList(Of System.Xaml.XamlType)
  name.vb: IList(Of XamlType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xaml.XamlType.AllowedContentTypes*
  commentId: Overload:System.Xaml.XamlType.AllowedContentTypes
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  commentId: Overload:System.Xaml.XamlType.BaseType
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  parent: System.Xaml
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  commentId: Overload:System.Xaml.XamlType.ConstructionRequiresArguments
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ContentProperty*
  commentId: Overload:System.Xaml.XamlType.ContentProperty
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  commentId: T:System.Xaml.XamlMember
  parent: System.Xaml
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers*
  commentId: Overload:System.Xaml.XamlType.ContentWrappers
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  commentId: Overload:System.Xaml.XamlType.DeferringLoader
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  commentId: T:System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  definition: System.Xaml.Schema.XamlValueConverter`1
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  nameWithType.vb: XamlValueConverter(Of XamlDeferringLoader)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of System.Xaml.XamlDeferringLoader)
  name.vb: XamlValueConverter(Of XamlDeferringLoader)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: System.Xaml.XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: System.Xaml.XamlDeferringLoader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlValueConverter`1
  commentId: T:System.Xaml.Schema.XamlValueConverter`1
  parent: System.Xaml.Schema
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
  nameWithType.vb: XamlValueConverter(Of TConverterBase)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase)
  name.vb: XamlValueConverter(Of TConverterBase)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.Invoker*
  commentId: Overload:System.Xaml.XamlType.Invoker
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  commentId: Overload:System.Xaml.XamlType.IsAmbient
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  commentId: Overload:System.Xaml.XamlType.IsArray
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  commentId: Overload:System.Xaml.XamlType.IsCollection
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  commentId: Overload:System.Xaml.XamlType.IsConstructible
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  commentId: Overload:System.Xaml.XamlType.IsDictionary
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  commentId: Overload:System.Xaml.XamlType.IsGeneric
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  commentId: Overload:System.Xaml.XamlType.IsMarkupExtension
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  commentId: Overload:System.Xaml.XamlType.IsNameScope
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  commentId: Overload:System.Xaml.XamlType.IsNameValid
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  commentId: Overload:System.Xaml.XamlType.IsNullable
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  commentId: Overload:System.Xaml.XamlType.IsPublic
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  commentId: Overload:System.Xaml.XamlType.IsUnknown
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  commentId: Overload:System.Xaml.XamlType.IsUsableDuringInitialization
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  commentId: Overload:System.Xaml.XamlType.IsWhitespaceSignificantCollection
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  commentId: Overload:System.Xaml.XamlType.IsXData
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  commentId: Overload:System.Xaml.XamlType.ItemType
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  commentId: Overload:System.Xaml.XamlType.KeyType
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  commentId: Overload:System.Xaml.XamlType.MarkupExtensionReturnType
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  commentId: Overload:System.Xaml.XamlType.Name
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  commentId: Overload:System.Xaml.XamlType.PreferredXamlNamespace
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  commentId: Overload:System.Xaml.XamlType.SchemaContext
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  commentId: Overload:System.Xaml.XamlType.TrimSurroundingWhitespace
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  commentId: Overload:System.Xaml.XamlType.TypeArguments
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  commentId: Overload:System.Xaml.XamlType.TypeConverter
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  commentId: T:System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  definition: System.Xaml.Schema.XamlValueConverter`1
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  nameWithType.vb: XamlValueConverter(Of TypeConverter)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of System.ComponentModel.TypeConverter)
  name.vb: XamlValueConverter(Of TypeConverter)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: System.ComponentModel.TypeConverter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: System.ComponentModel.TypeConverter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.UnderlyingType*
  commentId: Overload:System.Xaml.XamlType.UnderlyingType
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  commentId: Overload:System.Xaml.XamlType.ValueSerializer
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.Markup.ValueSerializer}
  commentId: T:System.Xaml.Schema.XamlValueConverter{System.Xaml.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  definition: System.Xaml.Schema.XamlValueConverter`1
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.Markup.ValueSerializer>
  nameWithType.vb: XamlValueConverter(Of ValueSerializer)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of System.Xaml.Markup.ValueSerializer)
  name.vb: XamlValueConverter(Of ValueSerializer)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: System.Xaml.Markup.ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: System.Xaml.Markup.ValueSerializer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.op_Equality*
  commentId: Overload:System.Xaml.XamlType.op_Equality
  name: Equality
  nameWithType: XamlType.Equality
  fullName: System.Xaml.XamlType.Equality
- uid: System.Xaml.XamlType.op_Inequality*
  commentId: Overload:System.Xaml.XamlType.op_Inequality
  name: Inequality
  nameWithType: XamlType.Inequality
  fullName: System.Xaml.XamlType.Inequality
- uid: System.Xaml.XamlType.Equals*
  commentId: Overload:System.Xaml.XamlType.Equals
  name: Equals
  nameWithType: XamlType.Equals
  fullName: System.Xaml.XamlType.Equals
- uid: System.IEquatable{System.Xaml.XamlType}.Equals(System.Xaml.XamlType)
  commentId: M:System.IEquatable{System.Xaml.XamlType}.Equals(System.Xaml.XamlType)
  parent: System.IEquatable{System.Xaml.XamlType}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(XamlType)
  nameWithType: IEquatable<XamlType>.Equals(XamlType)
  fullName: System.IEquatable<System.Xaml.XamlType>.Equals(System.Xaml.XamlType)
  nameWithType.vb: IEquatable(Of XamlType).Equals(XamlType)
  fullName.vb: System.IEquatable(Of System.Xaml.XamlType).Equals(System.Xaml.XamlType)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<XamlType>.Equals
    fullName: System.IEquatable<System.Xaml.XamlType>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of XamlType).Equals
    fullName: System.IEquatable(Of System.Xaml.XamlType).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.GetHashCode*
  commentId: Overload:System.Xaml.XamlType.GetHashCode
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
  fullName: System.Xaml.XamlType.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.ToString*
  commentId: Overload:System.Xaml.XamlType.ToString
  name: ToString
  nameWithType: XamlType.ToString
  fullName: System.Xaml.XamlType.ToString
- uid: System.Xaml.XamlType.CanConvertFrom*
  commentId: Overload:System.Xaml.XamlType.CanConvertFrom
  name: CanConvertFrom
  nameWithType: XamlType.CanConvertFrom
  fullName: System.Xaml.XamlType.CanConvertFrom
- uid: System.Xaml.XamlType.CanConvertTo*
  commentId: Overload:System.Xaml.XamlType.CanConvertTo
  name: CanConvertTo
  nameWithType: XamlType.CanConvertTo
  fullName: System.Xaml.XamlType.CanConvertTo
- uid: System.Xaml.XamlType.IsImmutable*
  commentId: Overload:System.Xaml.XamlType.IsImmutable
  name: IsImmutable
  nameWithType: XamlType.IsImmutable
  fullName: System.Xaml.XamlType.IsImmutable
- uid: System.Xaml.XamlType.LookupIsImmutable*
  commentId: Overload:System.Xaml.XamlType.LookupIsImmutable
  name: LookupIsImmutable
  nameWithType: XamlType.LookupIsImmutable
  fullName: System.Xaml.XamlType.LookupIsImmutable
- uid: System.Xaml.XamlType.CanAssignTo*
  commentId: Overload:System.Xaml.XamlType.CanAssignTo
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
  fullName: System.Xaml.XamlType.CanAssignTo
- uid: System.Xaml.XamlType.GetAliasedProperty*
  commentId: Overload:System.Xaml.XamlType.GetAliasedProperty
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
  fullName: System.Xaml.XamlType.GetAliasedProperty
- uid: System.Xaml.XamlDirective
  commentId: T:System.Xaml.XamlDirective
  parent: System.Xaml
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  commentId: Overload:System.Xaml.XamlType.GetAllAttachableMembers
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
  fullName: System.Xaml.XamlType.GetAllAttachableMembers
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  commentId: T:System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  nameWithType.vb: ICollection(Of XamlMember)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Xaml.XamlMember)
  name.vb: ICollection(Of XamlMember)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: System.Xaml.XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: System.Xaml.XamlMember
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.GetAllMembers*
  commentId: Overload:System.Xaml.XamlType.GetAllMembers
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
  fullName: System.Xaml.XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  commentId: Overload:System.Xaml.XamlType.GetAttachableMember
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
  fullName: System.Xaml.XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetMember*
  commentId: Overload:System.Xaml.XamlType.GetMember
  name: GetMember
  nameWithType: XamlType.GetMember
  fullName: System.Xaml.XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  commentId: Overload:System.Xaml.XamlType.GetPositionalParameters
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
  fullName: System.Xaml.XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  commentId: Overload:System.Xaml.XamlType.GetXamlNamespaces
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
  fullName: System.Xaml.XamlType.GetXamlNamespaces
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  commentId: Overload:System.Xaml.XamlType.LookupAliasedProperty
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
  fullName: System.Xaml.XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  commentId: Overload:System.Xaml.XamlType.LookupAllAttachableMembers
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  nameWithType.vb: IEnumerable(Of XamlMember)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xaml.XamlMember)
  name.vb: IEnumerable(Of XamlMember)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: System.Xaml.XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: System.Xaml.XamlMember
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.LookupAllMembers*
  commentId: Overload:System.Xaml.XamlType.LookupAllMembers
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
  fullName: System.Xaml.XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  commentId: Overload:System.Xaml.XamlType.LookupAllowedContentTypes
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  commentId: Overload:System.Xaml.XamlType.LookupAttachableMember
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
  fullName: System.Xaml.XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  commentId: Overload:System.Xaml.XamlType.LookupBaseType
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
  fullName: System.Xaml.XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  commentId: Overload:System.Xaml.XamlType.LookupCollectionKind
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
  fullName: System.Xaml.XamlType.LookupCollectionKind
- uid: System.Xaml.Schema.XamlCollectionKind
  commentId: T:System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  commentId: Overload:System.Xaml.XamlType.LookupConstructionRequiresArguments
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  commentId: Overload:System.Xaml.XamlType.LookupContentProperty
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
  fullName: System.Xaml.XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  commentId: Overload:System.Xaml.XamlType.LookupContentWrappers
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
  fullName: System.Xaml.XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  commentId: Overload:System.Xaml.XamlType.LookupCustomAttributeProvider
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider
- uid: System.Reflection.ICustomAttributeProvider
  commentId: T:System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: true
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  commentId: Overload:System.Xaml.XamlType.LookupDeferringLoader
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
  fullName: System.Xaml.XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  commentId: Overload:System.Xaml.XamlType.LookupInvoker
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
  fullName: System.Xaml.XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  commentId: Overload:System.Xaml.XamlType.LookupIsAmbient
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
  fullName: System.Xaml.XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  commentId: Overload:System.Xaml.XamlType.LookupIsConstructible
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
  fullName: System.Xaml.XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  commentId: Overload:System.Xaml.XamlType.LookupIsMarkupExtension
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  commentId: Overload:System.Xaml.XamlType.LookupIsNameScope
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
  fullName: System.Xaml.XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  commentId: Overload:System.Xaml.XamlType.LookupIsNullable
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
  fullName: System.Xaml.XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  commentId: Overload:System.Xaml.XamlType.LookupIsPublic
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
  fullName: System.Xaml.XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  commentId: Overload:System.Xaml.XamlType.LookupIsUnknown
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
  fullName: System.Xaml.XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  commentId: Overload:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  commentId: Overload:System.Xaml.XamlType.LookupIsXData
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
  fullName: System.Xaml.XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  commentId: Overload:System.Xaml.XamlType.LookupItemType
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
  fullName: System.Xaml.XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  commentId: Overload:System.Xaml.XamlType.LookupKeyType
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
  fullName: System.Xaml.XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  commentId: Overload:System.Xaml.XamlType.LookupMarkupExtensionReturnType
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  commentId: Overload:System.Xaml.XamlType.LookupMember
  name: LookupMember
  nameWithType: XamlType.LookupMember
  fullName: System.Xaml.XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  commentId: Overload:System.Xaml.XamlType.LookupPositionalParameters
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
  fullName: System.Xaml.XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  commentId: Overload:System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
- uid: System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
  commentId: T:System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Xaml.Markup.XamlSetMarkupExtensionEventArgs>
  nameWithType.vb: EventHandler(Of XamlSetMarkupExtensionEventArgs)
  fullName.vb: System.EventHandler(Of System.Xaml.Markup.XamlSetMarkupExtensionEventArgs)
  name.vb: EventHandler(Of XamlSetMarkupExtensionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  commentId: Overload:System.Xaml.XamlType.LookupSetTypeConverterHandler
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler
- uid: System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
  commentId: T:System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Xaml.Markup.XamlSetTypeConverterEventArgs>
  nameWithType.vb: EventHandler(Of XamlSetTypeConverterEventArgs)
  fullName.vb: System.EventHandler(Of System.Xaml.Markup.XamlSetTypeConverterEventArgs)
  name.vb: EventHandler(Of XamlSetTypeConverterEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: System.Xaml.Markup.XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: System.Xaml.Markup.XamlSetTypeConverterEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  commentId: Overload:System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  commentId: Overload:System.Xaml.XamlType.LookupTypeConverter
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
  fullName: System.Xaml.XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  commentId: Overload:System.Xaml.XamlType.LookupUnderlyingType
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
  fullName: System.Xaml.XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  commentId: Overload:System.Xaml.XamlType.LookupUsableDuringInitialization
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  commentId: Overload:System.Xaml.XamlType.LookupValueSerializer
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
  fullName: System.Xaml.XamlType.LookupValueSerializer
- uid: System.ComponentModel.DesignerSerializationVisibilityAttribute
  commentId: T:System.ComponentModel.DesignerSerializationVisibilityAttribute
  isExternal: true
- uid: System.Xaml.XamlType.SerializationVisibility*
  commentId: Overload:System.Xaml.XamlType.SerializationVisibility
  name: SerializationVisibility
  nameWithType: XamlType.SerializationVisibility
  fullName: System.Xaml.XamlType.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  commentId: T:System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: true
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
