### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.LongTimeFormat
  commentId: T:System.Windows.Controls.LongTimeFormat
  id: LongTimeFormat
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.LongTimeFormat.Equals(System.Object)
  - System.Windows.Controls.LongTimeFormat.GetHashCode
  - System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  - System.Windows.Controls.LongTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  - System.Windows.Controls.LongTimeFormat.op_Equality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  - System.Windows.Controls.LongTimeFormat.op_Inequality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  langs:
  - csharp
  - vb
  name: LongTimeFormat
  nameWithType: LongTimeFormat
  fullName: System.Windows.Controls.LongTimeFormat
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LongTimeFormat
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 13
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nRepresents the long time format used for parsing and formatting.\n"
  example: []
  syntax:
    content: 'public sealed class LongTimeFormat : ITimeFormat'
    content.vb: >-
      Public NotInheritable Class LongTimeFormat
          Implements ITimeFormat
  inheritance:
  - System.Object
  implements:
  - System.Windows.Controls.ITimeFormat
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  id: GetTimeDisplayFormat(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeDisplayFormat(CultureInfo)
  nameWithType: LongTimeFormat.GetTimeDisplayFormat(CultureInfo)
  fullName: System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeDisplayFormat
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 22
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the format to use to display a DateTime as a time value.\n"
  example: []
  syntax:
    content: public string GetTimeDisplayFormat(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture.
    return:
      type: System.String
      description: "\nA format to use during display of a DateTime.\n"
    content.vb: Public Function GetTimeDisplayFormat(culture As CultureInfo) As String
  overload: System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat*
  implements:
  - System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.LongTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.LongTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  id: GetTimeParseFormats(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeParseFormats(CultureInfo)
  nameWithType: LongTimeFormat.GetTimeParseFormats(CultureInfo)
  fullName: System.Windows.Controls.LongTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeParseFormats
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 35
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the formats to use to parse a string to a DateTime.\n"
  example: []
  syntax:
    content: public string[] GetTimeParseFormats(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture used to determine formats.
    return:
      type: System.String[]
      description: "\nAn array of formats to be used during parsing.\n"
    content.vb: Public Function GetTimeParseFormats(culture As CultureInfo) As String()
  overload: System.Windows.Controls.LongTimeFormat.GetTimeParseFormats*
  implements:
  - System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.LongTimeFormat.Equals(System.Object)
  commentId: M:System.Windows.Controls.LongTimeFormat.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LongTimeFormat.Equals(Object)
  fullName: System.Windows.Controls.LongTimeFormat.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 62
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is \nequal to the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to compare \nwith the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>."
    return:
      type: System.Boolean
      description: "\nTrue if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal \nto the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: System.Windows.Controls.LongTimeFormat.Equals*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">obj</code> parameter is null.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.LongTimeFormat.op_Equality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  commentId: M:System.Windows.Controls.LongTimeFormat.op_Equality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  id: op_Equality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: Equality(LongTimeFormat, LongTimeFormat)
  nameWithType: LongTimeFormat.Equality(LongTimeFormat, LongTimeFormat)
  fullName: System.Windows.Controls.LongTimeFormat.Equality(System.Windows.Controls.LongTimeFormat, System.Windows.Controls.LongTimeFormat)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 74
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nImplements the operator ==.\n"
  example: []
  syntax:
    content: public static bool operator ==(LongTimeFormat left, LongTimeFormat right)
    parameters:
    - id: left
      type: System.Windows.Controls.LongTimeFormat
      description: The left instance to compare.
    - id: right
      type: System.Windows.Controls.LongTimeFormat
      description: The right instance to compare.
    return:
      type: System.Boolean
      description: The result of the operator.
    content.vb: Public Shared Operator =(left As LongTimeFormat, right As LongTimeFormat) As Boolean
  overload: System.Windows.Controls.LongTimeFormat.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.LongTimeFormat.op_Inequality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  commentId: M:System.Windows.Controls.LongTimeFormat.op_Inequality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  id: op_Inequality(System.Windows.Controls.LongTimeFormat,System.Windows.Controls.LongTimeFormat)
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: Inequality(LongTimeFormat, LongTimeFormat)
  nameWithType: LongTimeFormat.Inequality(LongTimeFormat, LongTimeFormat)
  fullName: System.Windows.Controls.LongTimeFormat.Inequality(System.Windows.Controls.LongTimeFormat, System.Windows.Controls.LongTimeFormat)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 95
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nImplements the operator !=.\n"
  example: []
  syntax:
    content: public static bool operator !=(LongTimeFormat left, LongTimeFormat right)
    parameters:
    - id: left
      type: System.Windows.Controls.LongTimeFormat
      description: The left instance to compare.
    - id: right
      type: System.Windows.Controls.LongTimeFormat
      description: The right instance to compare.
    return:
      type: System.Boolean
      description: The result of the operator.
    content.vb: Public Shared Operator <>(left As LongTimeFormat, right As LongTimeFormat) As Boolean
  overload: System.Windows.Controls.LongTimeFormat.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.LongTimeFormat.GetHashCode
  commentId: M:System.Windows.Controls.LongTimeFormat.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.LongTimeFormat
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LongTimeFormat.GetHashCode()
  fullName: System.Windows.Controls.LongTimeFormat.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/LongTimeFormat.cs
    startLine: 106
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nServes as a hash function for a particular type.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA hash code for the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: System.Windows.Controls.LongTimeFormat.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.ITimeFormat
  commentId: T:System.Windows.Controls.ITimeFormat
  parent: System.Windows.Controls
  name: ITimeFormat
  nameWithType: ITimeFormat
  fullName: System.Windows.Controls.ITimeFormat
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat
  name: GetTimeDisplayFormat
  nameWithType: LongTimeFormat.GetTimeDisplayFormat
  fullName: System.Windows.Controls.LongTimeFormat.GetTimeDisplayFormat
- uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  isExternal: true
  name: GetTimeDisplayFormat(CultureInfo)
  nameWithType: ITimeFormat.GetTimeDisplayFormat(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
    name: GetTimeDisplayFormat
    nameWithType: ITimeFormat.GetTimeDisplayFormat
    fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
    name: GetTimeDisplayFormat
    nameWithType: ITimeFormat.GetTimeDisplayFormat
    fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Windows.Controls.LongTimeFormat.GetTimeParseFormats*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.GetTimeParseFormats
  name: GetTimeParseFormats
  nameWithType: LongTimeFormat.GetTimeParseFormats
  fullName: System.Windows.Controls.LongTimeFormat.GetTimeParseFormats
- uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  isExternal: true
  name: GetTimeParseFormats(CultureInfo)
  nameWithType: ITimeFormat.GetTimeParseFormats(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
    name: GetTimeParseFormats
    nameWithType: ITimeFormat.GetTimeParseFormats
    fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
    name: GetTimeParseFormats
    nameWithType: ITimeFormat.GetTimeParseFormats
    fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.LongTimeFormat.Equals*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.Equals
  name: Equals
  nameWithType: LongTimeFormat.Equals
  fullName: System.Windows.Controls.LongTimeFormat.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.LongTimeFormat.op_Equality*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.op_Equality
  name: Equality
  nameWithType: LongTimeFormat.Equality
  fullName: System.Windows.Controls.LongTimeFormat.Equality
- uid: System.Windows.Controls.LongTimeFormat
  commentId: T:System.Windows.Controls.LongTimeFormat
  parent: System.Windows.Controls
  name: LongTimeFormat
  nameWithType: LongTimeFormat
  fullName: System.Windows.Controls.LongTimeFormat
- uid: System.Windows.Controls.LongTimeFormat.op_Inequality*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.op_Inequality
  name: Inequality
  nameWithType: LongTimeFormat.Inequality
  fullName: System.Windows.Controls.LongTimeFormat.Inequality
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.LongTimeFormat.GetHashCode*
  commentId: Overload:System.Windows.Controls.LongTimeFormat.GetHashCode
  name: GetHashCode
  nameWithType: LongTimeFormat.GetHashCode
  fullName: System.Windows.Controls.LongTimeFormat.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
