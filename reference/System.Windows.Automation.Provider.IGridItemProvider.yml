### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IGridItemProvider
  commentId: T:System.Windows.Automation.Provider.IGridItemProvider
  id: IGridItemProvider
  parent: System.Windows.Automation.Provider
  children:
  - System.Windows.Automation.Provider.IGridItemProvider.Column
  - System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
  - System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
  - System.Windows.Automation.Provider.IGridItemProvider.Row
  - System.Windows.Automation.Provider.IGridItemProvider.RowSpan
  langs:
  - csharp
  - vb
  name: IGridItemProvider
  nameWithType: IGridItemProvider
  fullName: System.Windows.Automation.Provider.IGridItemProvider
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IGridItemProvider
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nExposes methods and properties to support access by a UI automation client to \nindividual child controls of containers that implement <xref href=\"System.Windows.Automation.Provider.IGridProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IGridItemProvider
    content.vb: Public Interface IGridItemProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Automation.Provider.IGridItemProvider.Column
  commentId: P:System.Windows.Automation.Provider.IGridItemProvider.Column
  id: Column
  parent: System.Windows.Automation.Provider.IGridItemProvider
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: IGridItemProvider.Column
  fullName: System.Windows.Automation.Provider.IGridItemProvider.Column
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Column
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the ordinal number of the column that contains the cell or item.\n"
  example: []
  syntax:
    content: int Column { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nA zero-based ordinal number that identifies the column that contains the cell or item.\n"
    content.vb: ReadOnly Property Column As Integer
  overload: System.Windows.Automation.Provider.IGridItemProvider.Column*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
  commentId: P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
  id: ColumnSpan
  parent: System.Windows.Automation.Provider.IGridItemProvider
  langs:
  - csharp
  - vb
  name: ColumnSpan
  nameWithType: IGridItemProvider.ColumnSpan
  fullName: System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ColumnSpan
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the number of columns that are spanned by a cell or item.\n"
  example: []
  syntax:
    content: int ColumnSpan { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of columns.\n"
    content.vb: ReadOnly Property ColumnSpan As Integer
  overload: System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
  commentId: P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
  id: ContainingGrid
  parent: System.Windows.Automation.Provider.IGridItemProvider
  langs:
  - csharp
  - vb
  name: ContainingGrid
  nameWithType: IGridItemProvider.ContainingGrid
  fullName: System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContainingGrid
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets a UI automation provider that implements <xref href=\"System.Windows.Automation.Provider.IGridProvider\" data-throw-if-not-resolved=\"false\"></xref> and \nthat represents the container of the cell or item.\n"
  example: []
  syntax:
    content: IRawElementProviderSimple ContainingGrid { get; }
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "\nA UI automation provider that implements the <xref href=\"System.Windows.Automation.Peers.PatternInterface.Grid\" data-throw-if-not-resolved=\"false\"></xref> \ncontrol pattern and that represents the cell or item container.\n"
    content.vb: ReadOnly Property ContainingGrid As IRawElementProviderSimple
  overload: System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IGridItemProvider.Row
  commentId: P:System.Windows.Automation.Provider.IGridItemProvider.Row
  id: Row
  parent: System.Windows.Automation.Provider.IGridItemProvider
  langs:
  - csharp
  - vb
  name: Row
  nameWithType: IGridItemProvider.Row
  fullName: System.Windows.Automation.Provider.IGridItemProvider.Row
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Row
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the ordinal number of the row that contains the cell or item.\n"
  example: []
  syntax:
    content: int Row { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nA zero-based ordinal number that identifies the row that contains the cell or item.\n"
    content.vb: ReadOnly Property Row As Integer
  overload: System.Windows.Automation.Provider.IGridItemProvider.Row*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IGridItemProvider.RowSpan
  commentId: P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan
  id: RowSpan
  parent: System.Windows.Automation.Provider.IGridItemProvider
  langs:
  - csharp
  - vb
  name: RowSpan
  nameWithType: IGridItemProvider.RowSpan
  fullName: System.Windows.Automation.Provider.IGridItemProvider.RowSpan
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RowSpan
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IGridItemProvider.cs
    startLine: 63
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the number of rows spanned by a cell or item.\n"
  example: []
  syntax:
    content: int RowSpan { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of rows.\n"
    content.vb: ReadOnly Property RowSpan As Integer
  overload: System.Windows.Automation.Provider.IGridItemProvider.RowSpan*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Windows.Automation.Provider.IGridProvider
  commentId: T:System.Windows.Automation.Provider.IGridProvider
  parent: System.Windows.Automation.Provider
  name: IGridProvider
  nameWithType: IGridProvider
  fullName: System.Windows.Automation.Provider.IGridProvider
- uid: System.Windows.Automation.Provider
  commentId: N:System.Windows.Automation.Provider
  name: System.Windows.Automation.Provider
  nameWithType: System.Windows.Automation.Provider
  fullName: System.Windows.Automation.Provider
- uid: System.Windows.Automation.Provider.IGridItemProvider.Column*
  commentId: Overload:System.Windows.Automation.Provider.IGridItemProvider.Column
  name: Column
  nameWithType: IGridItemProvider.Column
  fullName: System.Windows.Automation.Provider.IGridItemProvider.Column
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan*
  commentId: Overload:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
  name: ColumnSpan
  nameWithType: IGridItemProvider.ColumnSpan
  fullName: System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan
- uid: System.Windows.Automation.Peers.PatternInterface.Grid
  commentId: F:System.Windows.Automation.Peers.PatternInterface.Grid
  isExternal: true
- uid: System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid*
  commentId: Overload:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
  name: ContainingGrid
  nameWithType: IGridItemProvider.ContainingGrid
  fullName: System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  commentId: T:System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.Provider.IGridItemProvider.Row*
  commentId: Overload:System.Windows.Automation.Provider.IGridItemProvider.Row
  name: Row
  nameWithType: IGridItemProvider.Row
  fullName: System.Windows.Automation.Provider.IGridItemProvider.Row
- uid: System.Windows.Automation.Provider.IGridItemProvider.RowSpan*
  commentId: Overload:System.Windows.Automation.Provider.IGridItemProvider.RowSpan
  name: RowSpan
  nameWithType: IGridItemProvider.RowSpan
  fullName: System.Windows.Automation.Provider.IGridItemProvider.RowSpan
