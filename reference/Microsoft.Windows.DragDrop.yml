### YamlMime:ManagedReference
items:
- uid: Microsoft.Windows.DragDrop
  commentId: T:Microsoft.Windows.DragDrop
  id: DragDrop
  parent: Microsoft.Windows
  children:
  - Microsoft.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject,System.Object,Microsoft.Windows.DragDropEffects,Microsoft.Windows.DragDropKeyStates)
  - Microsoft.Windows.DragDrop.DragDropCompleted
  - Microsoft.Windows.DragDrop.DragEnterEvent
  - Microsoft.Windows.DragDrop.DragLeaveEvent
  - Microsoft.Windows.DragDrop.DragOverEvent
  - Microsoft.Windows.DragDrop.DropEvent
  - Microsoft.Windows.DragDrop.GiveFeedbackEvent
  - Microsoft.Windows.DragDrop.IsDragInProgress
  - Microsoft.Windows.DragDrop.QueryContinueDragEvent
  langs:
  - csharp
  - vb
  name: DragDrop
  nameWithType: DragDrop
  fullName: Microsoft.Windows.DragDrop
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragDrop
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 17
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nProvides helper methods and fields for initiating drag-and-drop operations,\nincluding a method to begin a drag-and-drop operation, and facilities for\nadding and removing drag-and-drop related event handlers.\n"
  example: []
  syntax:
    content: public static class DragDrop
    content.vb: Public Module DragDrop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Windows.DragDrop.DragEnterEvent
  commentId: F:Microsoft.Windows.DragDrop.DragEnterEvent
  id: DragEnterEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DragEnterEvent
  nameWithType: DragDrop.DragEnterEvent
  fullName: Microsoft.Windows.DragDrop.DragEnterEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragEnterEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 22
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.DragDrop.DragEnter attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent DragEnterEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly DragEnterEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.DragLeaveEvent
  commentId: F:Microsoft.Windows.DragDrop.DragLeaveEvent
  id: DragLeaveEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DragLeaveEvent
  nameWithType: DragDrop.DragLeaveEvent
  fullName: Microsoft.Windows.DragDrop.DragLeaveEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragLeaveEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 27
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.UIElement.DragLeave attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent DragLeaveEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly DragLeaveEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.DragOverEvent
  commentId: F:Microsoft.Windows.DragDrop.DragOverEvent
  id: DragOverEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DragOverEvent
  nameWithType: DragDrop.DragOverEvent
  fullName: Microsoft.Windows.DragDrop.DragOverEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragOverEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 32
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.UIElement.DragOverÂ attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent DragOverEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly DragOverEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.DropEvent
  commentId: F:Microsoft.Windows.DragDrop.DropEvent
  id: DropEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DropEvent
  nameWithType: DragDrop.DropEvent
  fullName: Microsoft.Windows.DragDrop.DropEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DropEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 37
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.UIElement.Drop attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent DropEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly DropEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.GiveFeedbackEvent
  commentId: F:Microsoft.Windows.DragDrop.GiveFeedbackEvent
  id: GiveFeedbackEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: GiveFeedbackEvent
  nameWithType: DragDrop.GiveFeedbackEvent
  fullName: Microsoft.Windows.DragDrop.GiveFeedbackEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GiveFeedbackEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 42
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.UIElement.GiveFeedback attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent GiveFeedbackEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly GiveFeedbackEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.QueryContinueDragEvent
  commentId: F:Microsoft.Windows.DragDrop.QueryContinueDragEvent
  id: QueryContinueDragEvent
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: QueryContinueDragEvent
  nameWithType: DragDrop.QueryContinueDragEvent
  fullName: Microsoft.Windows.DragDrop.QueryContinueDragEvent
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: QueryContinueDragEvent
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 47
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nIdentifies the System.Windows.UIElement.QueryContinueDrag attached event.\n"
  example: []
  syntax:
    content: public static readonly ExtendedRoutedEvent QueryContinueDragEvent
    return:
      type: Microsoft.Windows.ExtendedRoutedEvent
    content.vb: Public Shared ReadOnly QueryContinueDragEvent As ExtendedRoutedEvent
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.IsDragInProgress
  commentId: P:Microsoft.Windows.DragDrop.IsDragInProgress
  id: IsDragInProgress
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: IsDragInProgress
  nameWithType: DragDrop.IsDragInProgress
  fullName: Microsoft.Windows.DragDrop.IsDragInProgress
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsDragInProgress
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 52
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nGets a value indicating whether a drag is in progress.\n"
  example: []
  syntax:
    content: public static bool IsDragInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsDragInProgress As Boolean
  overload: Microsoft.Windows.DragDrop.IsDragInProgress*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Windows.DragDrop.DragDropCompleted
  commentId: E:Microsoft.Windows.DragDrop.DragDropCompleted
  id: DragDropCompleted
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DragDropCompleted
  nameWithType: DragDrop.DragDropCompleted
  fullName: Microsoft.Windows.DragDrop.DragDropCompleted
  type: Event
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragDropCompleted
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 62
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nAn event that is raised when a drag operation is completed.\n"
  example: []
  syntax:
    content: public static event EventHandler<DragDropCompletedEventArgs> DragDropCompleted
    return:
      type: System.EventHandler{System.Windows.DragDropCompletedEventArgs}
    content.vb: Public Shared Event DragDropCompleted As EventHandler(Of DragDropCompletedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject,System.Object,Microsoft.Windows.DragDropEffects,Microsoft.Windows.DragDropKeyStates)
  commentId: M:Microsoft.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject,System.Object,Microsoft.Windows.DragDropEffects,Microsoft.Windows.DragDropKeyStates)
  id: DoDragDrop(System.Windows.DependencyObject,System.Object,Microsoft.Windows.DragDropEffects,Microsoft.Windows.DragDropKeyStates)
  parent: Microsoft.Windows.DragDrop
  langs:
  - csharp
  - vb
  name: DoDragDrop(DependencyObject, Object, DragDropEffects, DragDropKeyStates)
  nameWithType: DragDrop.DoDragDrop(DependencyObject, Object, DragDropEffects, DragDropKeyStates)
  fullName: Microsoft.Windows.DragDrop.DoDragDrop(System.Windows.DependencyObject, System.Object, Microsoft.Windows.DragDropEffects, Microsoft.Windows.DragDropKeyStates)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DoDragDrop
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/DragDrop/DragDrop.cs
    startLine: 570
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: Microsoft.Windows
  summary: "\nInitiates a drag-and-drop operation.\n"
  example: []
  syntax:
    content: public static void DoDragDrop(DependencyObject dragSource, object data, DragDropEffects allowedEffects, DragDropKeyStates initialKeyState)
    parameters:
    - id: dragSource
      type: System.Windows.DependencyObject
      description: >-
        A reference to the dependency object that is the source of the data being

        dragged.
    - id: data
      type: System.Object
      description: A data object that contains the data being dragged.
    - id: allowedEffects
      type: Microsoft.Windows.DragDropEffects
      description: >-
        One of the System.Windows.DragDropEffects values that specifies permitted

        effects of the drag-and-drop operation.
    - id: initialKeyState
      type: Microsoft.Windows.DragDropKeyStates
      description: The initial key state when the drag operation begins.
    content.vb: Public Shared Sub DoDragDrop(dragSource As DependencyObject, data As Object, allowedEffects As DragDropEffects, initialKeyState As DragDropKeyStates)
  overload: Microsoft.Windows.DragDrop.DoDragDrop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Windows
  commentId: N:Microsoft.Windows
  name: Microsoft.Windows
  nameWithType: Microsoft.Windows
  fullName: Microsoft.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Windows.ExtendedRoutedEvent
  commentId: T:Microsoft.Windows.ExtendedRoutedEvent
  parent: Microsoft.Windows
  name: ExtendedRoutedEvent
  nameWithType: ExtendedRoutedEvent
  fullName: Microsoft.Windows.ExtendedRoutedEvent
- uid: Microsoft.Windows.DragDrop.IsDragInProgress*
  commentId: Overload:Microsoft.Windows.DragDrop.IsDragInProgress
  name: IsDragInProgress
  nameWithType: DragDrop.IsDragInProgress
  fullName: Microsoft.Windows.DragDrop.IsDragInProgress
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler{System.Windows.DragDropCompletedEventArgs}
  commentId: T:System.EventHandler{System.Windows.DragDropCompletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DragDropCompletedEventArgs>
  nameWithType: EventHandler<DragDropCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.DragDropCompletedEventArgs>
  nameWithType.vb: EventHandler(Of DragDropCompletedEventArgs)
  fullName.vb: System.EventHandler(Of System.Windows.DragDropCompletedEventArgs)
  name.vb: EventHandler(Of DragDropCompletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.DragDropCompletedEventArgs
    name: DragDropCompletedEventArgs
    nameWithType: DragDropCompletedEventArgs
    fullName: System.Windows.DragDropCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.DragDropCompletedEventArgs
    name: DragDropCompletedEventArgs
    nameWithType: DragDropCompletedEventArgs
    fullName: System.Windows.DragDropCompletedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Windows.DragDrop.DoDragDrop*
  commentId: Overload:Microsoft.Windows.DragDrop.DoDragDrop
  name: DoDragDrop
  nameWithType: DragDrop.DoDragDrop
  fullName: Microsoft.Windows.DragDrop.DoDragDrop
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: Microsoft.Windows.DragDropEffects
  commentId: T:Microsoft.Windows.DragDropEffects
  parent: Microsoft.Windows
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: Microsoft.Windows.DragDropEffects
- uid: Microsoft.Windows.DragDropKeyStates
  commentId: T:Microsoft.Windows.DragDropKeyStates
  parent: Microsoft.Windows
  name: DragDropKeyStates
  nameWithType: DragDropKeyStates
  fullName: Microsoft.Windows.DragDropKeyStates
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
