### YamlMime:ManagedReference
items:
- uid: System.Xaml.Markup.ValueSerializer
  commentId: T:System.Xaml.Markup.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.Markup
  children:
  - System.Xaml.Markup.ValueSerializer.CanConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.CanConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.ConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.ConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.GetConvertFromException(System.Object)
  - System.Xaml.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)
  - System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo)
  - System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type)
  - System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Xaml.Markup.IValueSerializerContext)
  - System.Xaml.Markup.ValueSerializer.TypeReferences(System.Object,System.Xaml.Markup.IValueSerializerContext)
  langs:
  - csharp
  - vb
  name: ValueSerializer
  nameWithType: ValueSerializer
  fullName: System.Xaml.Markup.ValueSerializer
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValueSerializer
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 34
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public abstract class ValueSerializer
    content.vb: Public MustInherit Class ValueSerializer
  inheritance:
  - System.Object
  derivedClasses:
  - System.Xaml.Markup.DateTimeValueSerializer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo)
  id: GetSerializerFor(System.Reflection.PropertyInfo)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetSerializerFor(PropertyInfo)
  nameWithType: ValueSerializer.GetSerializerFor(PropertyInfo)
  fullName: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSerializerFor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 36
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public static ValueSerializer GetSerializerFor(PropertyInfo descriptor)
    parameters:
    - id: descriptor
      type: System.Reflection.PropertyInfo
    return:
      type: System.Xaml.Markup.ValueSerializer
    content.vb: Public Shared Function GetSerializerFor(descriptor As PropertyInfo) As ValueSerializer
  overload: System.Xaml.Markup.ValueSerializer.GetSerializerFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type)
  id: GetSerializerFor(System.Type)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetSerializerFor(Type)
  nameWithType: ValueSerializer.GetSerializerFor(Type)
  fullName: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSerializerFor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 41
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public static ValueSerializer GetSerializerFor(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Xaml.Markup.ValueSerializer
    content.vb: Public Shared Function GetSerializerFor(type As Type) As ValueSerializer
  overload: System.Xaml.Markup.ValueSerializer.GetSerializerFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo,System.Xaml.Markup.IValueSerializerContext)
  id: GetSerializerFor(System.Reflection.PropertyInfo,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetSerializerFor(PropertyInfo, IValueSerializerContext)
  nameWithType: ValueSerializer.GetSerializerFor(PropertyInfo, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Reflection.PropertyInfo, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSerializerFor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 47
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public static ValueSerializer GetSerializerFor(PropertyInfo descriptor, IValueSerializerContext context)
    parameters:
    - id: descriptor
      type: System.Reflection.PropertyInfo
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Xaml.Markup.ValueSerializer
    content.vb: Public Shared Function GetSerializerFor(descriptor As PropertyInfo, context As IValueSerializerContext) As ValueSerializer
  overload: System.Xaml.Markup.ValueSerializer.GetSerializerFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Xaml.Markup.IValueSerializerContext)
  id: GetSerializerFor(System.Type,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetSerializerFor(Type, IValueSerializerContext)
  nameWithType: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.GetSerializerFor(System.Type, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSerializerFor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 60
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public static ValueSerializer GetSerializerFor(Type type, IValueSerializerContext context)
    parameters:
    - id: type
      type: System.Type
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Xaml.Markup.ValueSerializer
    content.vb: Public Shared Function GetSerializerFor(type As Type, context As IValueSerializerContext) As ValueSerializer
  overload: System.Xaml.Markup.ValueSerializer.GetSerializerFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Markup.ValueSerializer.CanConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.CanConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  id: CanConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: CanConvertFromString(String, IValueSerializerContext)
  nameWithType: ValueSerializer.CanConvertFromString(String, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.CanConvertFromString(System.String, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertFromString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 113
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public virtual bool CanConvertFromString(string value, IValueSerializerContext context)
    parameters:
    - id: value
      type: System.String
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanConvertFromString(value As String, context As IValueSerializerContext) As Boolean
  overload: System.Xaml.Markup.ValueSerializer.CanConvertFromString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Markup.ValueSerializer.CanConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.CanConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  id: CanConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: CanConvertToString(Object, IValueSerializerContext)
  nameWithType: ValueSerializer.CanConvertToString(Object, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.CanConvertToString(System.Object, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanConvertToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 118
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public virtual bool CanConvertToString(object value, IValueSerializerContext context)
    parameters:
    - id: value
      type: System.Object
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanConvertToString(value As Object, context As IValueSerializerContext) As Boolean
  overload: System.Xaml.Markup.ValueSerializer.CanConvertToString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Markup.ValueSerializer.ConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.ConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  id: ConvertFromString(System.String,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: ConvertFromString(String, IValueSerializerContext)
  nameWithType: ValueSerializer.ConvertFromString(String, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.ConvertFromString(System.String, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertFromString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 123
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public virtual object ConvertFromString(string value, IValueSerializerContext context)
    parameters:
    - id: value
      type: System.String
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Object
    content.vb: Public Overridable Function ConvertFromString(value As String, context As IValueSerializerContext) As Object
  overload: System.Xaml.Markup.ValueSerializer.ConvertFromString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Markup.ValueSerializer.ConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.ConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  id: ConvertToString(System.Object,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: ConvertToString(Object, IValueSerializerContext)
  nameWithType: ValueSerializer.ConvertToString(Object, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.ConvertToString(System.Object, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 128
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public virtual string ConvertToString(object value, IValueSerializerContext context)
    parameters:
    - id: value
      type: System.Object
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.String
    content.vb: Public Overridable Function ConvertToString(value As Object, context As IValueSerializerContext) As String
  overload: System.Xaml.Markup.ValueSerializer.ConvertToString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Markup.ValueSerializer.GetConvertFromException(System.Object)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetConvertFromException(Object)
  nameWithType: ValueSerializer.GetConvertFromException(Object)
  fullName: System.Xaml.Markup.ValueSerializer.GetConvertFromException(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetConvertFromException
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 133
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: protected Exception GetConvertFromException(object value)
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Exception
    content.vb: Protected Function GetConvertFromException(value As Object) As Exception
  overload: System.Xaml.Markup.ValueSerializer.GetConvertFromException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xaml.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)
  commentId: M:System.Xaml.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: GetConvertToException(Object, Type)
  nameWithType: ValueSerializer.GetConvertToException(Object, Type)
  fullName: System.Xaml.Markup.ValueSerializer.GetConvertToException(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetConvertToException
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 138
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: protected Exception GetConvertToException(object value, Type destinationType)
    parameters:
    - id: value
      type: System.Object
    - id: destinationType
      type: System.Type
    return:
      type: System.Exception
    content.vb: Protected Function GetConvertToException(value As Object, destinationType As Type) As Exception
  overload: System.Xaml.Markup.ValueSerializer.GetConvertToException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xaml.Markup.ValueSerializer.TypeReferences(System.Object,System.Xaml.Markup.IValueSerializerContext)
  commentId: M:System.Xaml.Markup.ValueSerializer.TypeReferences(System.Object,System.Xaml.Markup.IValueSerializerContext)
  id: TypeReferences(System.Object,System.Xaml.Markup.IValueSerializerContext)
  parent: System.Xaml.Markup.ValueSerializer
  langs:
  - csharp
  - vb
  name: TypeReferences(Object, IValueSerializerContext)
  nameWithType: ValueSerializer.TypeReferences(Object, IValueSerializerContext)
  fullName: System.Xaml.Markup.ValueSerializer.TypeReferences(System.Object, System.Xaml.Markup.IValueSerializerContext)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TypeReferences
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ValueSerializer.cs
    startLine: 143
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public virtual IEnumerable<Type> TypeReferences(object value, IValueSerializerContext context)
    parameters:
    - id: value
      type: System.Object
    - id: context
      type: System.Xaml.Markup.IValueSerializerContext
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Overridable Function TypeReferences(value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)
  overload: System.Xaml.Markup.ValueSerializer.TypeReferences*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Xaml.Markup
  commentId: N:System.Xaml.Markup
  name: System.Xaml.Markup
  nameWithType: System.Xaml.Markup
  fullName: System.Xaml.Markup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.Markup.ValueSerializer.GetSerializerFor*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.GetSerializerFor
  name: GetSerializerFor
  nameWithType: ValueSerializer.GetSerializerFor
  fullName: System.Xaml.Markup.ValueSerializer.GetSerializerFor
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.Markup.ValueSerializer
  commentId: T:System.Xaml.Markup.ValueSerializer
  parent: System.Xaml.Markup
  name: ValueSerializer
  nameWithType: ValueSerializer
  fullName: System.Xaml.Markup.ValueSerializer
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.Markup.IValueSerializerContext
  commentId: T:System.Xaml.Markup.IValueSerializerContext
  parent: System.Xaml.Markup
  name: IValueSerializerContext
  nameWithType: IValueSerializerContext
  fullName: System.Xaml.Markup.IValueSerializerContext
- uid: System.Xaml.Markup.ValueSerializer.CanConvertFromString*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.CanConvertFromString
  name: CanConvertFromString
  nameWithType: ValueSerializer.CanConvertFromString
  fullName: System.Xaml.Markup.ValueSerializer.CanConvertFromString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Markup.ValueSerializer.CanConvertToString*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.CanConvertToString
  name: CanConvertToString
  nameWithType: ValueSerializer.CanConvertToString
  fullName: System.Xaml.Markup.ValueSerializer.CanConvertToString
- uid: System.Xaml.Markup.ValueSerializer.ConvertFromString*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.ConvertFromString
  name: ConvertFromString
  nameWithType: ValueSerializer.ConvertFromString
  fullName: System.Xaml.Markup.ValueSerializer.ConvertFromString
- uid: System.Xaml.Markup.ValueSerializer.ConvertToString*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.ConvertToString
  name: ConvertToString
  nameWithType: ValueSerializer.ConvertToString
  fullName: System.Xaml.Markup.ValueSerializer.ConvertToString
- uid: System.Xaml.Markup.ValueSerializer.GetConvertFromException*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.GetConvertFromException
  name: GetConvertFromException
  nameWithType: ValueSerializer.GetConvertFromException
  fullName: System.Xaml.Markup.ValueSerializer.GetConvertFromException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xaml.Markup.ValueSerializer.GetConvertToException*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.GetConvertToException
  name: GetConvertToException
  nameWithType: ValueSerializer.GetConvertToException
  fullName: System.Xaml.Markup.ValueSerializer.GetConvertToException
- uid: System.Xaml.Markup.ValueSerializer.TypeReferences*
  commentId: Overload:System.Xaml.Markup.ValueSerializer.TypeReferences
  name: TypeReferences
  nameWithType: ValueSerializer.TypeReferences
  fullName: System.Xaml.Markup.ValueSerializer.TypeReferences
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
