### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  id: MarkupExtension
  parent: System.Windows.Markup
  children:
  - System.Windows.Markup.MarkupExtension.#ctor
  - System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MarkupExtension
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nProvides a base class for XAML markup extension implementations that can be supported\nby Silverlight XAML processors.\n"
  example: []
  syntax:
    content: 'public abstract class MarkupExtension : IMarkupExtension<object>'
    content.vb: >-
      Public MustInherit Class MarkupExtension
          Implements IMarkupExtension(Of Object)
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Data.BindingBase
  - System.Windows.Data.RelativeSource
  - System.Windows.DynamicResourceExtension
  - System.Windows.Markup.NullExtension
  - System.Windows.Markup.StaticExtension
  - System.Windows.Markup.StaticResourceExtension
  - System.Windows.Markup.TypeExtension
  - System.Windows.TemplateBindingExtension
  implements:
  - System.Xaml.IMarkupExtension{System.Object}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Markup.MarkupExtension.#ctor
  commentId: M:System.Windows.Markup.MarkupExtension.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.MarkupExtension
  langs:
  - csharp
  - vb
  name: MarkupExtension()
  nameWithType: MarkupExtension.MarkupExtension()
  fullName: System.Windows.Markup.MarkupExtension.MarkupExtension()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Markup.MarkupExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected MarkupExtension()
    content.vb: Protected Sub New
  overload: System.Windows.Markup.MarkupExtension.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  langs:
  - csharp
  - vb
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProvideValue
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Windows.Markup/MarkupExtension.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nWhen implemented in a derived class, returns an object that is provided as the\nvalue of the target property for this markup extension.\n"
  example: []
  syntax:
    content: public abstract object ProvideValue(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "\nA service provider helper that can provide services for the markup extension.\n"
    return:
      type: System.Object
      description: "\nThe object value to set on the property where the extension is applied.\n"
    content.vb: Public MustOverride Function ProvideValue(serviceProvider As IServiceProvider) As Object
  overload: System.Windows.Markup.MarkupExtension.ProvideValue*
  implements:
  - System.Xaml.IMarkupExtension{System.Object}.ProvideValue(System.IServiceProvider)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.IMarkupExtension{System.Object}
  commentId: T:System.Xaml.IMarkupExtension{System.Object}
  parent: System.Xaml
  definition: System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<Object>
  nameWithType: IMarkupExtension<Object>
  fullName: System.Xaml.IMarkupExtension<System.Object>
  nameWithType.vb: IMarkupExtension(Of Object)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object)
  name.vb: IMarkupExtension(Of Object)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xaml.IMarkupExtension`1
  commentId: T:System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<T>
  nameWithType: IMarkupExtension<T>
  fullName: System.Xaml.IMarkupExtension<T>
  nameWithType.vb: IMarkupExtension(Of T)
  fullName.vb: System.Xaml.IMarkupExtension(Of T)
  name.vb: IMarkupExtension(Of T)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Markup.MarkupExtension.#ctor*
  commentId: Overload:System.Windows.Markup.MarkupExtension.#ctor
  name: MarkupExtension
  nameWithType: MarkupExtension.MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension.MarkupExtension
- uid: System.Windows.Markup.MarkupExtension.ProvideValue*
  commentId: Overload:System.Windows.Markup.MarkupExtension.ProvideValue
  name: ProvideValue
  nameWithType: MarkupExtension.ProvideValue
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue
- uid: System.Xaml.IMarkupExtension{System.Object}.ProvideValue(System.IServiceProvider)
  commentId: M:System.Xaml.IMarkupExtension{System.Object}.ProvideValue(System.IServiceProvider)
  parent: System.Xaml.IMarkupExtension{System.Object}
  definition: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
  name: ProvideValue(IServiceProvider)
  nameWithType: IMarkupExtension<Object>.ProvideValue(IServiceProvider)
  fullName: System.Xaml.IMarkupExtension<System.Object>.ProvideValue(System.IServiceProvider)
  nameWithType.vb: IMarkupExtension(Of Object).ProvideValue(IServiceProvider)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object).ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: IMarkupExtension<Object>.ProvideValue
    fullName: System.Xaml.IMarkupExtension<System.Object>.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: IMarkupExtension(Of Object).ProvideValue
    fullName: System.Xaml.IMarkupExtension(Of System.Object).ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
  commentId: M:System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: IMarkupExtension<T>.ProvideValue(IServiceProvider)
  fullName: System.Xaml.IMarkupExtension<T>.ProvideValue(System.IServiceProvider)
  nameWithType.vb: IMarkupExtension(Of T).ProvideValue(IServiceProvider)
  fullName.vb: System.Xaml.IMarkupExtension(Of T).ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: IMarkupExtension<T>.ProvideValue
    fullName: System.Xaml.IMarkupExtension<T>.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: IMarkupExtension(Of T).ProvideValue
    fullName: System.Xaml.IMarkupExtension(Of T).ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
