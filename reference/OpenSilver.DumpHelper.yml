### YamlMime:ManagedReference
items:
- uid: OpenSilver.DumpHelper
  commentId: T:OpenSilver.DumpHelper
  id: DumpHelper
  parent: OpenSilver
  children:
  - OpenSilver.DumpHelper.DumpProperties(System.String,System.String[])
  - OpenSilver.DumpHelper.GetPropertiesAndValues(System.Object,System.String[])
  - OpenSilver.DumpHelper.PrintProperties(System.Object,System.String[])
  langs:
  - csharp
  - vb
  name: DumpHelper
  nameWithType: DumpHelper
  fullName: OpenSilver.DumpHelper
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/DumpHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DumpHelper
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/DumpHelper.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nHelps to get the current state (values of properties) of the provided object.\n"
  example: []
  syntax:
    content: public static class DumpHelper
    content.vb: Public Module DumpHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: OpenSilver.DumpHelper.GetPropertiesAndValues(System.Object,System.String[])
  commentId: M:OpenSilver.DumpHelper.GetPropertiesAndValues(System.Object,System.String[])
  id: GetPropertiesAndValues(System.Object,System.String[])
  parent: OpenSilver.DumpHelper
  langs:
  - csharp
  - vb
  name: GetPropertiesAndValues(Object, String[])
  nameWithType: DumpHelper.GetPropertiesAndValues(Object, String[])
  fullName: OpenSilver.DumpHelper.GetPropertiesAndValues(System.Object, System.String[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/DumpHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPropertiesAndValues
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/DumpHelper.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nRetrieves a dictionary of properties and corresponding values of the provided object.\n"
  example: []
  syntax:
    content: public static IDictionary<string, object> GetPropertiesAndValues(object obj, params string[] names)
    parameters:
    - id: obj
      type: System.Object
      description: Object to get properties.
    - id: names
      type: System.String[]
      description: "\nNames of properties, provided as string of names separated by comma (,).\nNull or empty value means all public properties are return.\n"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Shared Function GetPropertiesAndValues(obj As Object, ParamArray names As String()) As IDictionary(Of String, Object)
  overload: OpenSilver.DumpHelper.GetPropertiesAndValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Provided object is null
  nameWithType.vb: DumpHelper.GetPropertiesAndValues(Object, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.DumpHelper.GetPropertiesAndValues(System.Object, System.String())
  name.vb: GetPropertiesAndValues(Object, String())
- uid: OpenSilver.DumpHelper.DumpProperties(System.String,System.String[])
  commentId: M:OpenSilver.DumpHelper.DumpProperties(System.String,System.String[])
  id: DumpProperties(System.String,System.String[])
  parent: OpenSilver.DumpHelper
  langs:
  - csharp
  - vb
  name: DumpProperties(String, String[])
  nameWithType: DumpHelper.DumpProperties(String, String[])
  fullName: OpenSilver.DumpHelper.DumpProperties(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/DumpHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DumpProperties
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/DumpHelper.cs
    startLine: 91
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nRetrieves a dictionary of properties and corresponding values of the provided element by it&apos;s id.\n"
  example: []
  syntax:
    content: >-
      [JSInvokable]

      public static IDictionary<string, string> DumpProperties(string elementId, params string[] names)
    parameters:
    - id: elementId
      type: System.String
      description: Html id of an element.
    - id: names
      type: System.String[]
      description: "\nNames of properties, provided as string of names separated by comma (,).\nNull or empty value means all public properties are return.\n"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: >-
      <JSInvokable>

      Public Shared Function DumpProperties(elementId As String, ParamArray names As String()) As IDictionary(Of String, String)
  overload: OpenSilver.DumpHelper.DumpProperties*
  attributes:
  - type: Microsoft.JSInterop.JSInvokableAttribute
    ctor: Microsoft.JSInterop.JSInvokableAttribute.#ctor
    arguments: []
  nameWithType.vb: DumpHelper.DumpProperties(String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.DumpHelper.DumpProperties(System.String, System.String())
  name.vb: DumpProperties(String, String())
- uid: OpenSilver.DumpHelper.PrintProperties(System.Object,System.String[])
  commentId: M:OpenSilver.DumpHelper.PrintProperties(System.Object,System.String[])
  id: PrintProperties(System.Object,System.String[])
  parent: OpenSilver.DumpHelper
  langs:
  - csharp
  - vb
  name: PrintProperties(Object, String[])
  nameWithType: DumpHelper.PrintProperties(Object, String[])
  fullName: OpenSilver.DumpHelper.PrintProperties(System.Object, System.String[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/DumpHelper.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PrintProperties
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/DumpHelper.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: OpenSilver
  summary: "\nPrints properties and corresponding values to console.\n"
  example: []
  syntax:
    content: public static void PrintProperties(object element, params string[] names)
    parameters:
    - id: element
      type: System.Object
      description: ''
    - id: names
      type: System.String[]
      description: "\nNames of properties, provided as string of names separated by comma (,).\nNull or empty value means all public properties are return.\n"
    content.vb: Public Shared Sub PrintProperties(element As Object, ParamArray names As String())
  overload: OpenSilver.DumpHelper.PrintProperties*
  nameWithType.vb: DumpHelper.PrintProperties(Object, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: OpenSilver.DumpHelper.PrintProperties(System.Object, System.String())
  name.vb: PrintProperties(Object, String())
references:
- uid: OpenSilver
  commentId: N:OpenSilver
  name: OpenSilver
  nameWithType: OpenSilver
  fullName: OpenSilver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: OpenSilver.DumpHelper.GetPropertiesAndValues*
  commentId: Overload:OpenSilver.DumpHelper.GetPropertiesAndValues
  name: GetPropertiesAndValues
  nameWithType: DumpHelper.GetPropertiesAndValues
  fullName: OpenSilver.DumpHelper.GetPropertiesAndValues
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OpenSilver.DumpHelper.DumpProperties*
  commentId: Overload:OpenSilver.DumpHelper.DumpProperties
  name: DumpProperties
  nameWithType: DumpHelper.DumpProperties
  fullName: OpenSilver.DumpHelper.DumpProperties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OpenSilver.DumpHelper.PrintProperties*
  commentId: Overload:OpenSilver.DumpHelper.PrintProperties
  name: PrintProperties
  nameWithType: DumpHelper.PrintProperties
  fullName: OpenSilver.DumpHelper.PrintProperties
