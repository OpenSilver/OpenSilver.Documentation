### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.OpenFileDialog
  commentId: T:System.Windows.Controls.OpenFileDialog
  id: OpenFileDialog
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.OpenFileDialog.#ctor
  - System.Windows.Controls.OpenFileDialog.File
  - System.Windows.Controls.OpenFileDialog.Files
  - System.Windows.Controls.OpenFileDialog.Filter
  - System.Windows.Controls.OpenFileDialog.FilterIndex
  - System.Windows.Controls.OpenFileDialog.InitialDirectory
  - System.Windows.Controls.OpenFileDialog.Multiselect
  - System.Windows.Controls.OpenFileDialog.ShowDialog
  - System.Windows.Controls.OpenFileDialog.ShowDialog(System.Windows.Window)
  langs:
  - csharp
  - vb
  name: OpenFileDialog
  nameWithType: OpenFileDialog
  fullName: System.Windows.Controls.OpenFileDialog
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OpenFileDialog
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides a dialog box that enables the user to select one or more files.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use OpenSilver.Controls.OpenFileDialog instead.")]

      [NotImplemented]

      public sealed class OpenFileDialog
    content.vb: >-
      <Obsolete("Use OpenSilver.Controls.OpenFileDialog instead.")>

      <NotImplemented>

      Public NotInheritable Class OpenFileDialog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use OpenSilver.Controls.OpenFileDialog instead.
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Controls.OpenFileDialog.#ctor
  commentId: M:System.Windows.Controls.OpenFileDialog.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: OpenFileDialog()
  nameWithType: OpenFileDialog.OpenFileDialog()
  fullName: System.Windows.Controls.OpenFileDialog.OpenFileDialog()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 33
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OpenFileDialog()
    content.vb: Public Sub New
  overload: System.Windows.Controls.OpenFileDialog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.File
  commentId: P:System.Windows.Controls.OpenFileDialog.File
  id: File
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: File
  nameWithType: OpenFileDialog.File
  fullName: System.Windows.Controls.OpenFileDialog.File
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: File
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 43
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets a <xref href=\"System.IO.FileInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the selected file. If multiple files are\nselected, returns the first selected file.\n"
  example: []
  syntax:
    content: public FileInfo File { get; }
    parameters: []
    return:
      type: System.IO.FileInfo
      description: "\nThe selected file. If multiple files are selected, returns the first selected\nfile.\n"
    content.vb: Public ReadOnly Property File As FileInfo
  overload: System.Windows.Controls.OpenFileDialog.File*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.OpenFileDialog.Files
  commentId: P:System.Windows.Controls.OpenFileDialog.Files
  id: Files
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: OpenFileDialog.Files
  fullName: System.Windows.Controls.OpenFileDialog.Files
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Files
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets a collection of <xref href=\"System.IO.FileInfo\" data-throw-if-not-resolved=\"false\"></xref> objects for the selected files.\n"
  example: []
  syntax:
    content: public IEnumerable<FileInfo> Files { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.FileInfo}
    content.vb: Public ReadOnly Property Files As IEnumerable(Of FileInfo)
  overload: System.Windows.Controls.OpenFileDialog.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.OpenFileDialog.Filter
  commentId: P:System.Windows.Controls.OpenFileDialog.Filter
  id: Filter
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: OpenFileDialog.Filter
  fullName: System.Windows.Controls.OpenFileDialog.Filter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Filter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets a filter string that specifies the file types and descriptions to\ndisplay in the <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Filter { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA filter string that specifies the file types and descriptions to display in\nthe <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>. The default is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Filter As String
  overload: System.Windows.Controls.OpenFileDialog.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.FilterIndex
  commentId: P:System.Windows.Controls.OpenFileDialog.FilterIndex
  id: FilterIndex
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: FilterIndex
  nameWithType: OpenFileDialog.FilterIndex
  fullName: System.Windows.Controls.OpenFileDialog.FilterIndex
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FilterIndex
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 71
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets the index of the selected item in the <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>\nfilter drop-down list.\n"
  example: []
  syntax:
    content: public int FilterIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe index of the selected item in the <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>\nfilter drop-down list. The default is 1.\n"
    content.vb: Public Property FilterIndex As Integer
  overload: System.Windows.Controls.OpenFileDialog.FilterIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe filter index is less than 1.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.InitialDirectory
  commentId: P:System.Windows.Controls.OpenFileDialog.InitialDirectory
  id: InitialDirectory
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: InitialDirectory
  nameWithType: OpenFileDialog.InitialDirectory
  fullName: System.Windows.Controls.OpenFileDialog.InitialDirectory
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InitialDirectory
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 82
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets the directory displayed when the dialog starts.\n"
  example: []
  syntax:
    content: public string InitialDirectory { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe directory displayed when the dialog starts. The default is an empty string.\n"
    content.vb: Public Property InitialDirectory As String
  overload: System.Windows.Controls.OpenFileDialog.InitialDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe directory specified is not a valid file path.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.Multiselect
  commentId: P:System.Windows.Controls.OpenFileDialog.Multiselect
  id: Multiselect
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: System.Windows.Controls.OpenFileDialog.Multiselect
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Multiselect
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 91
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets a value that indicates whether the <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>\nallows users to select multiple files.\n"
  example: []
  syntax:
    content: public bool Multiselect { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if multiple selections are allowed; otherwise, false. The default is false.\n"
    content.vb: Public Property Multiselect As Boolean
  overload: System.Windows.Controls.OpenFileDialog.Multiselect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.ShowDialog
  commentId: M:System.Windows.Controls.OpenFileDialog.ShowDialog
  id: ShowDialog
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: ShowDialog()
  nameWithType: OpenFileDialog.ShowDialog()
  fullName: System.Windows.Controls.OpenFileDialog.ShowDialog()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShowDialog
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 100
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nDisplays an System.Windows.Controls.OpenFileDialog that is modal to the Web browser\nor main window.\n"
  example: []
  syntax:
    content: public bool? ShowDialog()
    return:
      type: System.Nullable{System.Boolean}
      description: "\ntrue if the user clicked OK; false if the user clicked Cancel or closed the dialog box.\n"
    content.vb: Public Function ShowDialog As Boolean?
  overload: System.Windows.Controls.OpenFileDialog.ShowDialog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.OpenFileDialog.ShowDialog(System.Windows.Window)
  commentId: M:System.Windows.Controls.OpenFileDialog.ShowDialog(System.Windows.Window)
  id: ShowDialog(System.Windows.Window)
  parent: System.Windows.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: ShowDialog(Window)
  nameWithType: OpenFileDialog.ShowDialog(Window)
  fullName: System.Windows.Controls.OpenFileDialog.ShowDialog(System.Windows.Window)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShowDialog
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/OpenFileDialog.cs
    startLine: 111
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nDisplays an <xref href=\"System.Windows.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref> that is modal to the specified window.\n"
  example: []
  syntax:
    content: public bool? ShowDialog(Window owner)
    parameters:
    - id: owner
      type: System.Windows.Window
      description: "\nThe window that serves as the top-level window for the dialog.\n"
    return:
      type: System.Nullable{System.Boolean}
      description: "\ntrue if the user clicked OK; false if the user clicked Cancel or closed the dialog box.\n"
    content.vb: Public Function ShowDialog(owner As Window) As Boolean?
  overload: System.Windows.Controls.OpenFileDialog.ShowDialog*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.OpenFileDialog
  commentId: T:System.Windows.Controls.OpenFileDialog
  name: OpenFileDialog
  nameWithType: OpenFileDialog
  fullName: System.Windows.Controls.OpenFileDialog
- uid: System.Windows.Controls.OpenFileDialog.#ctor*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.#ctor
  name: OpenFileDialog
  nameWithType: OpenFileDialog.OpenFileDialog
  fullName: System.Windows.Controls.OpenFileDialog.OpenFileDialog
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.Windows.Controls.OpenFileDialog.File*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.File
  name: File
  nameWithType: OpenFileDialog.File
  fullName: System.Windows.Controls.OpenFileDialog.File
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Windows.Controls.OpenFileDialog.Files*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.Files
  name: Files
  nameWithType: OpenFileDialog.Files
  fullName: System.Windows.Controls.OpenFileDialog.Files
- uid: System.Collections.Generic.IEnumerable{System.IO.FileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.IO.FileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileInfo>
  nameWithType: IEnumerable<FileInfo>
  fullName: System.Collections.Generic.IEnumerable<System.IO.FileInfo>
  nameWithType.vb: IEnumerable(Of FileInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IO.FileInfo)
  name.vb: IEnumerable(Of FileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
- uid: System.Windows.Controls.OpenFileDialog.Filter*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.Filter
  name: Filter
  nameWithType: OpenFileDialog.Filter
  fullName: System.Windows.Controls.OpenFileDialog.Filter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Windows.Controls.OpenFileDialog.FilterIndex*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.FilterIndex
  name: FilterIndex
  nameWithType: OpenFileDialog.FilterIndex
  fullName: System.Windows.Controls.OpenFileDialog.FilterIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Controls.OpenFileDialog.InitialDirectory*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.InitialDirectory
  name: InitialDirectory
  nameWithType: OpenFileDialog.InitialDirectory
  fullName: System.Windows.Controls.OpenFileDialog.InitialDirectory
- uid: System.Windows.Controls.OpenFileDialog.Multiselect*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.Multiselect
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: System.Windows.Controls.OpenFileDialog.Multiselect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.OpenFileDialog.ShowDialog*
  commentId: Overload:System.Windows.Controls.OpenFileDialog.ShowDialog
  name: ShowDialog
  nameWithType: OpenFileDialog.ShowDialog
  fullName: System.Windows.Controls.OpenFileDialog.ShowDialog
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Window
  commentId: T:System.Windows.Window
  parent: System.Windows
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
