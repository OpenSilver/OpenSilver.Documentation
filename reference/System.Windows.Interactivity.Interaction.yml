### YamlMime:ManagedReference
items:
- uid: System.Windows.Interactivity.Interaction
  commentId: T:System.Windows.Interactivity.Interaction
  id: Interaction
  parent: System.Windows.Interactivity
  children:
  - System.Windows.Interactivity.Interaction.BehaviorsProperty
  - System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)
  - System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)
  - System.Windows.Interactivity.Interaction.TriggersProperty
  langs:
  - csharp
  - vb
  name: Interaction
  nameWithType: Interaction
  fullName: System.Windows.Interactivity.Interaction
  type: Class
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/Interaction.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Interaction
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/Interaction.cs
    startLine: 21
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nStatic class that owns the Triggers and Behaviors attached properties. Handles propagation of AssociatedObject change notifications.\n"
  example: []
  syntax:
    content: public static class Interaction
    content.vb: Public Module Interaction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Interactivity.Interaction.TriggersProperty
  commentId: F:System.Windows.Interactivity.Interaction.TriggersProperty
  id: TriggersProperty
  parent: System.Windows.Interactivity.Interaction
  langs:
  - csharp
  - vb
  name: TriggersProperty
  nameWithType: Interaction.TriggersProperty
  fullName: System.Windows.Interactivity.Interaction.TriggersProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/Interaction.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TriggersProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/Interaction.cs
    startLine: 67
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nThis property is used as the internal backing store for the public Triggers attached property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty TriggersProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly TriggersProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Interactivity.Interaction.BehaviorsProperty
  commentId: F:System.Windows.Interactivity.Interaction.BehaviorsProperty
  id: BehaviorsProperty
  parent: System.Windows.Interactivity.Interaction
  langs:
  - csharp
  - vb
  name: BehaviorsProperty
  nameWithType: Interaction.BehaviorsProperty
  fullName: System.Windows.Interactivity.Interaction.BehaviorsProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/Interaction.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BehaviorsProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/Interaction.cs
    startLine: 77
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nThis property is used as the internal backing store for the public Behaviors attached property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty BehaviorsProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly BehaviorsProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)
  id: GetTriggers(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.Interaction
  langs:
  - csharp
  - vb
  name: GetTriggers(DependencyObject)
  nameWithType: Interaction.GetTriggers(DependencyObject)
  fullName: System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/Interaction.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTriggers
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/Interaction.cs
    startLine: 91
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the TriggerCollection containing the triggers associated with the specified object.\n"
  example: []
  syntax:
    content: public static TriggerCollection GetTriggers(DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
      description: The object from which to retrieve the triggers.
    return:
      type: System.Windows.Interactivity.TriggerCollection
      description: A TriggerCollection containing the triggers associated with the specified object.
    content.vb: Public Shared Function GetTriggers(obj As DependencyObject) As TriggerCollection
  overload: System.Windows.Interactivity.Interaction.GetTriggers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)
  id: GetBehaviors(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.Interaction
  langs:
  - csharp
  - vb
  name: GetBehaviors(DependencyObject)
  nameWithType: Interaction.GetBehaviors(DependencyObject)
  fullName: System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactivity/Interaction.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetBehaviors
    path: ../OpenSilverGit/src/Runtime/Blend/Interactivity/Interaction.cs
    startLine: 107
  assemblies:
  - OpenSilver.Interactivity
  namespace: System.Windows.Interactivity
  summary: "\nGets the <xref href=\"System.Windows.Interactivity.BehaviorCollection\" data-throw-if-not-resolved=\"false\"></xref> associated with a specified object.\n"
  example: []
  syntax:
    content: public static BehaviorCollection GetBehaviors(DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
      description: The object from which to retrieve the <xref href="System.Windows.Interactivity.BehaviorCollection" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Windows.Interactivity.BehaviorCollection
      description: A <xref href="System.Windows.Interactivity.BehaviorCollection" data-throw-if-not-resolved="false"></xref> containing the behaviors associated with the specified object.
    content.vb: Public Shared Function GetBehaviors(obj As DependencyObject) As BehaviorCollection
  overload: System.Windows.Interactivity.Interaction.GetBehaviors*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Interactivity
  commentId: N:System.Windows.Interactivity
  name: System.Windows.Interactivity
  nameWithType: System.Windows.Interactivity
  fullName: System.Windows.Interactivity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Interactivity.Interaction.GetTriggers*
  commentId: Overload:System.Windows.Interactivity.Interaction.GetTriggers
  name: GetTriggers
  nameWithType: Interaction.GetTriggers
  fullName: System.Windows.Interactivity.Interaction.GetTriggers
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Interactivity.TriggerCollection
  commentId: T:System.Windows.Interactivity.TriggerCollection
  parent: System.Windows.Interactivity
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.Interactivity.TriggerCollection
- uid: System.Windows.Interactivity.BehaviorCollection
  commentId: T:System.Windows.Interactivity.BehaviorCollection
  parent: System.Windows.Interactivity
  name: BehaviorCollection
  nameWithType: BehaviorCollection
  fullName: System.Windows.Interactivity.BehaviorCollection
- uid: System.Windows.Interactivity.Interaction.GetBehaviors*
  commentId: Overload:System.Windows.Interactivity.Interaction.GetBehaviors
  name: GetBehaviors
  nameWithType: Interaction.GetBehaviors
  fullName: System.Windows.Interactivity.Interaction.GetBehaviors
