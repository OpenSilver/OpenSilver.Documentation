### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin
  commentId: T:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin
  id: IAnchoredToOrigin
  parent: System.Windows.Controls.DataVisualization.Charting
  children:
  - System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
  langs:
  - csharp
  - vb
  name: IAnchoredToOrigin
  nameWithType: IAnchoredToOrigin
  fullName: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin
  type: Interface
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/IAnchoredToOrigin.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IAnchoredToOrigin
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/IAnchoredToOrigin.cs
    startLine: 16
  assemblies:
  - OpenSilver.Controls.DataVisualization.Toolkit
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nRange axes look for this interface on series to determine whether to\nanchor the origin to the bottom or top of the screen where possible.\n"
  remarks: "\nImplementing this interface ensures that value margins will not cause\nan origin to float above the bottom or top of the screen if no\ndata exists below or above.\n"
  example: []
  syntax:
    content: public interface IAnchoredToOrigin
    content.vb: Public Interface IAnchoredToOrigin
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
  commentId: P:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
  id: AnchoredAxis
  parent: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin
  langs:
  - csharp
  - vb
  name: AnchoredAxis
  nameWithType: IAnchoredToOrigin.AnchoredAxis
  fullName: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.DataVisualization/Charting/Axis/IAnchoredToOrigin.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AnchoredAxis
    path: ../OpenSilverGit/src/Runtime/Controls.DataVisualization/Charting/Axis/IAnchoredToOrigin.cs
    startLine: 21
  assemblies:
  - OpenSilver.Controls.DataVisualization.Toolkit
  namespace: System.Windows.Controls.DataVisualization.Charting
  summary: "\nGets the axis to which the data is anchored.\n"
  example: []
  syntax:
    content: IRangeAxis AnchoredAxis { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataVisualization.Charting.IRangeAxis
    content.vb: ReadOnly Property AnchoredAxis As IRangeAxis
  overload: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Windows.Controls.DataVisualization.Charting
  commentId: N:System.Windows.Controls.DataVisualization.Charting
  name: System.Windows.Controls.DataVisualization.Charting
  nameWithType: System.Windows.Controls.DataVisualization.Charting
  fullName: System.Windows.Controls.DataVisualization.Charting
- uid: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis*
  commentId: Overload:System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
  name: AnchoredAxis
  nameWithType: IAnchoredToOrigin.AnchoredAxis
  fullName: System.Windows.Controls.DataVisualization.Charting.IAnchoredToOrigin.AnchoredAxis
- uid: System.Windows.Controls.DataVisualization.Charting.IRangeAxis
  commentId: T:System.Windows.Controls.DataVisualization.Charting.IRangeAxis
  parent: System.Windows.Controls.DataVisualization.Charting
  name: IRangeAxis
  nameWithType: IRangeAxis
  fullName: System.Windows.Controls.DataVisualization.Charting.IRangeAxis
