### YamlMime:ManagedReference
items:
- uid: System.Windows.DataObject
  commentId: T:System.Windows.DataObject
  id: DataObject
  parent: System.Windows
  children:
  - System.Windows.DataObject.#ctor
  - System.Windows.DataObject.#ctor(System.Object)
  - System.Windows.DataObject.GetData(System.String)
  - System.Windows.DataObject.GetData(System.String,System.Boolean)
  - System.Windows.DataObject.GetData(System.Type)
  - System.Windows.DataObject.GetDataPresent(System.String)
  - System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.DataObject.GetDataPresent(System.Type)
  - System.Windows.DataObject.GetFormats
  - System.Windows.DataObject.GetFormats(System.Boolean)
  - System.Windows.DataObject.SetData(System.Object)
  - System.Windows.DataObject.SetData(System.String,System.Object)
  - System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)
  - System.Windows.DataObject.SetData(System.Type,System.Object)
  langs:
  - csharp
  - vb
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.DataObject
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nProvides a basic implementation of the <xref href=\"System.Windows.IDataObject\" data-throw-if-not-resolved=\"false\"></xref> interface,\nwhich defines a format-independent mechanism for transferring data.\n"
  example: []
  syntax:
    content: 'public class DataObject : IDataObject'
    content.vb: >-
      Public Class DataObject

          Implements IDataObject
  inheritance:
  - System.Object
  implements:
  - System.Windows.IDataObject
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.DataObject.#ctor
  commentId: M:System.Windows.DataObject.#ctor
  id: '#ctor'
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Windows.DataObject.DataObject()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 33
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.DataObject\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DataObject()
    content.vb: Public Sub New
  overload: System.Windows.DataObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.#ctor(System.Object)
  commentId: M:System.Windows.DataObject.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: DataObject(Object)
  nameWithType: DataObject.DataObject(Object)
  fullName: System.Windows.DataObject.DataObject(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 45
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.DataObject\" data-throw-if-not-resolved=\"false\"></xref> class, with specified\ninitial data.\n"
  example: []
  syntax:
    content: public DataObject(object data)
    parameters:
    - id: data
      type: System.Object
      description: "\nAn object that represents the data to store in this data object.\n"
    content.vb: Public Sub New(data As Object)
  overload: System.Windows.DataObject.#ctor*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetData(System.String)
  commentId: M:System.Windows.DataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetData(String)
  nameWithType: DataObject.GetData(String)
  fullName: System.Windows.DataObject.GetData(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRetrieves a data object in a specified format; the data format is specified by\na string.\n"
  example: []
  syntax:
    content: public object GetData(string format)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies what format to retrieve the data as. Use the constant\nSystem.Windows.DataFormats.FileDrop.\n"
    return:
      type: System.Object
      description: "\nA data object that has the data in the specified format, or null if the data\n"
    content.vb: Public Function GetData(format As String) As Object
  overload: System.Windows.DataObject.GetData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nformat is not equivalent to System.Windows.DataFormats.FileDrop.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetData(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetData(System.Type)
  commentId: M:System.Windows.DataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetData(Type)
  nameWithType: DataObject.GetData(Type)
  fullName: System.Windows.DataObject.GetData(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 89
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRetrieves a data object in a specified format; the data format is specified by\na <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object. Always throws an exception.\n"
  example: []
  syntax:
    content: public object GetData(Type format)
    parameters:
    - id: format
      type: System.Type
      description: "\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the format in which to retrieve the data.\n"
    return:
      type: System.Object
      description: "\nAlways throws an exception.\n"
    content.vb: Public Function GetData(format As Type) As Object
  overload: System.Windows.DataObject.GetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetData(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetData(System.String,System.Boolean)
  commentId: M:System.Windows.DataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetData(String, Boolean)
  nameWithType: DataObject.GetData(String, Boolean)
  fullName: System.Windows.DataObject.GetData(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 115
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRetrieves a data object in a specified format, optionally converting the data\nto the specified format. Always throws an exception.\n"
  example: []
  syntax:
    content: public object GetData(string format, bool autoConvert)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies the format in which to retrieve the data.\n"
    - id: autoConvert
      type: System.Boolean
      description: "\ntrue to attempt to automatically convert the data to the specified format; false\nfor no data format conversion.\n"
    return:
      type: System.Object
      description: "\nAlways throws an exception.\n"
    content.vb: Public Function GetData(format As String, autoConvert As Boolean) As Object
  overload: System.Windows.DataObject.GetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetData(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetDataPresent(System.String)
  commentId: M:System.Windows.DataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetDataPresent(String)
  nameWithType: DataObject.GetDataPresent(String)
  fullName: System.Windows.DataObject.GetDataPresent(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetDataPresent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 136
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nChecks to see whether the data is available in, or can be converted to, a specified\nformat; the data format is specified by a string.\n"
  example: []
  syntax:
    content: public bool GetDataPresent(string format)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies the format to check for. See the System.Windows.DataFormats\nclass for a set of predefined data formats.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the data is in the specified format, and is not null. false if format\nis not equivalent to <xref href=\"System.Windows.DataFormats.FileDrop\" data-throw-if-not-resolved=\"false\"></xref>, or if the data is null.\n"
    content.vb: Public Function GetDataPresent(format As String) As Boolean
  overload: System.Windows.DataObject.GetDataPresent*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetDataPresent(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetDataPresent(System.Type)
  commentId: M:System.Windows.DataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetDataPresent(Type)
  nameWithType: DataObject.GetDataPresent(Type)
  fullName: System.Windows.DataObject.GetDataPresent(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetDataPresent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 159
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nChecks whether the data is available in, or can be converted to, a specified\nformat. The data format is specified by a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object. Always throws an\nexception.\n"
  example: []
  syntax:
    content: public bool GetDataPresent(Type format)
    parameters:
    - id: format
      type: System.Type
      description: "\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that specifies the format to check for.\n"
    return:
      type: System.Boolean
      description: "\nAlways throws an exception.\n"
    content.vb: Public Function GetDataPresent(format As Type) As Boolean
  overload: System.Windows.DataObject.GetDataPresent*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetDataPresent(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)
  commentId: M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetDataPresent(String, Boolean)
  nameWithType: DataObject.GetDataPresent(String, Boolean)
  fullName: System.Windows.DataObject.GetDataPresent(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetDataPresent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 188
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nChecks whether the data is available in, or can be converted to, a specified\nformat. A Boolean flag indicates whether to check if the data can be converted\nto the specified format, if it is not available in that format. Always throws\nan exception.\n"
  example: []
  syntax:
    content: public bool GetDataPresent(string format, bool autoConvert)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies the format to check for. See the <xref href=\"System.Windows.DataFormats\" data-throw-if-not-resolved=\"false\"></xref>\nclass for a set of predefined data formats.\n"
    - id: autoConvert
      type: System.Boolean
      description: "\nfalse to only check for the specified format; true to also check whether data\nstored in this data object can be converted to the specified format.\n"
    return:
      type: System.Boolean
      description: "\nAlways throws an exception.\n"
    content.vb: Public Function GetDataPresent(format As String, autoConvert As Boolean) As Boolean
  overload: System.Windows.DataObject.GetDataPresent*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetFormats
  commentId: M:System.Windows.DataObject.GetFormats
  id: GetFormats
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetFormats()
  nameWithType: DataObject.GetFormats()
  fullName: System.Windows.DataObject.GetFormats()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetFormats
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 205
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a list of all formats that the data in this data object is stored in,\nor can be converted to.\n"
  example: []
  syntax:
    content: public string[] GetFormats()
    return:
      type: System.String[]
      description: "\nAn array of strings, with each string specifying the name of a format supported\nby this data object.\n"
    content.vb: Public Function GetFormats As String()
  overload: System.Windows.DataObject.GetFormats*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetFormats
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.GetFormats(System.Boolean)
  commentId: M:System.Windows.DataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: GetFormats(Boolean)
  nameWithType: DataObject.GetFormats(Boolean)
  fullName: System.Windows.DataObject.GetFormats(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetFormats
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 231
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns a list of all formats that the data in this data object is stored in.\nA Boolean flag indicates whether to also include formats that the data can be\nautomatically converted to. Always throws an exception.\n"
  example: []
  syntax:
    content: public string[] GetFormats(bool autoConvert)
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "\ntrue to retrieve all formats that data in this data object is stored in, or converted\nto; false to retrieve only formats that data stored in this data object is stored\nin (excluding formats that the data is not stored in, but can be automatically\nconverted to).\n"
    return:
      type: System.String[]
      description: "\nAlways throws an exception.\n"
    content.vb: Public Function GetFormats(autoConvert As Boolean) As String()
  overload: System.Windows.DataObject.GetFormats*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.GetFormats(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.SetData(System.Object)
  commentId: M:System.Windows.DataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: SetData(Object)
  nameWithType: DataObject.SetData(Object)
  fullName: System.Windows.DataObject.SetData(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 250
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nStores the specified data in this data object and automatically converts the\ndata format from the source object type. Always throws an exception.\n"
  example: []
  syntax:
    content: public void SetData(object data)
    parameters:
    - id: data
      type: System.Object
      description: "\nThe data to store in this data object.\n"
    content.vb: Public Sub SetData(data As Object)
  overload: System.Windows.DataObject.SetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.SetData(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.SetData(System.String,System.Object)
  commentId: M:System.Windows.DataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: SetData(String, Object)
  nameWithType: DataObject.SetData(String, Object)
  fullName: System.Windows.DataObject.SetData(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 273
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nStores the specified data in this data object, along with one or more specified\ndata formats. The data format is specified by a string. Always throws an exception.\n"
  example: []
  syntax:
    content: public void SetData(string format, object data)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies what format to store the data in. See the <xref href=\"System.Windows.DataFormats\" data-throw-if-not-resolved=\"false\"></xref>\nclass for a set of predefined data formats.\n"
    - id: data
      type: System.Object
      description: "\nThe data to store in this data object.\n"
    content.vb: Public Sub SetData(format As String, data As Object)
  overload: System.Windows.DataObject.SetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.SetData(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.SetData(System.Type,System.Object)
  commentId: M:System.Windows.DataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: SetData(Type, Object)
  nameWithType: DataObject.SetData(Type, Object)
  fullName: System.Windows.DataObject.SetData(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 296
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nStores the specified data in this data object, together with one or more specified\ndata formats. The data format is specified by a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> class. Always throws\nan exception.\n"
  example: []
  syntax:
    content: public void SetData(Type format, object data)
    parameters:
    - id: format
      type: System.Type
      description: "\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that specifies the format in which to store the data.\n"
    - id: data
      type: System.Object
      description: "\nThe data to store in this data object.\n"
    content.vb: Public Sub SetData(format As Type, data As Object)
  overload: System.Windows.DataObject.SetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.SetData(System.Type,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)
  commentId: M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)
  id: SetData(System.String,System.Object,System.Boolean)
  parent: System.Windows.DataObject
  langs:
  - csharp
  - vb
  name: SetData(String, Object, Boolean)
  nameWithType: DataObject.SetData(String, Object, Boolean)
  fullName: System.Windows.DataObject.SetData(System.String, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DataObject.SL.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetData
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DataObject.SL.cs
    startLine: 324
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nStores the specified data in this data object, together with one or more specified\ndata formats. This overload includes a Boolean flag to indicate whether the data\nmay be converted to another format on retrieval. Always throws an exception.\n"
  example: []
  syntax:
    content: public void SetData(string format, object data, bool autoConvert)
    parameters:
    - id: format
      type: System.String
      description: "\nA string that specifies the format in which to store the data. See the <xref href=\"System.Windows.DataFormats\" data-throw-if-not-resolved=\"false\"></xref>\nclass for a set of predefined data formats.\n"
    - id: data
      type: System.Object
      description: "\nThe data to store in this data object.\n"
    - id: autoConvert
      type: System.Boolean
      description: "\ntrue to allow the data to be converted to another format on retrieval; false\nto prohibit the data from being converted to another format on retrieval.\n"
    content.vb: Public Sub SetData(format As String, data As Object, autoConvert As Boolean)
  overload: System.Windows.DataObject.SetData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\nNot implemented.\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\nAttempted access in a mode other than Drop.\n"
  implements:
  - System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.IDataObject
  commentId: T:System.Windows.IDataObject
  parent: System.Windows
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.IDataObject
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.DataObject
  commentId: T:System.Windows.DataObject
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.DataObject
- uid: System.Windows.DataObject.#ctor*
  commentId: Overload:System.Windows.DataObject.#ctor
  name: DataObject
  nameWithType: DataObject.DataObject
  fullName: System.Windows.DataObject.DataObject
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: System.Windows.DataObject.GetData*
  commentId: Overload:System.Windows.DataObject.GetData
  name: GetData
  nameWithType: DataObject.GetData
  fullName: System.Windows.DataObject.GetData
- uid: System.Windows.IDataObject.GetData(System.String)
  commentId: M:System.Windows.IDataObject.GetData(System.String)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.IDataObject.GetData(System.String)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetData(System.String)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetData(System.String)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.IDataObject.GetData(System.Type)
  commentId: M:System.Windows.IDataObject.GetData(System.Type)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.IDataObject.GetData(System.Type)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetData(System.Type)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetData(System.Type)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.IDataObject.GetData(System.String,System.Boolean)
  commentId: M:System.Windows.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetData(String, Boolean)
  nameWithType: IDataObject.GetData(String, Boolean)
  fullName: System.Windows.IDataObject.GetData(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetData(System.String,System.Boolean)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetData(System.String,System.Boolean)
    name: GetData
    nameWithType: IDataObject.GetData
    fullName: System.Windows.IDataObject.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DataFormats.FileDrop
  commentId: F:System.Windows.DataFormats.FileDrop
  isExternal: true
- uid: System.Windows.DataObject.GetDataPresent*
  commentId: Overload:System.Windows.DataObject.GetDataPresent
  name: GetDataPresent
  nameWithType: DataObject.GetDataPresent
  fullName: System.Windows.DataObject.GetDataPresent
- uid: System.Windows.IDataObject.GetDataPresent(System.String)
  commentId: M:System.Windows.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.IDataObject.GetDataPresent(System.String)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetDataPresent(System.String)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetDataPresent(System.String)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.IDataObject.GetDataPresent(System.Type)
  commentId: M:System.Windows.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.IDataObject.GetDataPresent(System.Type)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetDataPresent(System.Type)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetDataPresent(System.Type)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DataFormats
  commentId: T:System.Windows.DataFormats
  name: DataFormats
  nameWithType: DataFormats
  fullName: System.Windows.DataFormats
- uid: System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)
  commentId: M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetDataPresent(String, Boolean)
  nameWithType: IDataObject.GetDataPresent(String, Boolean)
  fullName: System.Windows.IDataObject.GetDataPresent(System.String, System.Boolean)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)
    name: GetDataPresent
    nameWithType: IDataObject.GetDataPresent
    fullName: System.Windows.IDataObject.GetDataPresent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DataObject.GetFormats*
  commentId: Overload:System.Windows.DataObject.GetFormats
  name: GetFormats
  nameWithType: DataObject.GetFormats
  fullName: System.Windows.DataObject.GetFormats
- uid: System.Windows.IDataObject.GetFormats
  commentId: M:System.Windows.IDataObject.GetFormats
  parent: System.Windows.IDataObject
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.IDataObject.GetFormats()
  spec.csharp:
  - uid: System.Windows.IDataObject.GetFormats
    name: GetFormats
    nameWithType: IDataObject.GetFormats
    fullName: System.Windows.IDataObject.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetFormats
    name: GetFormats
    nameWithType: IDataObject.GetFormats
    fullName: System.Windows.IDataObject.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.IDataObject.GetFormats(System.Boolean)
  commentId: M:System.Windows.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.IDataObject
  isExternal: true
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.IDataObject.GetFormats(System.Boolean)
  spec.csharp:
  - uid: System.Windows.IDataObject.GetFormats(System.Boolean)
    name: GetFormats
    nameWithType: IDataObject.GetFormats
    fullName: System.Windows.IDataObject.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.GetFormats(System.Boolean)
    name: GetFormats
    nameWithType: IDataObject.GetFormats
    fullName: System.Windows.IDataObject.GetFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DataObject.SetData*
  commentId: Overload:System.Windows.DataObject.SetData
  name: SetData
  nameWithType: DataObject.SetData
  fullName: System.Windows.DataObject.SetData
- uid: System.Windows.IDataObject.SetData(System.Object)
  commentId: M:System.Windows.IDataObject.SetData(System.Object)
  parent: System.Windows.IDataObject
  isExternal: true
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.IDataObject.SetData(System.Object)
  spec.csharp:
  - uid: System.Windows.IDataObject.SetData(System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.SetData(System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.IDataObject.SetData(System.String,System.Object)
  commentId: M:System.Windows.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.IDataObject
  isExternal: true
  name: SetData(String, Object)
  nameWithType: IDataObject.SetData(String, Object)
  fullName: System.Windows.IDataObject.SetData(System.String, System.Object)
  spec.csharp:
  - uid: System.Windows.IDataObject.SetData(System.String,System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.SetData(System.String,System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.IDataObject.SetData(System.Type,System.Object)
  commentId: M:System.Windows.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.IDataObject
  isExternal: true
  name: SetData(Type, Object)
  nameWithType: IDataObject.SetData(Type, Object)
  fullName: System.Windows.IDataObject.SetData(System.Type, System.Object)
  spec.csharp:
  - uid: System.Windows.IDataObject.SetData(System.Type,System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.SetData(System.Type,System.Object)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)
  commentId: M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)
  parent: System.Windows.IDataObject
  isExternal: true
  name: SetData(String, Object, Boolean)
  nameWithType: IDataObject.SetData(String, Object, Boolean)
  fullName: System.Windows.IDataObject.SetData(System.String, System.Object, System.Boolean)
  spec.csharp:
  - uid: System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)
    name: SetData
    nameWithType: IDataObject.SetData
    fullName: System.Windows.IDataObject.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
