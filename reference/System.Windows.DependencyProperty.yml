### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  id: DependencyProperty
  parent: System.Windows
  children:
  - System.Windows.DependencyProperty.GetMetadata(System.Type)
  - System.Windows.DependencyProperty.IsAttached
  - System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  - System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  - System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  - System.Windows.DependencyProperty.ToString
  - System.Windows.DependencyProperty.UnsetValue
  langs:
  - csharp
  - vb
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DependencyProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents a dependency property that is registered with the dependency property\nsystem. Dependency properties provide support for value expressions, data\nbinding, animation, and property change notification.\n"
  example: []
  syntax:
    content: public class DependencyProperty
    content.vb: Public Class DependencyProperty
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.DependencyProperty.UnsetValue
  commentId: F:System.Windows.DependencyProperty.UnsetValue
  id: UnsetValue
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: UnsetValue
  nameWithType: DependencyProperty.UnsetValue
  fullName: System.Windows.DependencyProperty.UnsetValue
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UnsetValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 32
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static readonly object UnsetValue
    return:
      type: System.Object
    content.vb: Public Shared ReadOnly UnsetValue As Object
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.DependencyProperty.IsAttached
  commentId: P:System.Windows.DependencyProperty.IsAttached
  id: IsAttached
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: IsAttached
  nameWithType: DependencyProperty.IsAttached
  fullName: System.Windows.DependencyProperty.IsAttached
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAttached
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public bool IsAttached { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttached As Boolean
  overload: System.Windows.DependencyProperty.IsAttached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.DependencyProperty.GetMetadata(System.Type)
  commentId: M:System.Windows.DependencyProperty.GetMetadata(System.Type)
  id: GetMetadata(System.Type)
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: GetMetadata(Type)
  nameWithType: DependencyProperty.GetMetadata(Type)
  fullName: System.Windows.DependencyProperty.GetMetadata(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetMetadata
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 49
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public PropertyMetadata GetMetadata(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Windows.PropertyMetadata
    content.vb: Public Function GetMetadata(type As Type) As PropertyMetadata
  overload: System.Windows.DependencyProperty.GetMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  commentId: M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  id: RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: RegisterAttached(String, Type, Type, PropertyMetadata)
  nameWithType: DependencyProperty.RegisterAttached(String, Type, Type, PropertyMetadata)
  fullName: System.Windows.DependencyProperty.RegisterAttached(System.String, System.Type, System.Type, System.Windows.PropertyMetadata)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RegisterAttached
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 124
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public static DependencyProperty RegisterAttached(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata)
    parameters:
    - id: name
      type: System.String
    - id: propertyType
      type: System.Type
    - id: ownerType
      type: System.Type
    - id: typeMetadata
      type: System.Windows.PropertyMetadata
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared Function RegisterAttached(name As String, propertyType As Type, ownerType As Type, typeMetadata As PropertyMetadata) As DependencyProperty
  overload: System.Windows.DependencyProperty.RegisterAttached*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  commentId: M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  id: Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: Register(String, Type, Type, PropertyMetadata)
  nameWithType: DependencyProperty.Register(String, Type, Type, PropertyMetadata)
  fullName: System.Windows.DependencyProperty.Register(System.String, System.Type, System.Type, System.Windows.PropertyMetadata)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Register
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 198
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRegisters a dependency property with the specified property name, property type, owner type, and property metadata.\n"
  example: []
  syntax:
    content: public static DependencyProperty Register(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata)
    parameters:
    - id: name
      type: System.String
      description: The property name.
    - id: propertyType
      type: System.Type
      description: The type of the property.
    - id: ownerType
      type: System.Type
      description: The type of the property&apos;s owner.
    - id: typeMetadata
      type: System.Windows.PropertyMetadata
      description: The property metadata.
    return:
      type: System.Windows.DependencyProperty
      description: The DependencyProperty.
    content.vb: Public Shared Function Register(name As String, propertyType As Type, ownerType As Type, typeMetadata As PropertyMetadata) As DependencyProperty
  overload: System.Windows.DependencyProperty.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.DependencyProperty.ToString
  commentId: M:System.Windows.DependencyProperty.ToString
  id: ToString
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DependencyProperty.ToString()
  fullName: System.Windows.DependencyProperty.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 261
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns the DependencyProperty as a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The DependencyProperty as a string.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Windows.DependencyProperty.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  commentId: M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  id: OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyProperty
  langs:
  - csharp
  - vb
  name: OverrideMetadata(Type, PropertyMetadata)
  nameWithType: DependencyProperty.OverrideMetadata(Type, PropertyMetadata)
  fullName: System.Windows.DependencyProperty.OverrideMetadata(System.Type, System.Windows.PropertyMetadata)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DependencyProperty.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OverrideMetadata
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DependencyProperty.cs
    startLine: 293
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: public void OverrideMetadata(Type newOwnerType, PropertyMetadata typeMetadata)
    parameters:
    - id: newOwnerType
      type: System.Type
    - id: typeMetadata
      type: System.Windows.PropertyMetadata
    content.vb: Public Sub OverrideMetadata(newOwnerType As Type, typeMetadata As PropertyMetadata)
  overload: System.Windows.DependencyProperty.OverrideMetadata*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.DependencyProperty.IsAttached*
  commentId: Overload:System.Windows.DependencyProperty.IsAttached
  name: IsAttached
  nameWithType: DependencyProperty.IsAttached
  fullName: System.Windows.DependencyProperty.IsAttached
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyProperty.GetMetadata*
  commentId: Overload:System.Windows.DependencyProperty.GetMetadata
  name: GetMetadata
  nameWithType: DependencyProperty.GetMetadata
  fullName: System.Windows.DependencyProperty.GetMetadata
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyMetadata
  commentId: T:System.Windows.PropertyMetadata
  parent: System.Windows
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyProperty.RegisterAttached*
  commentId: Overload:System.Windows.DependencyProperty.RegisterAttached
  name: RegisterAttached
  nameWithType: DependencyProperty.RegisterAttached
  fullName: System.Windows.DependencyProperty.RegisterAttached
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyProperty.Register*
  commentId: Overload:System.Windows.DependencyProperty.Register
  name: Register
  nameWithType: DependencyProperty.Register
  fullName: System.Windows.DependencyProperty.Register
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyProperty.ToString*
  commentId: Overload:System.Windows.DependencyProperty.ToString
  name: ToString
  nameWithType: DependencyProperty.ToString
  fullName: System.Windows.DependencyProperty.ToString
- uid: System.Windows.DependencyProperty.OverrideMetadata*
  commentId: Overload:System.Windows.DependencyProperty.OverrideMetadata
  name: OverrideMetadata
  nameWithType: DependencyProperty.OverrideMetadata
  fullName: System.Windows.DependencyProperty.OverrideMetadata
