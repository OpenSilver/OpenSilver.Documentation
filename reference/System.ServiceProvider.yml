### YamlMime:ManagedReference
items:
- uid: System.ServiceProvider
  commentId: T:System.ServiceProvider
  id: ServiceProvider
  parent: System
  children:
  - System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty)
  - System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty,System.Collections.Generic.List{System.Object})
  - System.ServiceProvider.GetService(System.Type)
  - System.ServiceProvider.Parents
  - System.ServiceProvider.TargetObject
  - System.ServiceProvider.TargetProperty
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: ServiceProvider
  fullName: System.ServiceProvider
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ServiceProvider
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 53
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nDefines a mechanism for retrieving a service object; that is, an object that\nprovides custom support to other objects.\n"
  example: []
  syntax:
    content: 'public class ServiceProvider : IServiceProvider, IProvideValueTarget'
    content.vb: >-
      Public Class ServiceProvider
          Implements IServiceProvider, IProvideValueTarget
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  - System.Windows.Markup.IProvideValueTarget
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty,System.Collections.Generic.List{System.Object})
  commentId: M:System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty,System.Collections.Generic.List{System.Object})
  id: '#ctor(System.Object,System.Windows.DependencyProperty,System.Collections.Generic.List{System.Object})'
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: ServiceProvider(Object, DependencyProperty, List<Object>)
  nameWithType: ServiceProvider.ServiceProvider(Object, DependencyProperty, List<Object>)
  fullName: System.ServiceProvider.ServiceProvider(System.Object, System.Windows.DependencyProperty, System.Collections.Generic.List<System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nInitialize a new instance of the <xref href=\"System.ServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ServiceProvider(object element, DependencyProperty property, List<object> parents)
    parameters:
    - id: element
      type: System.Object
    - id: property
      type: System.Windows.DependencyProperty
    - id: parents
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public Sub New(element As Object, property As DependencyProperty, parents As List(Of Object))
  overload: System.ServiceProvider.#ctor*
  nameWithType.vb: ServiceProvider.ServiceProvider(Object, DependencyProperty, List(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceProvider.ServiceProvider(System.Object, System.Windows.DependencyProperty, System.Collections.Generic.List(Of System.Object))
  name.vb: ServiceProvider(Object, DependencyProperty, List(Of Object))
- uid: System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty)
  commentId: M:System.ServiceProvider.#ctor(System.Object,System.Windows.DependencyProperty)
  id: '#ctor(System.Object,System.Windows.DependencyProperty)'
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: ServiceProvider(Object, DependencyProperty)
  nameWithType: ServiceProvider.ServiceProvider(Object, DependencyProperty)
  fullName: System.ServiceProvider.ServiceProvider(System.Object, System.Windows.DependencyProperty)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 71
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nInitialize a new instance of the <xref href=\"System.ServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ServiceProvider(object element, DependencyProperty property)
    parameters:
    - id: element
      type: System.Object
    - id: property
      type: System.Windows.DependencyProperty
    content.vb: Public Sub New(element As Object, property As DependencyProperty)
  overload: System.ServiceProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceProvider.GetService(System.Type)
  commentId: M:System.ServiceProvider.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: GetService(Type)
  nameWithType: ServiceProvider.GetService(Type)
  fullName: System.ServiceProvider.GetService(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetService
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 85
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets the service object of the specified type.\n"
  example: []
  syntax:
    content: public object GetService(Type serviceType)
    parameters:
    - id: serviceType
      type: System.Type
      description: "\nAn object that specifies the type of service object to get.\n"
    return:
      type: System.Object
      description: "\nA service object of type serviceType.-or- null if there is no service object\nof type serviceType.\n"
    content.vb: Public Function GetService(serviceType As Type) As Object
  overload: System.ServiceProvider.GetService*
  implements:
  - System.IServiceProvider.GetService(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceProvider.Parents
  commentId: P:System.ServiceProvider.Parents
  id: Parents
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: Parents
  nameWithType: ServiceProvider.Parents
  fullName: System.ServiceProvider.Parents
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Parents
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 95
  assemblies:
  - OpenSilver
  namespace: System
  summary: "\nGets or sets the List of UIElement that are parents of the element.\n"
  example: []
  syntax:
    content: public List<object> Parents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public ReadOnly Property Parents As List(Of Object)
  overload: System.ServiceProvider.Parents*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceProvider.TargetObject
  commentId: P:System.ServiceProvider.TargetObject
  id: TargetObject
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: TargetObject
  nameWithType: ServiceProvider.TargetObject
  fullName: System.ServiceProvider.TargetObject
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TargetObject
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public object TargetObject { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property TargetObject As Object
  overload: System.ServiceProvider.TargetObject*
  implements:
  - System.Windows.Markup.IProvideValueTarget.TargetObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceProvider.TargetProperty
  commentId: P:System.ServiceProvider.TargetProperty
  id: TargetProperty
  parent: System.ServiceProvider
  langs:
  - csharp
  - vb
  name: TargetProperty
  nameWithType: ServiceProvider.TargetProperty
  fullName: System.ServiceProvider.TargetProperty
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/Core/Other/ServiceProvider.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TargetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/Core/Other/ServiceProvider.cs
    startLine: 109
  assemblies:
  - OpenSilver
  namespace: System
  syntax:
    content: public object TargetProperty { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property TargetProperty As Object
  overload: System.ServiceProvider.TargetProperty*
  implements:
  - System.Windows.Markup.IProvideValueTarget.TargetProperty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.IProvideValueTarget
  commentId: T:System.Windows.Markup.IProvideValueTarget
  parent: System.Windows.Markup
  name: IProvideValueTarget
  nameWithType: IProvideValueTarget
  fullName: System.Windows.Markup.IProvideValueTarget
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ServiceProvider
  commentId: T:System.ServiceProvider
  name: ServiceProvider
  nameWithType: ServiceProvider
  fullName: System.ServiceProvider
- uid: System.ServiceProvider.#ctor*
  commentId: Overload:System.ServiceProvider.#ctor
  name: ServiceProvider
  nameWithType: ServiceProvider.ServiceProvider
  fullName: System.ServiceProvider.ServiceProvider
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ServiceProvider.GetService*
  commentId: Overload:System.ServiceProvider.GetService
  name: GetService
  nameWithType: ServiceProvider.GetService
  fullName: System.ServiceProvider.GetService
- uid: System.IServiceProvider.GetService(System.Type)
  commentId: M:System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  name: GetService(Type)
  nameWithType: IServiceProvider.GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    nameWithType: IServiceProvider.GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceProvider.Parents*
  commentId: Overload:System.ServiceProvider.Parents
  name: Parents
  nameWithType: ServiceProvider.Parents
  fullName: System.ServiceProvider.Parents
- uid: System.ServiceProvider.TargetObject*
  commentId: Overload:System.ServiceProvider.TargetObject
  name: TargetObject
  nameWithType: ServiceProvider.TargetObject
  fullName: System.ServiceProvider.TargetObject
- uid: System.Windows.Markup.IProvideValueTarget.TargetObject
  commentId: P:System.Windows.Markup.IProvideValueTarget.TargetObject
  parent: System.Windows.Markup.IProvideValueTarget
  name: TargetObject
  nameWithType: IProvideValueTarget.TargetObject
  fullName: System.Windows.Markup.IProvideValueTarget.TargetObject
- uid: System.ServiceProvider.TargetProperty*
  commentId: Overload:System.ServiceProvider.TargetProperty
  name: TargetProperty
  nameWithType: ServiceProvider.TargetProperty
  fullName: System.ServiceProvider.TargetProperty
- uid: System.Windows.Markup.IProvideValueTarget.TargetProperty
  commentId: P:System.Windows.Markup.IProvideValueTarget.TargetProperty
  parent: System.Windows.Markup.IProvideValueTarget
  name: TargetProperty
  nameWithType: IProvideValueTarget.TargetProperty
  fullName: System.Windows.Markup.IProvideValueTarget.TargetProperty
