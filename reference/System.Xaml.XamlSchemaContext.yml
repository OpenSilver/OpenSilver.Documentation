### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlSchemaContext
  commentId: T:System.Xaml.XamlSchemaContext
  id: XamlSchemaContext
  parent: System.Xaml
  children:
  - System.Xaml.XamlSchemaContext.#ctor
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  - System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  - System.Xaml.XamlSchemaContext.Finalize
  - System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  - System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  - System.Xaml.XamlSchemaContext.GetAttachableEvent(System.String,System.Reflection.MethodInfo)
  - System.Xaml.XamlSchemaContext.GetAttachableProperty(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  - System.Xaml.XamlSchemaContext.GetEvent(System.Reflection.EventInfo)
  - System.Xaml.XamlSchemaContext.GetParameter(System.Reflection.ParameterInfo)
  - System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  - System.Xaml.XamlSchemaContext.GetProperty(System.Reflection.PropertyInfo)
  - System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  - System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  - System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  - System.Xaml.XamlSchemaContext.InvokerOptions
  - System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  - System.Xaml.XamlSchemaContext.ReferenceAssemblies
  - System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  - System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  langs:
  - csharp
  - vb
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlSchemaContext
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 39
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public class XamlSchemaContext
    content.vb: Public Class XamlSchemaContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xaml.XamlSchemaContext.#ctor
  commentId: M:System.Xaml.XamlSchemaContext.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: XamlSchemaContext()
  nameWithType: XamlSchemaContext.XamlSchemaContext()
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 41
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlSchemaContext()
    content.vb: Public Sub New
  overload: System.Xaml.XamlSchemaContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  commentId: M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: XamlSchemaContext(IEnumerable<Assembly>)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 46
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlSchemaContext(IEnumerable<Assembly> referenceAssemblies)
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
    content.vb: Public Sub New(referenceAssemblies As IEnumerable(Of Assembly))
  overload: System.Xaml.XamlSchemaContext.#ctor*
  nameWithType.vb: XamlSchemaContext.XamlSchemaContext(IEnumerable(Of Assembly))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.XamlSchemaContext.XamlSchemaContext(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly))
  name.vb: XamlSchemaContext(IEnumerable(Of Assembly))
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  commentId: M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: XamlSchemaContext(XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(System.Xaml.XamlSchemaContextSettings)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 51
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlSchemaContext(XamlSchemaContextSettings settings)
    parameters:
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
    content.vb: Public Sub New(settings As XamlSchemaContextSettings)
  overload: System.Xaml.XamlSchemaContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  commentId: M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)'
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: XamlSchemaContext(IEnumerable<Assembly>, XamlSchemaContextSettings)
  nameWithType: XamlSchemaContext.XamlSchemaContext(IEnumerable<Assembly>, XamlSchemaContextSettings)
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>, System.Xaml.XamlSchemaContextSettings)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 56
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlSchemaContext(IEnumerable<Assembly> referenceAssemblies, XamlSchemaContextSettings settings)
    parameters:
    - id: referenceAssemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
    - id: settings
      type: System.Xaml.XamlSchemaContextSettings
    content.vb: Public Sub New(referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)
  overload: System.Xaml.XamlSchemaContext.#ctor*
  nameWithType.vb: XamlSchemaContext.XamlSchemaContext(IEnumerable(Of Assembly), XamlSchemaContextSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.XamlSchemaContext.XamlSchemaContext(System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly), System.Xaml.XamlSchemaContextSettings)
  name.vb: XamlSchemaContext(IEnumerable(Of Assembly), XamlSchemaContextSettings)
- uid: System.Xaml.XamlSchemaContext.Finalize
  commentId: M:System.Xaml.XamlSchemaContext.Finalize
  id: Finalize
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: XamlSchemaContext.Finalize()
  fullName: System.Xaml.XamlSchemaContext.Finalize()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Finalize
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 71
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: System.Xaml.XamlSchemaContext.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xaml.XamlSchemaContext.InvokerOptions
  commentId: P:System.Xaml.XamlSchemaContext.InvokerOptions
  id: InvokerOptions
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: InvokerOptions
  nameWithType: XamlSchemaContext.InvokerOptions
  fullName: System.Xaml.XamlSchemaContext.InvokerOptions
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InvokerOptions
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 90
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlInvokerOptions InvokerOptions { get; }
    parameters: []
    return:
      type: System.Xaml.XamlInvokerOptions
    content.vb: Public ReadOnly Property InvokerOptions As XamlInvokerOptions
  overload: System.Xaml.XamlSchemaContext.InvokerOptions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  commentId: P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  id: SupportMarkupExtensionsWithDuplicateArity
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SupportMarkupExtensionsWithDuplicateArity
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 93
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool SupportMarkupExtensionsWithDuplicateArity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean
  overload: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  commentId: P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  id: FullyQualifyAssemblyNamesInClrNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FullyQualifyAssemblyNamesInClrNamespaces
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 95
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean
  overload: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  commentId: P:System.Xaml.XamlSchemaContext.ReferenceAssemblies
  id: ReferenceAssemblies
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReferenceAssemblies
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 97
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public IList<Assembly> ReferenceAssemblies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Reflection.Assembly}
    content.vb: Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)
  overload: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  commentId: M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  id: GetAllXamlNamespaces
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetAllXamlNamespaces()
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces()
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAllXamlNamespaces
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 276
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual IEnumerable<string> GetAllXamlNamespaces()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function GetAllXamlNamespaces As IEnumerable(Of String)
  overload: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  commentId: M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  id: GetAllXamlTypes(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetAllXamlTypes(String)
  nameWithType: XamlSchemaContext.GetAllXamlTypes(String)
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAllXamlTypes
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 290
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual ICollection<XamlType> GetAllXamlTypes(string xamlNamespace)
    parameters:
    - id: xamlNamespace
      type: System.String
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlType}
    content.vb: Public Overridable Function GetAllXamlTypes(xamlNamespace As String) As ICollection(Of XamlType)
  overload: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  commentId: M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  id: GetPreferredPrefix(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetPreferredPrefix(String)
  nameWithType: XamlSchemaContext.GetPreferredPrefix(String)
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPreferredPrefix
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 309
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual string GetPreferredPrefix(string xmlns)
    parameters:
    - id: xmlns
      type: System.String
    return:
      type: System.String
    content.vb: Public Overridable Function GetPreferredPrefix(xmlns As String) As String
  overload: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  commentId: M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)
  id: GetValueConverter``1(System.Type,System.Xaml.XamlType)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetValueConverter<TConverterBase>(Type, XamlType)
  nameWithType: XamlSchemaContext.GetValueConverter<TConverterBase>(Type, XamlType)
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter<TConverterBase>(System.Type, System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetValueConverter
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 325
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: >-
      protected XamlValueConverter<TConverterBase> GetValueConverter<TConverterBase>(Type converterType, XamlType targetType)
          where TConverterBase : class
    parameters:
    - id: converterType
      type: System.Type
    - id: targetType
      type: System.Xaml.XamlType
    typeParameters:
    - id: TConverterBase
    return:
      type: System.Xaml.Schema.XamlValueConverter{{TConverterBase}}
    content.vb: Protected Function GetValueConverter(Of TConverterBase As Class)(converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)
  overload: System.Xaml.XamlSchemaContext.GetValueConverter*
  nameWithType.vb: XamlSchemaContext.GetValueConverter(Of TConverterBase)(Type, XamlType)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Xaml.XamlSchemaContext.GetValueConverter(Of TConverterBase)(System.Type, System.Xaml.XamlType)
  name.vb: GetValueConverter(Of TConverterBase)(Type, XamlType)
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  commentId: M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)
  id: GetXamlDirective(System.String,System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetXamlDirective(String, String)
  nameWithType: XamlSchemaContext.GetXamlDirective(String, String)
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetXamlDirective
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 331
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual XamlDirective GetXamlDirective(string xamlNamespace, string name)
    parameters:
    - id: xamlNamespace
      type: System.String
    - id: name
      type: System.String
    return:
      type: System.Xaml.XamlDirective
    content.vb: Public Overridable Function GetXamlDirective(xamlNamespace As String, name As String) As XamlDirective
  overload: System.Xaml.XamlSchemaContext.GetXamlDirective*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  commentId: M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  id: GetXamlType(System.Type)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetXamlType(Type)
  nameWithType: XamlSchemaContext.GetXamlType(Type)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(System.Type)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetXamlType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 370
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual XamlType GetXamlType(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Xaml.XamlType
    content.vb: Public Overridable Function GetXamlType(type As Type) As XamlType
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  commentId: M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  id: GetXamlType(System.Xaml.Schema.XamlTypeName)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetXamlType(XamlTypeName)
  nameWithType: XamlSchemaContext.GetXamlType(XamlTypeName)
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetXamlType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 382
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public XamlType GetXamlType(XamlTypeName xamlTypeName)
    parameters:
    - id: xamlTypeName
      type: System.Xaml.Schema.XamlTypeName
    return:
      type: System.Xaml.XamlType
    content.vb: Public Function GetXamlType(xamlTypeName As XamlTypeName) As XamlType
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  commentId: M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  id: GetXamlType(System.String,System.String,System.Xaml.XamlType[])
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetXamlType(String, String, XamlType[])
  nameWithType: XamlSchemaContext.GetXamlType(String, String, XamlType[])
  fullName: System.Xaml.XamlSchemaContext.GetXamlType(System.String, System.String, System.Xaml.XamlType[])
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetXamlType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 398
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlType GetXamlType(string xamlNamespace, string name, params XamlType[] typeArguments)
    parameters:
    - id: xamlNamespace
      type: System.String
    - id: name
      type: System.String
    - id: typeArguments
      type: System.Xaml.XamlType[]
    return:
      type: System.Xaml.XamlType
    content.vb: Protected Overridable Function GetXamlType(xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType
  overload: System.Xaml.XamlSchemaContext.GetXamlType*
  nameWithType.vb: XamlSchemaContext.GetXamlType(String, String, XamlType())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: System.Xaml.XamlSchemaContext.GetXamlType(System.String, System.String, System.Xaml.XamlType())
  name.vb: GetXamlType(String, String, XamlType())
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  commentId: M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  id: OnAssemblyResolve(System.String)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: OnAssemblyResolve(String)
  nameWithType: XamlSchemaContext.OnAssemblyResolve(String)
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnAssemblyResolve
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 429
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual Assembly OnAssemblyResolve(string assemblyName)
    parameters:
    - id: assemblyName
      type: System.String
    return:
      type: System.Reflection.Assembly
    content.vb: Protected Overridable Function OnAssemblyResolve(assemblyName As String) As Assembly
  overload: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  commentId: M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)
  id: TryGetCompatibleXamlNamespace(System.String,System.String@)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: TryGetCompatibleXamlNamespace(String, out String)
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace(String, out String)
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String, out System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryGetCompatibleXamlNamespace
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 450
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public virtual bool TryGetCompatibleXamlNamespace(string xamlNamespace, out string compatibleNamespace)
    parameters:
    - id: xamlNamespace
      type: System.String
    - id: compatibleNamespace
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function TryGetCompatibleXamlNamespace(xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean
  overload: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  nameWithType.vb: XamlSchemaContext.TryGetCompatibleXamlNamespace(String, ByRef String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String, ByRef System.String)
  name.vb: TryGetCompatibleXamlNamespace(String, ByRef String)
- uid: System.Xaml.XamlSchemaContext.GetParameter(System.Reflection.ParameterInfo)
  commentId: M:System.Xaml.XamlSchemaContext.GetParameter(System.Reflection.ParameterInfo)
  id: GetParameter(System.Reflection.ParameterInfo)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetParameter(ParameterInfo)
  nameWithType: XamlSchemaContext.GetParameter(ParameterInfo)
  fullName: System.Xaml.XamlSchemaContext.GetParameter(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetParameter
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 644
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember GetParameter(ParameterInfo parameterInfo)
    parameters:
    - id: parameterInfo
      type: System.Reflection.ParameterInfo
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function GetParameter(parameterInfo As ParameterInfo) As XamlMember
  overload: System.Xaml.XamlSchemaContext.GetParameter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetProperty(System.Reflection.PropertyInfo)
  commentId: M:System.Xaml.XamlSchemaContext.GetProperty(System.Reflection.PropertyInfo)
  id: GetProperty(System.Reflection.PropertyInfo)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetProperty(PropertyInfo)
  nameWithType: XamlSchemaContext.GetProperty(PropertyInfo)
  fullName: System.Xaml.XamlSchemaContext.GetProperty(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 653
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember GetProperty(PropertyInfo propertyInfo)
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function GetProperty(propertyInfo As PropertyInfo) As XamlMember
  overload: System.Xaml.XamlSchemaContext.GetProperty*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetEvent(System.Reflection.EventInfo)
  commentId: M:System.Xaml.XamlSchemaContext.GetEvent(System.Reflection.EventInfo)
  id: GetEvent(System.Reflection.EventInfo)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetEvent(EventInfo)
  nameWithType: XamlSchemaContext.GetEvent(EventInfo)
  fullName: System.Xaml.XamlSchemaContext.GetEvent(System.Reflection.EventInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEvent
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 663
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember GetEvent(EventInfo eventInfo)
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function GetEvent(eventInfo As EventInfo) As XamlMember
  overload: System.Xaml.XamlSchemaContext.GetEvent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetAttachableProperty(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  commentId: M:System.Xaml.XamlSchemaContext.GetAttachableProperty(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  id: GetAttachableProperty(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetAttachableProperty(String, MethodInfo, MethodInfo)
  nameWithType: XamlSchemaContext.GetAttachableProperty(String, MethodInfo, MethodInfo)
  fullName: System.Xaml.XamlSchemaContext.GetAttachableProperty(System.String, System.Reflection.MethodInfo, System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAttachableProperty
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 673
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember GetAttachableProperty(string attachablePropertyName, MethodInfo getter, MethodInfo setter)
    parameters:
    - id: attachablePropertyName
      type: System.String
    - id: getter
      type: System.Reflection.MethodInfo
    - id: setter
      type: System.Reflection.MethodInfo
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function GetAttachableProperty(attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo) As XamlMember
  overload: System.Xaml.XamlSchemaContext.GetAttachableProperty*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Xaml.XamlSchemaContext.GetAttachableEvent(System.String,System.Reflection.MethodInfo)
  commentId: M:System.Xaml.XamlSchemaContext.GetAttachableEvent(System.String,System.Reflection.MethodInfo)
  id: GetAttachableEvent(System.String,System.Reflection.MethodInfo)
  parent: System.Xaml.XamlSchemaContext
  langs:
  - csharp
  - vb
  name: GetAttachableEvent(String, MethodInfo)
  nameWithType: XamlSchemaContext.GetAttachableEvent(String, MethodInfo)
  fullName: System.Xaml.XamlSchemaContext.GetAttachableEvent(System.String, System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAttachableEvent
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContext.cs
    startLine: 683
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: protected virtual XamlMember GetAttachableEvent(string attachablePropertyName, MethodInfo adder)
    parameters:
    - id: attachablePropertyName
      type: System.String
    - id: adder
      type: System.Reflection.MethodInfo
    return:
      type: System.Xaml.XamlMember
    content.vb: Protected Overridable Function GetAttachableEvent(attachablePropertyName As String, adder As MethodInfo) As XamlMember
  overload: System.Xaml.XamlSchemaContext.GetAttachableEvent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.XamlSchemaContext.#ctor*
  commentId: Overload:System.Xaml.XamlSchemaContext.#ctor
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext.XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext.XamlSchemaContext
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  nameWithType.vb: IEnumerable(Of Assembly)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly)
  name.vb: IEnumerable(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xaml.XamlSchemaContextSettings
  commentId: T:System.Xaml.XamlSchemaContextSettings
  parent: System.Xaml
  name: XamlSchemaContextSettings
  nameWithType: XamlSchemaContextSettings
  fullName: System.Xaml.XamlSchemaContextSettings
- uid: System.Xaml.XamlSchemaContext.Finalize*
  commentId: Overload:System.Xaml.XamlSchemaContext.Finalize
  name: Finalize
  nameWithType: XamlSchemaContext.Finalize
  fullName: System.Xaml.XamlSchemaContext.Finalize
- uid: System.Xaml.XamlSchemaContext.InvokerOptions*
  commentId: Overload:System.Xaml.XamlSchemaContext.InvokerOptions
  name: InvokerOptions
  nameWithType: XamlSchemaContext.InvokerOptions
  fullName: System.Xaml.XamlSchemaContext.InvokerOptions
- uid: System.Xaml.XamlInvokerOptions
  commentId: T:System.Xaml.XamlInvokerOptions
  parent: System.Xaml
  name: XamlInvokerOptions
  nameWithType: XamlInvokerOptions
  fullName: System.Xaml.XamlInvokerOptions
- uid: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity*
  commentId: Overload:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  name: SupportMarkupExtensionsWithDuplicateArity
  nameWithType: XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
  fullName: System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces*
  commentId: Overload:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  name: FullyQualifyAssemblyNamesInClrNamespaces
  nameWithType: XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
  fullName: System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces
- uid: System.Xaml.XamlSchemaContext.ReferenceAssemblies*
  commentId: Overload:System.Xaml.XamlSchemaContext.ReferenceAssemblies
  name: ReferenceAssemblies
  nameWithType: XamlSchemaContext.ReferenceAssemblies
  fullName: System.Xaml.XamlSchemaContext.ReferenceAssemblies
- uid: System.Collections.Generic.IList{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.IList{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Assembly>
  nameWithType: IList<Assembly>
  fullName: System.Collections.Generic.IList<System.Reflection.Assembly>
  nameWithType.vb: IList(Of Assembly)
  fullName.vb: System.Collections.Generic.IList(Of System.Reflection.Assembly)
  name.vb: IList(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
  name: GetAllXamlNamespaces
  nameWithType: XamlSchemaContext.GetAllXamlNamespaces
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlNamespaces
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlSchemaContext.GetAllXamlTypes*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetAllXamlTypes
  name: GetAllXamlTypes
  nameWithType: XamlSchemaContext.GetAllXamlTypes
  fullName: System.Xaml.XamlSchemaContext.GetAllXamlTypes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlType}
  commentId: T:System.Collections.Generic.ICollection{System.Xaml.XamlType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<XamlType>
  nameWithType: ICollection<XamlType>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlType>
  nameWithType.vb: ICollection(Of XamlType)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Xaml.XamlType)
  name.vb: ICollection(Of XamlType)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.XamlSchemaContext.GetPreferredPrefix*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetPreferredPrefix
  name: GetPreferredPrefix
  nameWithType: XamlSchemaContext.GetPreferredPrefix
  fullName: System.Xaml.XamlSchemaContext.GetPreferredPrefix
- uid: System.Xaml.XamlSchemaContext.GetValueConverter*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetValueConverter
  name: GetValueConverter
  nameWithType: XamlSchemaContext.GetValueConverter
  fullName: System.Xaml.XamlSchemaContext.GetValueConverter
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  parent: System.Xaml
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlValueConverter{{TConverterBase}}
  commentId: T:System.Xaml.Schema.XamlValueConverter{``0}
  parent: System.Xaml.Schema
  definition: System.Xaml.Schema.XamlValueConverter`1
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
  nameWithType.vb: XamlValueConverter(Of TConverterBase)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase)
  name.vb: XamlValueConverter(Of TConverterBase)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlValueConverter`1
  commentId: T:System.Xaml.Schema.XamlValueConverter`1
  parent: System.Xaml.Schema
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
  nameWithType.vb: XamlValueConverter(Of TConverterBase)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase)
  name.vb: XamlValueConverter(Of TConverterBase)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema
  commentId: N:System.Xaml.Schema
  name: System.Xaml.Schema
  nameWithType: System.Xaml.Schema
  fullName: System.Xaml.Schema
- uid: System.Xaml.XamlSchemaContext.GetXamlDirective*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetXamlDirective
  name: GetXamlDirective
  nameWithType: XamlSchemaContext.GetXamlDirective
  fullName: System.Xaml.XamlSchemaContext.GetXamlDirective
- uid: System.Xaml.XamlDirective
  commentId: T:System.Xaml.XamlDirective
  parent: System.Xaml
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlSchemaContext.GetXamlType*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetXamlType
  name: GetXamlType
  nameWithType: XamlSchemaContext.GetXamlType
  fullName: System.Xaml.XamlSchemaContext.GetXamlType
- uid: System.Xaml.Schema.XamlTypeName
  commentId: T:System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.XamlType[]
  isExternal: true
  name: XamlType[]
  nameWithType: XamlType[]
  fullName: System.Xaml.XamlType[]
  nameWithType.vb: XamlType()
  fullName.vb: System.Xaml.XamlType()
  name.vb: XamlType()
  spec.csharp:
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: System.Xaml.XamlType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xaml.XamlSchemaContext.OnAssemblyResolve*
  commentId: Overload:System.Xaml.XamlSchemaContext.OnAssemblyResolve
  name: OnAssemblyResolve
  nameWithType: XamlSchemaContext.OnAssemblyResolve
  fullName: System.Xaml.XamlSchemaContext.OnAssemblyResolve
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace*
  commentId: Overload:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace
  name: TryGetCompatibleXamlNamespace
  nameWithType: XamlSchemaContext.TryGetCompatibleXamlNamespace
  fullName: System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace
- uid: System.Xaml.XamlSchemaContext.GetParameter*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetParameter
  name: GetParameter
  nameWithType: XamlSchemaContext.GetParameter
  fullName: System.Xaml.XamlSchemaContext.GetParameter
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Xaml.XamlMember
  commentId: T:System.Xaml.XamlMember
  parent: System.Xaml
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlSchemaContext.GetProperty*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetProperty
  name: GetProperty
  nameWithType: XamlSchemaContext.GetProperty
  fullName: System.Xaml.XamlSchemaContext.GetProperty
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlSchemaContext.GetEvent*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetEvent
  name: GetEvent
  nameWithType: XamlSchemaContext.GetEvent
  fullName: System.Xaml.XamlSchemaContext.GetEvent
- uid: System.Reflection.EventInfo
  commentId: T:System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext.GetAttachableProperty*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetAttachableProperty
  name: GetAttachableProperty
  nameWithType: XamlSchemaContext.GetAttachableProperty
  fullName: System.Xaml.XamlSchemaContext.GetAttachableProperty
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlSchemaContext.GetAttachableEvent*
  commentId: Overload:System.Xaml.XamlSchemaContext.GetAttachableEvent
  name: GetAttachableEvent
  nameWithType: XamlSchemaContext.GetAttachableEvent
  fullName: System.Xaml.XamlSchemaContext.GetAttachableEvent
