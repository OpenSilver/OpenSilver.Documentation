### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AutoCompleteFilterMode
  commentId: T:System.Windows.Controls.AutoCompleteFilterMode
  id: AutoCompleteFilterMode
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.AutoCompleteFilterMode.Contains
  - System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive
  - System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal
  - System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive
  - System.Windows.Controls.AutoCompleteFilterMode.Custom
  - System.Windows.Controls.AutoCompleteFilterMode.Equals
  - System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive
  - System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal
  - System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive
  - System.Windows.Controls.AutoCompleteFilterMode.None
  - System.Windows.Controls.AutoCompleteFilterMode.StartsWith
  - System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive
  - System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal
  - System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive
  langs:
  - csharp
  - vb
  name: AutoCompleteFilterMode
  nameWithType: AutoCompleteFilterMode
  fullName: System.Windows.Controls.AutoCompleteFilterMode
  type: Enum
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AutoCompleteFilterMode
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 18
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies how text in the text box portion of the\n<xref href=\"System.Windows.Controls.AutoCompleteBox\" data-throw-if-not-resolved=\"false\"></xref> control is used\nto filter items specified by the\n<xref href=\"System.Windows.Controls.AutoCompleteBox.ItemsSource\" data-throw-if-not-resolved=\"false\"></xref>\nproperty for display in the drop-down.\n"
  example: []
  syntax:
    content: public enum AutoCompleteFilterMode
    content.vb: Public Enum AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Windows.Controls.AutoCompleteFilterMode.None
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.None
  id: None
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: None
  nameWithType: AutoCompleteFilterMode.None
  fullName: System.Windows.Controls.AutoCompleteFilterMode.None
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: None
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 23
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies that no filter is used. All items are returned.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.StartsWith
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.StartsWith
  id: StartsWith
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: StartsWith
  nameWithType: AutoCompleteFilterMode.StartsWith
  fullName: System.Windows.Controls.AutoCompleteFilterMode.StartsWith
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StartsWith
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 33
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-insensitive filter where the\nreturned items start with the specified text. The filter uses the\n<xref href=\"System.String.StartsWith(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.CurrentCultureIgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> as\nthe string comparison criteria.\n"
  example: []
  syntax:
    content: StartsWith = 1
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive
  id: StartsWithCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: StartsWithCaseSensitive
  nameWithType: AutoCompleteFilterMode.StartsWithCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.StartsWithCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StartsWithCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 43
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-sensitive filter where the\nreturned items start with the specified text. The filter uses the\n<xref href=\"System.String.StartsWith(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> as the string\ncomparison criteria.\n"
  example: []
  syntax:
    content: StartsWithCaseSensitive = 2
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal
  id: StartsWithOrdinal
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: StartsWithOrdinal
  nameWithType: AutoCompleteFilterMode.StartsWithOrdinal
  fullName: System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinal
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StartsWithOrdinal
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 53
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-insensitive filter where the returned\nitems start with the specified text. The filter uses the\n<xref href=\"System.String.StartsWith(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.OrdinalIgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> as the\nstring comparison criteria.\n"
  example: []
  syntax:
    content: StartsWithOrdinal = 3
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive
  id: StartsWithOrdinalCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: StartsWithOrdinalCaseSensitive
  nameWithType: AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.StartsWithOrdinalCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StartsWithOrdinalCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 62
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-sensitive filter where the returned items\nstart with the specified text. The filter uses the\n<xref href=\"System.String.StartsWith(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying <xref href=\"System.StringComparer.Ordinal\" data-throw-if-not-resolved=\"false\"></xref> as\nthe string comparison criteria.\n"
  example: []
  syntax:
    content: StartsWithOrdinalCaseSensitive = 4
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.Contains
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.Contains
  id: Contains
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: AutoCompleteFilterMode.Contains
  fullName: System.Windows.Controls.AutoCompleteFilterMode.Contains
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Contains
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 68
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-insensitive filter where the\nreturned items contain the specified text.\n"
  example: []
  syntax:
    content: Contains = 5
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive
  id: ContainsCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: ContainsCaseSensitive
  nameWithType: AutoCompleteFilterMode.ContainsCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.ContainsCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContainsCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 74
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-sensitive filter where the\nreturned items contain the specified text.\n"
  example: []
  syntax:
    content: ContainsCaseSensitive = 6
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal
  id: ContainsOrdinal
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: ContainsOrdinal
  nameWithType: AutoCompleteFilterMode.ContainsOrdinal
  fullName: System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinal
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContainsOrdinal
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 80
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-insensitive filter where the returned\nitems contain the specified text.\n"
  example: []
  syntax:
    content: ContainsOrdinal = 7
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive
  id: ContainsOrdinalCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: ContainsOrdinalCaseSensitive
  nameWithType: AutoCompleteFilterMode.ContainsOrdinalCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.ContainsOrdinalCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContainsOrdinalCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 86
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-sensitive filter where the returned items\ncontain the specified text.\n"
  example: []
  syntax:
    content: ContainsOrdinalCaseSensitive = 8
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.Equals
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.Equals
  id: Equals
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: Equals
  nameWithType: AutoCompleteFilterMode.Equals
  fullName: System.Windows.Controls.AutoCompleteFilterMode.Equals
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 96
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-insensitive filter where the\nreturned items equal the specified text. The filter uses the\n<xref href=\"System.String.Equals(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.CurrentCultureIgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> as\nthe search comparison criteria.\n"
  example: []
  syntax:
    content: Equals = 9
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive
  id: EqualsCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: EqualsCaseSensitive
  nameWithType: AutoCompleteFilterMode.EqualsCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.EqualsCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EqualsCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 106
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies a culture-sensitive, case-sensitive filter where the\nreturned items equal the specified text. The filter uses the\n<xref href=\"System.String.Equals(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> as the string\ncomparison criteria.\n"
  example: []
  syntax:
    content: EqualsCaseSensitive = 10
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal
  id: EqualsOrdinal
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: EqualsOrdinal
  nameWithType: AutoCompleteFilterMode.EqualsOrdinal
  fullName: System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinal
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EqualsOrdinal
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 116
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-insensitive filter where the returned\nitems equal the specified text. The filter uses the\n<xref href=\"System.String.Equals(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying\n<xref href=\"System.StringComparer.OrdinalIgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> as the\nstring comparison criteria.\n"
  example: []
  syntax:
    content: EqualsOrdinal = 11
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive
  id: EqualsOrdinalCaseSensitive
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: EqualsOrdinalCaseSensitive
  nameWithType: AutoCompleteFilterMode.EqualsOrdinalCaseSensitive
  fullName: System.Windows.Controls.AutoCompleteFilterMode.EqualsOrdinalCaseSensitive
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EqualsOrdinalCaseSensitive
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 125
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies an ordinal, case-sensitive filter where the returned items\nequal the specified text. The filter uses the\n<xref href=\"System.String.Equals(System.String%2cSystem.StringComparison)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod, specifying <xref href=\"System.StringComparer.Ordinal\" data-throw-if-not-resolved=\"false\"></xref> as\nthe string comparison criteria.\n"
  example: []
  syntax:
    content: EqualsOrdinalCaseSensitive = 12
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Controls.AutoCompleteFilterMode.Custom
  commentId: F:System.Windows.Controls.AutoCompleteFilterMode.Custom
  id: Custom
  parent: System.Windows.Controls.AutoCompleteFilterMode
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: AutoCompleteFilterMode.Custom
  fullName: System.Windows.Controls.AutoCompleteFilterMode.Custom
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Custom
    path: ../OpenSilverGit/src/Runtime/Controls.Input/AutoCompleteBox/AutoCompleteFilterMode.cs
    startLine: 134
  assemblies:
  - OpenSilver.Controls.Input
  namespace: System.Windows.Controls
  summary: "\nSpecifies that a custom filter is used. This mode is used when the\n<xref href=\"System.Windows.Controls.AutoCompleteBox.TextFilter\" data-throw-if-not-resolved=\"false\"></xref>\nor\n<xref href=\"System.Windows.Controls.AutoCompleteBox.ItemFilter\" data-throw-if-not-resolved=\"false\"></xref>\nproperties are set.\n"
  example: []
  syntax:
    content: Custom = 13
    return:
      type: System.Windows.Controls.AutoCompleteFilterMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Windows.Controls.AutoCompleteBox
  commentId: T:System.Windows.Controls.AutoCompleteBox
  parent: System.Windows.Controls
  name: AutoCompleteBox
  nameWithType: AutoCompleteBox
  fullName: System.Windows.Controls.AutoCompleteBox
- uid: System.Windows.Controls.AutoCompleteBox.ItemsSource
  commentId: P:System.Windows.Controls.AutoCompleteBox.ItemsSource
  isExternal: true
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Windows.Controls.AutoCompleteFilterMode
  commentId: T:System.Windows.Controls.AutoCompleteFilterMode
  parent: System.Windows.Controls
  name: AutoCompleteFilterMode
  nameWithType: AutoCompleteFilterMode
  fullName: System.Windows.Controls.AutoCompleteFilterMode
- uid: System.String.StartsWith(System.String,System.StringComparison)
  commentId: M:System.String.StartsWith(System.String,System.StringComparison)
  isExternal: true
- uid: System.StringComparer.CurrentCultureIgnoreCase
  commentId: P:System.StringComparer.CurrentCultureIgnoreCase
  isExternal: true
- uid: System.StringComparer.CurrentCulture
  commentId: P:System.StringComparer.CurrentCulture
  isExternal: true
- uid: System.StringComparer.OrdinalIgnoreCase
  commentId: P:System.StringComparer.OrdinalIgnoreCase
  isExternal: true
- uid: System.StringComparer.Ordinal
  commentId: P:System.StringComparer.Ordinal
  isExternal: true
- uid: System.String.Equals(System.String,System.StringComparison)
  commentId: M:System.String.Equals(System.String,System.StringComparison)
  isExternal: true
- uid: System.Windows.Controls.AutoCompleteBox.TextFilter
  commentId: P:System.Windows.Controls.AutoCompleteBox.TextFilter
  isExternal: true
- uid: System.Windows.Controls.AutoCompleteBox.ItemFilter
  commentId: P:System.Windows.Controls.AutoCompleteBox.ItemFilter
  isExternal: true
