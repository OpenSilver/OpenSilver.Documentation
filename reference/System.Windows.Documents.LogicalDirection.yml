### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.LogicalDirection
  commentId: T:System.Windows.Documents.LogicalDirection
  id: LogicalDirection
  parent: System.Windows.Documents
  children:
  - System.Windows.Documents.LogicalDirection.Backward
  - System.Windows.Documents.LogicalDirection.Forward
  langs:
  - csharp
  - vb
  name: LogicalDirection
  nameWithType: LogicalDirection
  fullName: System.Windows.Documents.LogicalDirection
  type: Enum
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LogicalDirection
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nSpecifies a logical direction in which to perform certain text operations, such\nas inserting, retrieving, or navigating through text relative to a specified\nposition (a <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public enum LogicalDirection
    content.vb: Public Enum LogicalDirection
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Windows.Documents.LogicalDirection.Backward
  commentId: F:System.Windows.Documents.LogicalDirection.Backward
  id: Backward
  parent: System.Windows.Documents.LogicalDirection
  langs:
  - csharp
  - vb
  name: Backward
  nameWithType: LogicalDirection.Backward
  fullName: System.Windows.Documents.LogicalDirection.Backward
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Backward
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nBackward, or from right to left.\n"
  example: []
  syntax:
    content: Backward = 0
    return:
      type: System.Windows.Documents.LogicalDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Windows.Documents.LogicalDirection.Forward
  commentId: F:System.Windows.Documents.LogicalDirection.Forward
  id: Forward
  parent: System.Windows.Documents.LogicalDirection
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: LogicalDirection.Forward
  fullName: System.Windows.Documents.LogicalDirection.Forward
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Forward
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/LogicalDirection.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nForward, or from left to right.\n"
  example: []
  syntax:
    content: Forward = 1
    return:
      type: System.Windows.Documents.LogicalDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Windows.Documents.TextPointer
  commentId: T:System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents
  commentId: N:System.Windows.Documents
  name: System.Windows.Documents
  nameWithType: System.Windows.Documents
  fullName: System.Windows.Documents
- uid: System.Windows.Documents.LogicalDirection
  commentId: T:System.Windows.Documents.LogicalDirection
  parent: System.Windows.Documents
  name: LogicalDirection
  nameWithType: LogicalDirection
  fullName: System.Windows.Documents.LogicalDirection
