### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataGridColumn
  commentId: T:System.Windows.Controls.DataGridColumn
  id: DataGridColumn
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.DataGridColumn.#ctor
  - System.Windows.Controls.DataGridColumn.ActualWidth
  - System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)
  - System.Windows.Controls.DataGridColumn.CanUserReorder
  - System.Windows.Controls.DataGridColumn.CanUserResize
  - System.Windows.Controls.DataGridColumn.CanUserSort
  - System.Windows.Controls.DataGridColumn.CellStyle
  - System.Windows.Controls.DataGridColumn.ClipboardContentBinding
  - System.Windows.Controls.DataGridColumn.DisplayIndex
  - System.Windows.Controls.DataGridColumn.DragIndicatorStyle
  - System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)
  - System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)
  - System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)
  - System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)
  - System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)
  - System.Windows.Controls.DataGridColumn.Header
  - System.Windows.Controls.DataGridColumn.HeaderStyle
  - System.Windows.Controls.DataGridColumn.IsAutoGenerated
  - System.Windows.Controls.DataGridColumn.IsFrozen
  - System.Windows.Controls.DataGridColumn.IsReadOnly
  - System.Windows.Controls.DataGridColumn.MaxWidth
  - System.Windows.Controls.DataGridColumn.MinWidth
  - System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)
  - System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)
  - System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)
  - System.Windows.Controls.DataGridColumn.SortMemberPath
  - System.Windows.Controls.DataGridColumn.Visibility
  - System.Windows.Controls.DataGridColumn.Width
  langs:
  - csharp
  - vb
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Windows.Controls.DataGridColumn
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataGridColumn
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 33
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nRepresents a <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref> column.\n"
  example: []
  syntax:
    content: >-
      [StyleTypedProperty(Property = "CellStyle", StyleTargetType = typeof(DataGridCell))]

      [StyleTypedProperty(Property = "DragIndicatorStyle", StyleTargetType = typeof(ContentControl))]

      [StyleTypedProperty(Property = "HeaderStyle", StyleTargetType = typeof(DataGridColumnHeader))]

      public abstract class DataGridColumn : DependencyObject
    content.vb: >-
      <StyleTypedProperty(Property:="CellStyle", StyleTargetType:=GetType(DataGridCell))>

      <StyleTypedProperty(Property:="DragIndicatorStyle", StyleTargetType:=GetType(ContentControl))>

      <StyleTypedProperty(Property:="HeaderStyle", StyleTargetType:=GetType(DataGridColumnHeader))>

      Public MustInherit Class DataGridColumn
          Inherits DependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  derivedClasses:
  - System.Windows.Controls.DataGridBoundColumn
  - System.Windows.Controls.DataGridTemplateColumn
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.Windows.StyleTypedPropertyAttribute
    ctor: System.Windows.StyleTypedPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Property
      type: System.String
      value: CellStyle
    - name: StyleTargetType
      type: System.Type
      value: System.Windows.Controls.DataGridCell
  - type: System.Windows.StyleTypedPropertyAttribute
    ctor: System.Windows.StyleTypedPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Property
      type: System.String
      value: DragIndicatorStyle
    - name: StyleTargetType
      type: System.Type
      value: System.Windows.Controls.ContentControl
  - type: System.Windows.StyleTypedPropertyAttribute
    ctor: System.Windows.StyleTypedPropertyAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Property
      type: System.String
      value: HeaderStyle
    - name: StyleTargetType
      type: System.Type
      value: System.Windows.Controls.Primitives.DataGridColumnHeader
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Controls.DataGridColumn.#ctor
  commentId: M:System.Windows.Controls.DataGridColumn.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: DataGridColumn()
  nameWithType: DataGridColumn.DataGridColumn()
  fullName: System.Windows.Controls.DataGridColumn.DataGridColumn()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 71
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Controls.DataGridColumn\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DataGridColumn()
    content.vb: Protected Sub New
  overload: System.Windows.Controls.DataGridColumn.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Controls.DataGridColumn.ActualWidth
  commentId: P:System.Windows.Controls.DataGridColumn.ActualWidth
  id: ActualWidth
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: ActualWidth
  nameWithType: DataGridColumn.ActualWidth
  fullName: System.Windows.Controls.DataGridColumn.ActualWidth
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ActualWidth
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 89
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nActual visible width after Width, MinWidth, and MaxWidth setting at the Column level and DataGrid level\nhave been taken into account\n"
  example: []
  syntax:
    content: public double ActualWidth { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ActualWidth As Double
  overload: System.Windows.Controls.DataGridColumn.ActualWidth*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridColumn.CellStyle
  commentId: P:System.Windows.Controls.DataGridColumn.CellStyle
  id: CellStyle
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: CellStyle
  nameWithType: DataGridColumn.CellStyle
  fullName: System.Windows.Controls.DataGridColumn.CellStyle
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CellStyle
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 107
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets or sets the style that is used when rendering cells in the column.\n"
  example: []
  syntax:
    content: public Style CellStyle { get; set; }
    parameters: []
    return:
      type: System.Windows.Style
      description: "\nThe style that is used when rendering cells in the column. The default is null.\n"
    content.vb: Public Property CellStyle As Style
  overload: System.Windows.Controls.DataGridColumn.CellStyle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.CanUserReorder
  commentId: P:System.Windows.Controls.DataGridColumn.CanUserReorder
  id: CanUserReorder
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: CanUserReorder
  nameWithType: DataGridColumn.CanUserReorder
  fullName: System.Windows.Controls.DataGridColumn.CanUserReorder
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanUserReorder
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 134
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets or sets a value that indicates whether the user can change the column display position by \ndragging the column header.\n"
  example: []
  syntax:
    content: public bool CanUserReorder { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the user can drag the column header to a new position; otherwise, false. The default is the current <xref href=\"System.Windows.Controls.DataGrid.CanUserReorderColumns\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
    content.vb: Public Property CanUserReorder As Boolean
  overload: System.Windows.Controls.DataGridColumn.CanUserReorder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.CanUserResize
  commentId: P:System.Windows.Controls.DataGridColumn.CanUserResize
  id: CanUserResize
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: CanUserResize
  nameWithType: DataGridColumn.CanUserResize
  fullName: System.Windows.Controls.DataGridColumn.CanUserResize
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanUserResize
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 163
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets or sets a value that indicates whether the user can adjust the column width using the mouse.\n"
  example: []
  syntax:
    content: public bool CanUserResize { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the user can resize the column; false if the user cannot resize the column. The default is the current <xref href=\"System.Windows.Controls.DataGrid.CanUserResizeColumns\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
    content.vb: Public Property CanUserResize As Boolean
  overload: System.Windows.Controls.DataGridColumn.CanUserResize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.CanUserSort
  commentId: P:System.Windows.Controls.DataGridColumn.CanUserSort
  id: CanUserSort
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: CanUserSort
  nameWithType: DataGridColumn.CanUserSort
  fullName: System.Windows.Controls.DataGridColumn.CanUserSort
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanUserSort
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 196
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets or sets a value that indicates whether the user can sort the column by clicking the column header.\n"
  example: []
  syntax:
    content: public bool CanUserSort { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the user can sort the column; false if the user cannot sort the column. The default is the current <xref href=\"System.Windows.Controls.DataGrid.CanUserSortColumns\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
    content.vb: Public Property CanUserSort As Boolean
  overload: System.Windows.Controls.DataGridColumn.CanUserSort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.ClipboardContentBinding
  commentId: P:System.Windows.Controls.DataGridColumn.ClipboardContentBinding
  id: ClipboardContentBinding
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: ClipboardContentBinding
  nameWithType: DataGridColumn.ClipboardContentBinding
  fullName: System.Windows.Controls.DataGridColumn.ClipboardContentBinding
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClipboardContentBinding
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 232
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nThe binding that will be used to get or set cell content for the clipboard.\n"
  example: []
  syntax:
    content: public virtual Binding ClipboardContentBinding { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.Binding
    content.vb: Public Overridable Property ClipboardContentBinding As Binding
  overload: System.Windows.Controls.DataGridColumn.ClipboardContentBinding*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.Controls.DataGridColumn.DisplayIndex
  commentId: P:System.Windows.Controls.DataGridColumn.DisplayIndex
  id: DisplayIndex
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: DisplayIndex
  nameWithType: DataGridColumn.DisplayIndex
  fullName: System.Windows.Controls.DataGridColumn.DisplayIndex
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DisplayIndex
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 264
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets or sets the display position of the column relative to the other columns in the <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int DisplayIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe zero-based position of the column as it is displayed in the associated <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref>. The default is the index of the corresponding <xref href=\"System.Collections.ObjectModel.Collection%601.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.Windows.Controls.DataGrid.Columns\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
    content.vb: Public Property DisplayIndex As Integer
  overload: System.Windows.Controls.DataGridColumn.DisplayIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nWhen setting this property, the specified value is less than -1 or equal to <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.\n\n-or-\n\nWhen setting this property on a column in a <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref>, the specified value is less than zero or greater than or equal to the number of columns in the <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nWhen setting this property, the <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref> is already making <xref href=\"System.Windows.Controls.DataGridColumn.DisplayIndex\" data-throw-if-not-resolved=\"false\"></xref> adjustments. For example, this exception is thrown when you attempt to set <xref href=\"System.Windows.Controls.DataGridColumn.DisplayIndex\" data-throw-if-not-resolved=\"false\"></xref> in a <xref href=\"System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged\" data-throw-if-not-resolved=\"false\"></xref> event handler.\n\n-or-\n\nWhen setting this property, the specified value would result in a frozen column being displayed in the range of unfrozen columns, or an unfrozen column being displayed in the range of frozen columns.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.DragIndicatorStyle
  commentId: P:System.Windows.Controls.DataGridColumn.DragIndicatorStyle
  id: DragIndicatorStyle
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: DragIndicatorStyle
  nameWithType: DataGridColumn.DragIndicatorStyle
  fullName: System.Windows.Controls.DataGridColumn.DragIndicatorStyle
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragIndicatorStyle
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 321
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public Style DragIndicatorStyle { get; set; }
    parameters: []
    return:
      type: System.Windows.Style
    content.vb: Public Property DragIndicatorStyle As Style
  overload: System.Windows.Controls.DataGridColumn.DragIndicatorStyle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.HeaderStyle
  commentId: P:System.Windows.Controls.DataGridColumn.HeaderStyle
  id: HeaderStyle
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: HeaderStyle
  nameWithType: DataGridColumn.HeaderStyle
  fullName: System.Windows.Controls.DataGridColumn.HeaderStyle
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HeaderStyle
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 336
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public Style HeaderStyle { get; set; }
    parameters: []
    return:
      type: System.Windows.Style
    content.vb: Public Property HeaderStyle As Style
  overload: System.Windows.Controls.DataGridColumn.HeaderStyle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.Header
  commentId: P:System.Windows.Controls.DataGridColumn.Header
  id: Header
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: DataGridColumn.Header
  fullName: System.Windows.Controls.DataGridColumn.Header
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Header
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 356
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public object Header { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Header As Object
  overload: System.Windows.Controls.DataGridColumn.Header*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.IsAutoGenerated
  commentId: P:System.Windows.Controls.DataGridColumn.IsAutoGenerated
  id: IsAutoGenerated
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: IsAutoGenerated
  nameWithType: DataGridColumn.IsAutoGenerated
  fullName: System.Windows.Controls.DataGridColumn.IsAutoGenerated
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAutoGenerated
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 375
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public bool IsAutoGenerated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAutoGenerated As Boolean
  overload: System.Windows.Controls.DataGridColumn.IsAutoGenerated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridColumn.IsFrozen
  commentId: P:System.Windows.Controls.DataGridColumn.IsFrozen
  id: IsFrozen
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: IsFrozen
  nameWithType: DataGridColumn.IsFrozen
  fullName: System.Windows.Controls.DataGridColumn.IsFrozen
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsFrozen
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 381
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public bool IsFrozen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFrozen As Boolean
  overload: System.Windows.Controls.DataGridColumn.IsFrozen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridColumn.IsReadOnly
  commentId: P:System.Windows.Controls.DataGridColumn.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: DataGridColumn.IsReadOnly
  fullName: System.Windows.Controls.DataGridColumn.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsReadOnly
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 387
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public bool IsReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsReadOnly As Boolean
  overload: System.Windows.Controls.DataGridColumn.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.MaxWidth
  commentId: P:System.Windows.Controls.DataGridColumn.MaxWidth
  id: MaxWidth
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: MaxWidth
  nameWithType: DataGridColumn.MaxWidth
  fullName: System.Windows.Controls.DataGridColumn.MaxWidth
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MaxWidth
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 414
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public double MaxWidth { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MaxWidth As Double
  overload: System.Windows.Controls.DataGridColumn.MaxWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.MinWidth
  commentId: P:System.Windows.Controls.DataGridColumn.MinWidth
  id: MinWidth
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: MinWidth
  nameWithType: DataGridColumn.MinWidth
  fullName: System.Windows.Controls.DataGridColumn.MinWidth
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MinWidth
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 446
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public double MinWidth { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property MinWidth As Double
  overload: System.Windows.Controls.DataGridColumn.MinWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.SortMemberPath
  commentId: P:System.Windows.Controls.DataGridColumn.SortMemberPath
  id: SortMemberPath
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: SortMemberPath
  nameWithType: DataGridColumn.SortMemberPath
  fullName: System.Windows.Controls.DataGridColumn.SortMemberPath
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SortMemberPath
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 489
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nHolds the name of the member to use for sorting, if not using the default.\n"
  example: []
  syntax:
    content: public string SortMemberPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SortMemberPath As String
  overload: System.Windows.Controls.DataGridColumn.SortMemberPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.Visibility
  commentId: P:System.Windows.Controls.DataGridColumn.Visibility
  id: Visibility
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: DataGridColumn.Visibility
  fullName: System.Windows.Controls.DataGridColumn.Visibility
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Visibility
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 495
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public Visibility Visibility { get; set; }
    parameters: []
    return:
      type: System.Windows.Visibility
    content.vb: Public Property Visibility As Visibility
  overload: System.Windows.Controls.DataGridColumn.Visibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.Width
  commentId: P:System.Windows.Controls.DataGridColumn.Width
  id: Width
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: DataGridColumn.Width
  fullName: System.Windows.Controls.DataGridColumn.Width
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Width
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 525
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public DataGridLength Width { get; set; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridLength
    content.vb: Public Property Width As DataGridLength
  overload: System.Windows.Controls.DataGridColumn.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)
  commentId: M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)
  id: GetCellContent(System.Windows.Controls.DataGridRow)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: GetCellContent(DataGridRow)
  nameWithType: DataGridColumn.GetCellContent(DataGridRow)
  fullName: System.Windows.Controls.DataGridColumn.GetCellContent(System.Windows.Controls.DataGridRow)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetCellContent
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 741
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public FrameworkElement GetCellContent(DataGridRow dataGridRow)
    parameters:
    - id: dataGridRow
      type: System.Windows.Controls.DataGridRow
    return:
      type: System.Windows.FrameworkElement
    content.vb: Public Function GetCellContent(dataGridRow As DataGridRow) As FrameworkElement
  overload: System.Windows.Controls.DataGridColumn.GetCellContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)
  commentId: M:System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)
  id: GetCellContent(System.Object)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: GetCellContent(Object)
  nameWithType: DataGridColumn.GetCellContent(Object)
  fullName: System.Windows.Controls.DataGridColumn.GetCellContent(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetCellContent
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 764
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  syntax:
    content: public FrameworkElement GetCellContent(object dataItem)
    parameters:
    - id: dataItem
      type: System.Object
    return:
      type: System.Windows.FrameworkElement
    content.vb: Public Function GetCellContent(dataItem As Object) As FrameworkElement
  overload: System.Windows.Controls.DataGridColumn.GetCellContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)
  commentId: M:System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)
  id: GetColumnContainingElement(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: GetColumnContainingElement(FrameworkElement)
  nameWithType: DataGridColumn.GetColumnContainingElement(FrameworkElement)
  fullName: System.Windows.Controls.DataGridColumn.GetColumnContainingElement(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetColumnContainingElement
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 790
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns the column which contains the given element\n"
  example: []
  syntax:
    content: public static DataGridColumn GetColumnContainingElement(FrameworkElement element)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: element contained in a column
    return:
      type: System.Windows.Controls.DataGridColumn
      description: >
        Column that contains the element, or null if not found
    content.vb: Public Shared Function GetColumnContainingElement(element As FrameworkElement) As DataGridColumn
  overload: System.Windows.Controls.DataGridColumn.GetColumnContainingElement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)
  commentId: M:System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)
  id: CancelCellEdit(System.Windows.FrameworkElement,System.Object)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: CancelCellEdit(FrameworkElement, Object)
  nameWithType: DataGridColumn.CancelCellEdit(FrameworkElement, Object)
  fullName: System.Windows.Controls.DataGridColumn.CancelCellEdit(System.Windows.FrameworkElement, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CancelCellEdit
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 824
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nWhen overridden in a derived class, causes the column cell being edited to revert to the unedited value.\n"
  example: []
  syntax:
    content: protected virtual void CancelCellEdit(FrameworkElement editingElement, object uneditedValue)
    parameters:
    - id: editingElement
      type: System.Windows.FrameworkElement
      description: "\nThe element that the column displays for a cell in editing mode.\n"
    - id: uneditedValue
      type: System.Object
      description: "\nThe previous, unedited value in the cell being edited.\n"
    content.vb: Protected Overridable Sub CancelCellEdit(editingElement As FrameworkElement, uneditedValue As Object)
  overload: System.Windows.Controls.DataGridColumn.CancelCellEdit*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)
  commentId: M:System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)
  id: GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: GenerateEditingElement(DataGridCell, Object)
  nameWithType: DataGridColumn.GenerateEditingElement(DataGridCell, Object)
  fullName: System.Windows.Controls.DataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GenerateEditingElement
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 839
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nWhen overridden in a derived class, gets an editing element that is bound to the column&apos;s <xref href=\"System.Windows.Controls.DataGridBoundColumn.Binding\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
  example: []
  syntax:
    content: protected abstract FrameworkElement GenerateEditingElement(DataGridCell cell, object dataItem)
    parameters:
    - id: cell
      type: System.Windows.Controls.DataGridCell
      description: "\nThe cell that will contain the generated element.\n"
    - id: dataItem
      type: System.Object
      description: "\nThe data item represented by the row that contains the intended cell.\n"
    return:
      type: System.Windows.FrameworkElement
      description: "\nA new editing element that is bound to the column&apos;s <xref href=\"System.Windows.Controls.DataGridBoundColumn.Binding\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
    content.vb: Protected MustOverride Function GenerateEditingElement(cell As DataGridCell, dataItem As Object) As FrameworkElement
  overload: System.Windows.Controls.DataGridColumn.GenerateEditingElement*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)
  commentId: M:System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)
  id: GenerateElement(System.Windows.Controls.DataGridCell,System.Object)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: GenerateElement(DataGridCell, Object)
  nameWithType: DataGridColumn.GenerateElement(DataGridCell, Object)
  fullName: System.Windows.Controls.DataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GenerateElement
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 854
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nWhen overridden in a derived class, gets a read-only element that is bound to the column&apos;s \n<xref href=\"System.Windows.Controls.DataGridBoundColumn.Binding\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
  example: []
  syntax:
    content: protected abstract FrameworkElement GenerateElement(DataGridCell cell, object dataItem)
    parameters:
    - id: cell
      type: System.Windows.Controls.DataGridCell
      description: "\nThe cell that will contain the generated element.\n"
    - id: dataItem
      type: System.Object
      description: "\nThe data item represented by the row that contains the intended cell.\n"
    return:
      type: System.Windows.FrameworkElement
      description: "\nA new, read-only element that is bound to the column&apos;s <xref href=\"System.Windows.Controls.DataGridBoundColumn.Binding\" data-throw-if-not-resolved=\"false\"></xref> property value.\n"
    content.vb: Protected MustOverride Function GenerateElement(cell As DataGridCell, dataItem As Object) As FrameworkElement
  overload: System.Windows.Controls.DataGridColumn.GenerateElement*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)
  commentId: M:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)
  id: NotifyPropertyChanged(System.String)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: NotifyPropertyChanged(String)
  nameWithType: DataGridColumn.NotifyPropertyChanged(String)
  fullName: System.Windows.Controls.DataGridColumn.NotifyPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NotifyPropertyChanged
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 861
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCalled by a specific column type when one of its properties changed, \nand its current cells need to be updated.\n"
  example: []
  syntax:
    content: protected void NotifyPropertyChanged(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: Indicates which property changed and caused this call
    content.vb: Protected Sub NotifyPropertyChanged(propertyName As String)
  overload: System.Windows.Controls.DataGridColumn.NotifyPropertyChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)
  commentId: M:System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)
  id: PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: PrepareCellForEdit(FrameworkElement, RoutedEventArgs)
  nameWithType: DataGridColumn.PrepareCellForEdit(FrameworkElement, RoutedEventArgs)
  fullName: System.Windows.Controls.DataGridColumn.PrepareCellForEdit(System.Windows.FrameworkElement, System.Windows.RoutedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PrepareCellForEdit
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 882
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nWhen overridden in a derived class, called when a cell in the column enters editing mode.\n"
  example: []
  syntax:
    content: protected abstract object PrepareCellForEdit(FrameworkElement editingElement, RoutedEventArgs editingEventArgs)
    parameters:
    - id: editingElement
      type: System.Windows.FrameworkElement
      description: "\nThe element that the column displays for a cell in editing mode.\n"
    - id: editingEventArgs
      type: System.Windows.RoutedEventArgs
      description: "\nInformation about the user gesture that is causing a cell to enter editing mode.\n"
    return:
      type: System.Object
      description: "\nThe unedited value.\n"
    content.vb: Protected MustOverride Function PrepareCellForEdit(editingElement As FrameworkElement, editingEventArgs As RoutedEventArgs) As Object
  overload: System.Windows.Controls.DataGridColumn.PrepareCellForEdit*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)
  commentId: M:System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement,System.String)
  id: RefreshCellContent(System.Windows.FrameworkElement,System.String)
  parent: System.Windows.Controls.DataGridColumn
  langs:
  - csharp
  - vb
  name: RefreshCellContent(FrameworkElement, String)
  nameWithType: DataGridColumn.RefreshCellContent(FrameworkElement, String)
  fullName: System.Windows.Controls.DataGridColumn.RefreshCellContent(System.Windows.FrameworkElement, System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RefreshCellContent
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridColumn.cs
    startLine: 890
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCalled by the DataGrid control when a column asked for its\nelements to be refreshed, typically because one of its properties changed.\n"
  example: []
  syntax:
    content: protected virtual void RefreshCellContent(FrameworkElement element, string propertyName)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: Indicates the element that needs to be refreshed
    - id: propertyName
      type: System.String
      description: Indicates which property changed and caused this call
    content.vb: Protected Overridable Sub RefreshCellContent(element As FrameworkElement, propertyName As String)
  overload: System.Windows.Controls.DataGridColumn.RefreshCellContent*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Windows.Controls.DataGrid
  commentId: T:System.Windows.Controls.DataGrid
  parent: System.Windows.Controls
  name: DataGrid
  nameWithType: DataGrid
  fullName: System.Windows.Controls.DataGrid
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.DependencyObjectHelper
  definition: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors()
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors()
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors()
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors(DependencyObject)
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors(DependencyObject)
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.DependencyObjectHelper
  commentId: T:System.Windows.Interactivity.DependencyObjectHelper
  parent: System.Windows.Interactivity
  name: DependencyObjectHelper
  nameWithType: DependencyObjectHelper
  fullName: System.Windows.Interactivity.DependencyObjectHelper
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System.Windows.Interactivity
  commentId: N:System.Windows.Interactivity
  name: System.Windows.Interactivity
  nameWithType: System.Windows.Interactivity
  fullName: System.Windows.Interactivity
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.DataGridColumn
  commentId: T:System.Windows.Controls.DataGridColumn
  parent: System.Windows.Controls
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Windows.Controls.DataGridColumn
- uid: System.Windows.Controls.DataGridColumn.#ctor*
  commentId: Overload:System.Windows.Controls.DataGridColumn.#ctor
  name: DataGridColumn
  nameWithType: DataGridColumn.DataGridColumn
  fullName: System.Windows.Controls.DataGridColumn.DataGridColumn
- uid: System.Windows.Controls.DataGridColumn.ActualWidth*
  commentId: Overload:System.Windows.Controls.DataGridColumn.ActualWidth
  name: ActualWidth
  nameWithType: DataGridColumn.ActualWidth
  fullName: System.Windows.Controls.DataGridColumn.ActualWidth
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.DataGridColumn.CellStyle*
  commentId: Overload:System.Windows.Controls.DataGridColumn.CellStyle
  name: CellStyle
  nameWithType: DataGridColumn.CellStyle
  fullName: System.Windows.Controls.DataGridColumn.CellStyle
- uid: System.Windows.Style
  commentId: T:System.Windows.Style
  parent: System.Windows
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.Controls.DataGrid.CanUserReorderColumns
  commentId: P:System.Windows.Controls.DataGrid.CanUserReorderColumns
  isExternal: true
- uid: System.Windows.Controls.DataGridColumn.CanUserReorder*
  commentId: Overload:System.Windows.Controls.DataGridColumn.CanUserReorder
  name: CanUserReorder
  nameWithType: DataGridColumn.CanUserReorder
  fullName: System.Windows.Controls.DataGridColumn.CanUserReorder
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataGrid.CanUserResizeColumns
  commentId: P:System.Windows.Controls.DataGrid.CanUserResizeColumns
  isExternal: true
- uid: System.Windows.Controls.DataGridColumn.CanUserResize*
  commentId: Overload:System.Windows.Controls.DataGridColumn.CanUserResize
  name: CanUserResize
  nameWithType: DataGridColumn.CanUserResize
  fullName: System.Windows.Controls.DataGridColumn.CanUserResize
- uid: System.Windows.Controls.DataGrid.CanUserSortColumns
  commentId: P:System.Windows.Controls.DataGrid.CanUserSortColumns
  isExternal: true
- uid: System.Windows.Controls.DataGridColumn.CanUserSort*
  commentId: Overload:System.Windows.Controls.DataGridColumn.CanUserSort
  name: CanUserSort
  nameWithType: DataGridColumn.CanUserSort
  fullName: System.Windows.Controls.DataGridColumn.CanUserSort
- uid: System.Windows.Controls.DataGridColumn.ClipboardContentBinding*
  commentId: Overload:System.Windows.Controls.DataGridColumn.ClipboardContentBinding
  name: ClipboardContentBinding
  nameWithType: DataGridColumn.ClipboardContentBinding
  fullName: System.Windows.Controls.DataGridColumn.ClipboardContentBinding
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataGrid.Columns
  commentId: P:System.Windows.Controls.DataGrid.Columns
  isExternal: true
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
- uid: System.Windows.Controls.DataGridColumn.DisplayIndex
  commentId: P:System.Windows.Controls.DataGridColumn.DisplayIndex
  parent: System.Windows.Controls.DataGridColumn
  name: DisplayIndex
  nameWithType: DataGridColumn.DisplayIndex
  fullName: System.Windows.Controls.DataGridColumn.DisplayIndex
- uid: System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged
  commentId: E:System.Windows.Controls.DataGrid.ColumnDisplayIndexChanged
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Controls.DataGridColumn.DisplayIndex*
  commentId: Overload:System.Windows.Controls.DataGridColumn.DisplayIndex
  name: DisplayIndex
  nameWithType: DataGridColumn.DisplayIndex
  fullName: System.Windows.Controls.DataGridColumn.DisplayIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.DataGridColumn.DragIndicatorStyle*
  commentId: Overload:System.Windows.Controls.DataGridColumn.DragIndicatorStyle
  name: DragIndicatorStyle
  nameWithType: DataGridColumn.DragIndicatorStyle
  fullName: System.Windows.Controls.DataGridColumn.DragIndicatorStyle
- uid: System.Windows.Controls.DataGridColumn.HeaderStyle*
  commentId: Overload:System.Windows.Controls.DataGridColumn.HeaderStyle
  name: HeaderStyle
  nameWithType: DataGridColumn.HeaderStyle
  fullName: System.Windows.Controls.DataGridColumn.HeaderStyle
- uid: System.Windows.Controls.DataGridColumn.Header*
  commentId: Overload:System.Windows.Controls.DataGridColumn.Header
  name: Header
  nameWithType: DataGridColumn.Header
  fullName: System.Windows.Controls.DataGridColumn.Header
- uid: System.Windows.Controls.DataGridColumn.IsAutoGenerated*
  commentId: Overload:System.Windows.Controls.DataGridColumn.IsAutoGenerated
  name: IsAutoGenerated
  nameWithType: DataGridColumn.IsAutoGenerated
  fullName: System.Windows.Controls.DataGridColumn.IsAutoGenerated
- uid: System.Windows.Controls.DataGridColumn.IsFrozen*
  commentId: Overload:System.Windows.Controls.DataGridColumn.IsFrozen
  name: IsFrozen
  nameWithType: DataGridColumn.IsFrozen
  fullName: System.Windows.Controls.DataGridColumn.IsFrozen
- uid: System.Windows.Controls.DataGridColumn.IsReadOnly*
  commentId: Overload:System.Windows.Controls.DataGridColumn.IsReadOnly
  name: IsReadOnly
  nameWithType: DataGridColumn.IsReadOnly
  fullName: System.Windows.Controls.DataGridColumn.IsReadOnly
- uid: System.Windows.Controls.DataGridColumn.MaxWidth*
  commentId: Overload:System.Windows.Controls.DataGridColumn.MaxWidth
  name: MaxWidth
  nameWithType: DataGridColumn.MaxWidth
  fullName: System.Windows.Controls.DataGridColumn.MaxWidth
- uid: System.Windows.Controls.DataGridColumn.MinWidth*
  commentId: Overload:System.Windows.Controls.DataGridColumn.MinWidth
  name: MinWidth
  nameWithType: DataGridColumn.MinWidth
  fullName: System.Windows.Controls.DataGridColumn.MinWidth
- uid: System.Windows.Controls.DataGridColumn.SortMemberPath*
  commentId: Overload:System.Windows.Controls.DataGridColumn.SortMemberPath
  name: SortMemberPath
  nameWithType: DataGridColumn.SortMemberPath
  fullName: System.Windows.Controls.DataGridColumn.SortMemberPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.DataGridColumn.Visibility*
  commentId: Overload:System.Windows.Controls.DataGridColumn.Visibility
  name: Visibility
  nameWithType: DataGridColumn.Visibility
  fullName: System.Windows.Controls.DataGridColumn.Visibility
- uid: System.Windows.Visibility
  commentId: T:System.Windows.Visibility
  parent: System.Windows
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: System.Windows.Controls.DataGridColumn.Width*
  commentId: Overload:System.Windows.Controls.DataGridColumn.Width
  name: Width
  nameWithType: DataGridColumn.Width
  fullName: System.Windows.Controls.DataGridColumn.Width
- uid: System.Windows.Controls.DataGridLength
  commentId: T:System.Windows.Controls.DataGridLength
  parent: System.Windows.Controls
  name: DataGridLength
  nameWithType: DataGridLength
  fullName: System.Windows.Controls.DataGridLength
- uid: System.Windows.Controls.DataGridColumn.GetCellContent*
  commentId: Overload:System.Windows.Controls.DataGridColumn.GetCellContent
  name: GetCellContent
  nameWithType: DataGridColumn.GetCellContent
  fullName: System.Windows.Controls.DataGridColumn.GetCellContent
- uid: System.Windows.Controls.DataGridRow
  commentId: T:System.Windows.Controls.DataGridRow
  parent: System.Windows.Controls
  name: DataGridRow
  nameWithType: DataGridRow
  fullName: System.Windows.Controls.DataGridRow
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.DataGridColumn.GetColumnContainingElement*
  commentId: Overload:System.Windows.Controls.DataGridColumn.GetColumnContainingElement
  name: GetColumnContainingElement
  nameWithType: DataGridColumn.GetColumnContainingElement
  fullName: System.Windows.Controls.DataGridColumn.GetColumnContainingElement
- uid: System.Windows.Controls.DataGridColumn.CancelCellEdit*
  commentId: Overload:System.Windows.Controls.DataGridColumn.CancelCellEdit
  name: CancelCellEdit
  nameWithType: DataGridColumn.CancelCellEdit
  fullName: System.Windows.Controls.DataGridColumn.CancelCellEdit
- uid: System.Windows.Controls.DataGridBoundColumn.Binding
  commentId: P:System.Windows.Controls.DataGridBoundColumn.Binding
  parent: System.Windows.Controls.DataGridBoundColumn
  name: Binding
  nameWithType: DataGridBoundColumn.Binding
  fullName: System.Windows.Controls.DataGridBoundColumn.Binding
- uid: System.Windows.Controls.DataGridColumn.GenerateEditingElement*
  commentId: Overload:System.Windows.Controls.DataGridColumn.GenerateEditingElement
  name: GenerateEditingElement
  nameWithType: DataGridColumn.GenerateEditingElement
  fullName: System.Windows.Controls.DataGridColumn.GenerateEditingElement
- uid: System.Windows.Controls.DataGridCell
  commentId: T:System.Windows.Controls.DataGridCell
  parent: System.Windows.Controls
  name: DataGridCell
  nameWithType: DataGridCell
  fullName: System.Windows.Controls.DataGridCell
- uid: System.Windows.Controls.DataGridBoundColumn
  commentId: T:System.Windows.Controls.DataGridBoundColumn
  parent: System.Windows.Controls
  name: DataGridBoundColumn
  nameWithType: DataGridBoundColumn
  fullName: System.Windows.Controls.DataGridBoundColumn
- uid: System.Windows.Controls.DataGridColumn.GenerateElement*
  commentId: Overload:System.Windows.Controls.DataGridColumn.GenerateElement
  name: GenerateElement
  nameWithType: DataGridColumn.GenerateElement
  fullName: System.Windows.Controls.DataGridColumn.GenerateElement
- uid: System.Windows.Controls.DataGridColumn.NotifyPropertyChanged*
  commentId: Overload:System.Windows.Controls.DataGridColumn.NotifyPropertyChanged
  name: NotifyPropertyChanged
  nameWithType: DataGridColumn.NotifyPropertyChanged
  fullName: System.Windows.Controls.DataGridColumn.NotifyPropertyChanged
- uid: System.Windows.Controls.DataGridColumn.PrepareCellForEdit*
  commentId: Overload:System.Windows.Controls.DataGridColumn.PrepareCellForEdit
  name: PrepareCellForEdit
  nameWithType: DataGridColumn.PrepareCellForEdit
  fullName: System.Windows.Controls.DataGridColumn.PrepareCellForEdit
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.Controls.DataGridColumn.RefreshCellContent*
  commentId: Overload:System.Windows.Controls.DataGridColumn.RefreshCellContent
  name: RefreshCellContent
  nameWithType: DataGridColumn.RefreshCellContent
  fullName: System.Windows.Controls.DataGridColumn.RefreshCellContent
