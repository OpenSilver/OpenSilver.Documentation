### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IMultipleViewProvider
  commentId: T:System.Windows.Automation.Provider.IMultipleViewProvider
  id: IMultipleViewProvider
  parent: System.Windows.Automation.Provider
  children:
  - System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
  - System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews
  - System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)
  - System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)
  langs:
  - csharp
  - vb
  name: IMultipleViewProvider
  nameWithType: IMultipleViewProvider
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IMultipleViewProvider
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nExposes methods and properties to support UI automation client access to controls \nthat provide, and are able to switch between, multiple representations of the same \nset of information or child controls.\n"
  example: []
  syntax:
    content: public interface IMultipleViewProvider
    content.vb: Public Interface IMultipleViewProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
  commentId: P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
  id: CurrentView
  parent: System.Windows.Automation.Provider.IMultipleViewProvider
  langs:
  - csharp
  - vb
  name: CurrentView
  nameWithType: IMultipleViewProvider.CurrentView
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CurrentView
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the current control-specific view.\n"
  example: []
  syntax:
    content: int CurrentView { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe value for the current view of the UI automation element.\n"
    content.vb: ReadOnly Property CurrentView As Integer
  overload: System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews
  commentId: M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews
  id: GetSupportedViews
  parent: System.Windows.Automation.Provider.IMultipleViewProvider
  langs:
  - csharp
  - vb
  name: GetSupportedViews()
  nameWithType: IMultipleViewProvider.GetSupportedViews()
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSupportedViews
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nRetrieves a collection of control-specific view identifiers.\n"
  example: []
  syntax:
    content: int[] GetSupportedViews()
    return:
      type: System.Int32[]
      description: "\nA collection of values that identifies the views available for a UI \nautomation element.\n"
    content.vb: Function GetSupportedViews As Integer()
  overload: System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews*
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)
  commentId: M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)
  id: GetViewName(System.Int32)
  parent: System.Windows.Automation.Provider.IMultipleViewProvider
  langs:
  - csharp
  - vb
  name: GetViewName(Int32)
  nameWithType: IMultipleViewProvider.GetViewName(Int32)
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetViewName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nRetrieves the name of a control-specific view.\n"
  example: []
  syntax:
    content: string GetViewName(int viewId)
    parameters:
    - id: viewId
      type: System.Int32
      description: "\nThe view identifier.\n"
    return:
      type: System.String
      description: "\nA localized name for the view.\n"
    content.vb: Function GetViewName(viewId As Integer) As String
  overload: System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName*
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)
  commentId: M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)
  id: SetCurrentView(System.Int32)
  parent: System.Windows.Automation.Provider.IMultipleViewProvider
  langs:
  - csharp
  - vb
  name: SetCurrentView(Int32)
  nameWithType: IMultipleViewProvider.SetCurrentView(Int32)
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetCurrentView
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IMultipleViewProvider.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nSets the current control-specific view.\n"
  example: []
  syntax:
    content: void SetCurrentView(int viewId)
    parameters:
    - id: viewId
      type: System.Int32
      description: "\nA view identifier.\n"
    content.vb: Sub SetCurrentView(viewId As Integer)
  overload: System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView*
references:
- uid: System.Windows.Automation.Provider
  commentId: N:System.Windows.Automation.Provider
  name: System.Windows.Automation.Provider
  nameWithType: System.Windows.Automation.Provider
  fullName: System.Windows.Automation.Provider
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView*
  commentId: Overload:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
  name: CurrentView
  nameWithType: IMultipleViewProvider.CurrentView
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews*
  commentId: Overload:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews
  name: GetSupportedViews
  nameWithType: IMultipleViewProvider.GetSupportedViews
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName*
  commentId: Overload:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName
  name: GetViewName
  nameWithType: IMultipleViewProvider.GetViewName
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView*
  commentId: Overload:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView
  name: SetCurrentView
  nameWithType: IMultipleViewProvider.SetCurrentView
  fullName: System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView
