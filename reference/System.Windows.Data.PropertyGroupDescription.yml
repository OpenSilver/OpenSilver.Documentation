### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.PropertyGroupDescription
  commentId: T:System.Windows.Data.PropertyGroupDescription
  id: PropertyGroupDescription
  parent: System.Windows.Data
  children:
  - System.Windows.Data.PropertyGroupDescription.#ctor
  - System.Windows.Data.PropertyGroupDescription.#ctor(System.String)
  - System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)
  - System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)
  - System.Windows.Data.PropertyGroupDescription.Converter
  - System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  - System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)
  - System.Windows.Data.PropertyGroupDescription.PropertyName
  - System.Windows.Data.PropertyGroupDescription.StringComparison
  langs:
  - csharp
  - vb
  name: PropertyGroupDescription
  nameWithType: PropertyGroupDescription
  fullName: System.Windows.Data.PropertyGroupDescription
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PropertyGroupDescription
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nDescribes the grouping of items by using a property name as the criteria.\n"
  example: []
  syntax:
    content: 'public class PropertyGroupDescription : GroupDescription, INotifyPropertyChanged'
    content.vb: >-
      Public Class PropertyGroupDescription
          Inherits GroupDescription
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - System.ComponentModel.GroupDescription
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  - System.ComponentModel.GroupDescription.PropertyChanged
  - System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.ComponentModel.GroupDescription.GroupNames
  - System.ComponentModel.GroupDescription.SortDescriptions
  - System.ComponentModel.GroupDescription.CustomSort
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Data.PropertyGroupDescription.#ctor
  commentId: M:System.Windows.Data.PropertyGroupDescription.#ctor
  id: '#ctor'
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: PropertyGroupDescription()
  nameWithType: PropertyGroupDescription.PropertyGroupDescription()
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyGroupDescription()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 43
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.PropertyGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PropertyGroupDescription()
    content.vb: Public Sub New
  overload: System.Windows.Data.PropertyGroupDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.#ctor(System.String)
  commentId: M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: PropertyGroupDescription(String)
  nameWithType: PropertyGroupDescription.PropertyGroupDescription(String)
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyGroupDescription(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.PropertyGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> class with the specified \nproperty name.\n"
  example: []
  syntax:
    content: public PropertyGroupDescription(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: "\nThe name of the property that specifies which group an item belongs to.\n"
    content.vb: Public Sub New(propertyName As String)
  overload: System.Windows.Data.PropertyGroupDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)
  commentId: M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)
  id: '#ctor(System.String,System.Windows.Data.IValueConverter)'
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: PropertyGroupDescription(String, IValueConverter)
  nameWithType: PropertyGroupDescription.PropertyGroupDescription(String, IValueConverter)
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyGroupDescription(System.String, System.Windows.Data.IValueConverter)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.PropertyGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> class with the specified \nproperty name and converter.\n"
  example: []
  syntax:
    content: public PropertyGroupDescription(string propertyName, IValueConverter converter)
    parameters:
    - id: propertyName
      type: System.String
      description: "\nThe name of the property that specifies which group an item belongs to. If this parameter is null,\nthe item itself is passed to the value converter.\n"
    - id: converter
      type: System.Windows.Data.IValueConverter
      description: "\nAn <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> object to apply to the property value or the item to produce the \nfinal value that is used to determine which group(s) an item belongs to. The converter may return \na collection, which indicates that the items can appear in more than one group.\n"
    content.vb: Public Sub New(propertyName As String, converter As IValueConverter)
  overload: System.Windows.Data.PropertyGroupDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)
  commentId: M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)
  id: '#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)'
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: PropertyGroupDescription(String, IValueConverter, StringComparison)
  nameWithType: PropertyGroupDescription.PropertyGroupDescription(String, IValueConverter, StringComparison)
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyGroupDescription(System.String, System.Windows.Data.IValueConverter, System.StringComparison)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 97
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.PropertyGroupDescription\" data-throw-if-not-resolved=\"false\"></xref> class with the specified \nproperty name, converter, and string comparison.\n"
  example: []
  syntax:
    content: public PropertyGroupDescription(string propertyName, IValueConverter converter, StringComparison stringComparison)
    parameters:
    - id: propertyName
      type: System.String
      description: "\nThe name of the property that specifies which group an item belongs to. If this parameter is null, \nthe item itself is passed to the value converter.\n"
    - id: converter
      type: System.Windows.Data.IValueConverter
      description: "\nAn <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> object to apply to the property value or the item to produce the \nfinal value that is used to determine which group(s) an item belongs to. The converter may return \na collection, which indicates that the items can appear in more than one group.\n"
    - id: stringComparison
      type: System.StringComparison
      description: "\nA <xref href=\"System.Windows.Data.PropertyGroupDescription.StringComparison\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the comparison between the value of an item \nand the name of a group.\n"
    content.vb: Public Sub New(propertyName As String, converter As IValueConverter, stringComparison As StringComparison)
  overload: System.Windows.Data.PropertyGroupDescription.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.Converter
  commentId: P:System.Windows.Data.PropertyGroupDescription.Converter
  id: Converter
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: Converter
  nameWithType: PropertyGroupDescription.Converter
  fullName: System.Windows.Data.PropertyGroupDescription.Converter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Converter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 110
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a converter to apply to the property value or the item to produce the final value that \nis used to determine which group(s) an item belongs to.\n"
  example: []
  syntax:
    content: public IValueConverter Converter { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.IValueConverter
      description: "\nThe converter to apply. The default is null.\n"
    content.vb: Public Property Converter As IValueConverter
  overload: System.Windows.Data.PropertyGroupDescription.Converter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.PropertyName
  commentId: P:System.Windows.Data.PropertyGroupDescription.PropertyName
  id: PropertyName
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: PropertyName
  nameWithType: PropertyGroupDescription.PropertyName
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyName
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PropertyName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 131
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the name of the property that is used to determine which group(s) an item belongs to.\n"
  example: []
  syntax:
    content: public string PropertyName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the property that is used to determine which group(s) an item belongs to. The default \nis null.\n"
    content.vb: Public Property PropertyName As String
  overload: System.Windows.Data.PropertyGroupDescription.PropertyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.StringComparison
  commentId: P:System.Windows.Data.PropertyGroupDescription.StringComparison
  id: StringComparison
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: StringComparison
  nameWithType: PropertyGroupDescription.StringComparison
  fullName: System.Windows.Data.PropertyGroupDescription.StringComparison
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StringComparison
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 155
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a <xref href=\"System.StringComparison\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the comparison between \nthe value of an item (as determined by <xref href=\"System.Windows.Data.PropertyGroupDescription.PropertyName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Data.PropertyGroupDescription.Converter\" data-throw-if-not-resolved=\"false\"></xref>) \nand the name of a group.\n"
  example: []
  syntax:
    content: public StringComparison StringComparison { get; set; }
    parameters: []
    return:
      type: System.StringComparison
      description: "\nAn enumeration value that specifies the comparison between the value of an item and the name of \na group. The default is <xref href=\"System.StringComparison.Ordinal\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property StringComparison As StringComparison
  overload: System.Windows.Data.PropertyGroupDescription.StringComparison*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  id: GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: GroupNameFromItem(Object, Int32, CultureInfo)
  nameWithType: PropertyGroupDescription.GroupNameFromItem(Object, Int32, CultureInfo)
  fullName: System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object, System.Int32, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GroupNameFromItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 184
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nReturns the group name(s) for the specified item.\n"
  example: []
  syntax:
    content: public override object GroupNameFromItem(object item, int level, CultureInfo culture)
    parameters:
    - id: item
      type: System.Object
      description: "\nThe item to return group names for.\n"
    - id: level
      type: System.Int32
      description: "\nThe level of grouping.\n"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "\nThe <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> to supply to the converter.\n"
    return:
      type: System.Object
      description: "\nThe group name(s) for the specified item.\n"
    content.vb: Public Overrides Function GroupNameFromItem(item As Object, level As Integer, culture As CultureInfo) As Object
  overridden: System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  overload: System.Windows.Data.PropertyGroupDescription.GroupNameFromItem*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)
  commentId: M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)
  id: NamesMatch(System.Object,System.Object)
  parent: System.Windows.Data.PropertyGroupDescription
  langs:
  - csharp
  - vb
  name: NamesMatch(Object, Object)
  nameWithType: PropertyGroupDescription.NamesMatch(Object, Object)
  fullName: System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NamesMatch
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/PropertyGroupDescription.cs
    startLine: 222
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nReturns a value that indicates whether the group name and the item name match, which indicates \nthat the item belongs to the group.\n"
  example: []
  syntax:
    content: public override bool NamesMatch(object groupName, object itemName)
    parameters:
    - id: groupName
      type: System.Object
      description: "\nThe name of the group to check.\n"
    - id: itemName
      type: System.Object
      description: "\nThe name of the item to check.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the names match, which indicates that the item belongs to the group; otherwise, false.\n"
    content.vb: Public Overrides Function NamesMatch(groupName As Object, itemName As Object) As Boolean
  overridden: System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)
  overload: System.Windows.Data.PropertyGroupDescription.NamesMatch*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.GroupDescription
  commentId: T:System.ComponentModel.GroupDescription
  parent: System.ComponentModel
  name: GroupDescription
  nameWithType: GroupDescription
  fullName: System.ComponentModel.GroupDescription
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  parent: System.ComponentModel.GroupDescription
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: GroupDescription.INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.GroupDescription.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: GroupDescription.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.GroupDescription.PropertyChanged
  commentId: E:System.ComponentModel.GroupDescription.PropertyChanged
  parent: System.ComponentModel.GroupDescription
  name: PropertyChanged
  nameWithType: GroupDescription.PropertyChanged
  fullName: System.ComponentModel.GroupDescription.PropertyChanged
- uid: System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.ComponentModel.GroupDescription
  isExternal: true
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: GroupDescription.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  spec.csharp:
  - uid: System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: GroupDescription.OnPropertyChanged
    fullName: System.ComponentModel.GroupDescription.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: GroupDescription.OnPropertyChanged
    fullName: System.ComponentModel.GroupDescription.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.GroupDescription.GroupNames
  commentId: P:System.ComponentModel.GroupDescription.GroupNames
  parent: System.ComponentModel.GroupDescription
  name: GroupNames
  nameWithType: GroupDescription.GroupNames
  fullName: System.ComponentModel.GroupDescription.GroupNames
- uid: System.ComponentModel.GroupDescription.SortDescriptions
  commentId: P:System.ComponentModel.GroupDescription.SortDescriptions
  parent: System.ComponentModel.GroupDescription
  name: SortDescriptions
  nameWithType: GroupDescription.SortDescriptions
  fullName: System.ComponentModel.GroupDescription.SortDescriptions
- uid: System.ComponentModel.GroupDescription.CustomSort
  commentId: P:System.ComponentModel.GroupDescription.CustomSort
  parent: System.ComponentModel.GroupDescription
  name: CustomSort
  nameWithType: GroupDescription.CustomSort
  fullName: System.ComponentModel.GroupDescription.CustomSort
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Windows.Data.PropertyGroupDescription
  commentId: T:System.Windows.Data.PropertyGroupDescription
  name: PropertyGroupDescription
  nameWithType: PropertyGroupDescription
  fullName: System.Windows.Data.PropertyGroupDescription
- uid: System.Windows.Data.PropertyGroupDescription.#ctor*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.#ctor
  name: PropertyGroupDescription
  nameWithType: PropertyGroupDescription.PropertyGroupDescription
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyGroupDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.PropertyGroupDescription.StringComparison
  commentId: P:System.Windows.Data.PropertyGroupDescription.StringComparison
  isExternal: true
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Windows.Data.PropertyGroupDescription.Converter*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.Converter
  name: Converter
  nameWithType: PropertyGroupDescription.Converter
  fullName: System.Windows.Data.PropertyGroupDescription.Converter
- uid: System.Windows.Data.PropertyGroupDescription.PropertyName*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.PropertyName
  name: PropertyName
  nameWithType: PropertyGroupDescription.PropertyName
  fullName: System.Windows.Data.PropertyGroupDescription.PropertyName
- uid: System.Windows.Data.PropertyGroupDescription.PropertyName
  commentId: P:System.Windows.Data.PropertyGroupDescription.PropertyName
  isExternal: true
- uid: System.Windows.Data.PropertyGroupDescription.Converter
  commentId: P:System.Windows.Data.PropertyGroupDescription.Converter
  isExternal: true
- uid: System.StringComparison.Ordinal
  commentId: F:System.StringComparison.Ordinal
  isExternal: true
- uid: System.Windows.Data.PropertyGroupDescription.StringComparison*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.StringComparison
  name: StringComparison
  nameWithType: PropertyGroupDescription.StringComparison
  fullName: System.Windows.Data.PropertyGroupDescription.StringComparison
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  commentId: M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
  parent: System.ComponentModel.GroupDescription
  isExternal: true
  name: GroupNameFromItem(Object, Int32, CultureInfo)
  nameWithType: GroupDescription.GroupNameFromItem(Object, Int32, CultureInfo)
  fullName: System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object, System.Int32, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
    name: GroupNameFromItem
    nameWithType: GroupDescription.GroupNameFromItem
    fullName: System.ComponentModel.GroupDescription.GroupNameFromItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)
    name: GroupNameFromItem
    nameWithType: GroupDescription.GroupNameFromItem
    fullName: System.ComponentModel.GroupDescription.GroupNameFromItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.PropertyGroupDescription.GroupNameFromItem*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem
  name: GroupNameFromItem
  nameWithType: PropertyGroupDescription.GroupNameFromItem
  fullName: System.Windows.Data.PropertyGroupDescription.GroupNameFromItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)
  commentId: M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)
  parent: System.ComponentModel.GroupDescription
  isExternal: true
  name: NamesMatch(Object, Object)
  nameWithType: GroupDescription.NamesMatch(Object, Object)
  fullName: System.ComponentModel.GroupDescription.NamesMatch(System.Object, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)
    name: NamesMatch
    nameWithType: GroupDescription.NamesMatch
    fullName: System.ComponentModel.GroupDescription.NamesMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)
    name: NamesMatch
    nameWithType: GroupDescription.NamesMatch
    fullName: System.ComponentModel.GroupDescription.NamesMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.PropertyGroupDescription.NamesMatch*
  commentId: Overload:System.Windows.Data.PropertyGroupDescription.NamesMatch
  name: NamesMatch
  nameWithType: PropertyGroupDescription.NamesMatch
  fullName: System.Windows.Data.PropertyGroupDescription.NamesMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
