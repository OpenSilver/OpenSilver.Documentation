### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding
  commentId: T:System.ServiceModel.Channels.PollingDuplexHttpBinding
  id: PollingDuplexHttpBinding
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.Channels.PollingDuplexMode)
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode)
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode,System.ServiceModel.Channels.PollingDuplexMode)
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
  - System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
  langs:
  - csharp
  - vb
  name: PollingDuplexHttpBinding
  nameWithType: PollingDuplexHttpBinding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PollingDuplexHttpBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nRepresents a binding that a Silverlight 5 client can use to configure endpoints\nthat can communicate with Windows Communication Foundation (WCF) services that\nare similarly configured for duplex communication with a polling client.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public class PollingDuplexHttpBinding : Binding, IDefaultCommunicationTimeouts
    content.vb: >-
      <NotImplemented>

      Public Class PollingDuplexHttpBinding
          Inherits Binding
          Implements IDefaultCommunicationTimeouts
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts
  inheritedMembers:
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CloseTimeout
  - System.ServiceModel.Channels.Binding.MessageVersion
  - System.ServiceModel.Channels.Binding.Name
  - System.ServiceModel.Channels.Binding.Namespace
  - System.ServiceModel.Channels.Binding.OpenTimeout
  - System.ServiceModel.Channels.Binding.ReceiveTimeout
  - System.ServiceModel.Channels.Binding.SendTimeout
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor
  commentId: M:System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: PollingDuplexHttpBinding()
  nameWithType: PollingDuplexHttpBinding.PollingDuplexHttpBinding()
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.PollingDuplexHttpBinding()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nInitializes a new instance of the <xref href=\"System.ServiceModel.Channels.PollingDuplexHttpBinding\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexHttpBinding()
    content.vb: >-
      <NotImplemented>

      Public Sub New
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode)
  commentId: M:System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode)
  id: '#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode)'
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode)
  nameWithType: PollingDuplexHttpBinding.PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode)
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.PollingDuplexHttpBinding(System.ServiceModel.PollingDuplexHttpSecurityMode)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nInitializes a new instance of the <xref href=\"System.ServiceModel.Channels.PollingDuplexHttpBinding\" data-throw-if-not-resolved=\"false\"></xref>\nclass with a specified type of security used by the binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode securityMode)
    parameters:
    - id: securityMode
      type: System.ServiceModel.PollingDuplexHttpSecurityMode
      description: "\nThe value of <xref href=\"System.ServiceModel.PollingDuplexHttpSecurityMode\" data-throw-if-not-resolved=\"false\"></xref> that specifies\nthe type of security that is used with the SOAP message and for the client.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub New(securityMode As PollingDuplexHttpSecurityMode)
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.Channels.PollingDuplexMode)
  commentId: M:System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.Channels.PollingDuplexMode)
  id: '#ctor(System.ServiceModel.Channels.PollingDuplexMode)'
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: PollingDuplexHttpBinding(PollingDuplexMode)
  nameWithType: PollingDuplexHttpBinding.PollingDuplexHttpBinding(PollingDuplexMode)
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.PollingDuplexHttpBinding(System.ServiceModel.Channels.PollingDuplexMode)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nInitializes a new instance of the System.ServiceModel.PollingDuplexHttpBinding\nclass with a specified mode of behavior on the server in response to client polling.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexHttpBinding(PollingDuplexMode duplexMode)
    parameters:
    - id: duplexMode
      type: System.ServiceModel.Channels.PollingDuplexMode
      description: "\nThe mode of behavior exhibited on a server in response to client polling when\nthe communication between them is configured for duplex polling.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub New(duplexMode As PollingDuplexMode)
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode,System.ServiceModel.Channels.PollingDuplexMode)
  commentId: M:System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode,System.ServiceModel.Channels.PollingDuplexMode)
  id: '#ctor(System.ServiceModel.PollingDuplexHttpSecurityMode,System.ServiceModel.Channels.PollingDuplexMode)'
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode, PollingDuplexMode)
  nameWithType: PollingDuplexHttpBinding.PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode, PollingDuplexMode)
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.PollingDuplexHttpBinding(System.ServiceModel.PollingDuplexHttpSecurityMode, System.ServiceModel.Channels.PollingDuplexMode)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nInitializes a new instance of the <xref href=\"System.ServiceModel.Channels.PollingDuplexHttpBinding\" data-throw-if-not-resolved=\"false\"></xref>\nclass with a specified type of security and a specified mode of behavior on the\nserver in the way it responses to client polling.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexHttpBinding(PollingDuplexHttpSecurityMode securityMode, PollingDuplexMode duplexMode)
    parameters:
    - id: securityMode
      type: System.ServiceModel.PollingDuplexHttpSecurityMode
      description: "\nThe value of <xref href=\"System.ServiceModel.PollingDuplexHttpSecurityMode\" data-throw-if-not-resolved=\"false\"></xref> that specifies\nthe type of security that is used with the SOAP message and for the client.\n"
    - id: duplexMode
      type: System.ServiceModel.Channels.PollingDuplexMode
      description: "\nThe mode of behavior exhibited on a server in response to client polling when\nthe communication between them is configured for duplex polling.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub New(securityMode As PollingDuplexHttpSecurityMode, duplexMode As PollingDuplexMode)
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
  id: DuplexMode
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: DuplexMode
  nameWithType: PollingDuplexHttpBinding.DuplexMode
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DuplexMode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 78
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets a value that specifies how the server behaves in response to client\npolling when the communication is configured for duplex polling.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexMode DuplexMode { get; set; }
    parameters: []
    return:
      type: System.ServiceModel.Channels.PollingDuplexMode
      description: "\nA <xref href=\"System.ServiceModel.Channels.PollingDuplexMode\" data-throw-if-not-resolved=\"false\"></xref> object whose value indicates how the server \nbehaves in response to client polling when the communication is configured for \nduplex. The default value is <xref href=\"System.ServiceModel.Channels.PollingDuplexMode.SingleMessagePerPoll\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: >-
      <NotImplemented>

      Public Property DuplexMode As PollingDuplexMode
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: EnvelopeVersion
  nameWithType: PollingDuplexHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnvelopeVersion
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets the version of SOAP that is used for messages that are processed by this binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public EnvelopeVersion EnvelopeVersion { get; }
    parameters: []
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "\nThe value of the <xref href=\"System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion\" data-throw-if-not-resolved=\"false\"></xref> that is used with this binding.\nThe value is always SOAP 1.2.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property EnvelopeVersion As EnvelopeVersion
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: InactivityTimeout
  nameWithType: PollingDuplexHttpBinding.InactivityTimeout
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InactivityTimeout
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 103
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets the maximum interval of time that can pass without activity on a\nchannel before the client or server channel enters a faulted state. The default\nvalue is 10 minutes.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public TimeSpan InactivityTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nThe System.TimeSpan value that specifies the maximum interval of time that can\npass without activity on a channel before the channel enters a faulted state.\n"
    content.vb: >-
      <NotImplemented>

      Public Property InactivityTimeout As TimeSpan
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value is less than zero, or it is larger than the maximum time allowed.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  nameWithType: PollingDuplexHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MaxBufferSize
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets the maximum size for a buffer that receives messages from the channel.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public int MaxBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe maximum size, in bytes, of a buffer that stores messages while they are processed\nfor an endpoint configured with this binding. The default value is 65,536 bytes.\n"
    content.vb: >-
      <NotImplemented>

      Public Property MaxBufferSize As Integer
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  nameWithType: PollingDuplexHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MaxReceivedMessageSize
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 127
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets the maximum size for a message that can be received on a channel\nconfigured with this binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public long MaxReceivedMessageSize { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <NotImplemented>

      Public Property MaxReceivedMessageSize As Long
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe value is less than zero.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: PollingDuplexHttpBinding.Scheme
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Scheme
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 140
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets the URI transport scheme for the channels and listeners that are configured\nwith this binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public override string Scheme { get; }
    parameters: []
    return:
      type: System.String
      description: "\n&quot;https&quot; if the security mode in the transport binding element is set to \n<xref href=\"System.ServiceModel.BasicHttpSecurityMode.Transport\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials\" data-throw-if-not-resolved=\"false\"></xref>; \notherwise, &quot;http&quot;.\n"
    content.vb: >-
      <NotImplemented>

      Public Overrides ReadOnly Property Scheme As String
  overridden: System.ServiceModel.Channels.Binding.Scheme
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
  id: Security
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: Security
  nameWithType: PollingDuplexHttpBinding.Security
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Security
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 150
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets the type of security used with this binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public PollingDuplexHttpSecurity Security { get; }
    parameters: []
    return:
      type: System.ServiceModel.PollingDuplexHttpSecurity
      description: "\nThe <xref href=\"System.ServiceModel.PollingDuplexHttpSecurity\" data-throw-if-not-resolved=\"false\"></xref> that is used with this binding.\nThe default value is <xref href=\"System.ServiceModel.BasicHttpSecurityMode.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property Security As PollingDuplexHttpSecurity
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.Security*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: TextEncoding
  nameWithType: PollingDuplexHttpBinding.TextEncoding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TextEncoding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 160
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets the character encoding that is used for the message text.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public Encoding TextEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\nThe <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> that indicates the character encoding that is used.\nThe default is <xref href=\"System.Text.UTF8Encoding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: >-
      <NotImplemented>

      Public Property TextEncoding As Encoding
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
  id: UseTextEncoding
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: UseTextEncoding
  nameWithType: PollingDuplexHttpBinding.UseTextEncoding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UseTextEncoding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 170
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nGets or sets a value that indicates whether text or binary encoding is used for\nthe message.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool UseTextEncoding { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if text encoding is used; false if binary encoding is used.\n"
    content.vb: >-
      <NotImplemented>

      Public Property UseTextEncoding As Boolean
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements
  commentId: M:System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.Channels.PollingDuplexHttpBinding
  langs:
  - csharp
  - vb
  name: CreateBindingElements()
  nameWithType: PollingDuplexHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateBindingElements
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ServiceModel.Channels/WORKINPROGRESS/PollingDuplexHttpBinding.cs
    startLine: 180
  assemblies:
  - OpenSilver
  namespace: System.ServiceModel.Channels
  summary: "\nReturns an ordered collection of binding elements contained in the current binding.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public override BindingElementCollection CreateBindingElements()
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "\nThe <xref href=\"System.ServiceModel.Channels.BindingElementCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the ordered stack of \nbinding elements described by the <xref href=\"System.ServiceModel.Channels.PollingDuplexHttpBinding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: >-
      <NotImplemented>

      Public Overrides Function CreateBindingElements As BindingElementCollection
  overridden: System.ServiceModel.Channels.Binding.CreateBindingElements
  overload: System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  commentId: T:System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: BuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])
  fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>(System.Object[])
  nameWithType.vb: Binding.BuildChannelFactory(Of TChannel)(Object())
  fullName.vb: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)(System.Object())
  name.vb: BuildChannelFactory(Of TChannel)(Object())
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
    name: BuildChannelFactory<TChannel>
    nameWithType: Binding.BuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
    name: BuildChannelFactory(Of TChannel)
    nameWithType: Binding.BuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: BuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingParameterCollection)
  nameWithType.vb: Binding.BuildChannelFactory(Of TChannel)(BindingParameterCollection)
  fullName.vb: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: BuildChannelFactory(Of TChannel)(BindingParameterCollection)
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: BuildChannelFactory<TChannel>
    nameWithType: Binding.BuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: BuildChannelFactory(Of TChannel)
    nameWithType: Binding.BuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: CanBuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])
  fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>(System.Object[])
  nameWithType.vb: Binding.CanBuildChannelFactory(Of TChannel)(Object())
  fullName.vb: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)(System.Object())
  name.vb: CanBuildChannelFactory(Of TChannel)(Object())
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
    name: CanBuildChannelFactory<TChannel>
    nameWithType: Binding.CanBuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
    name: CanBuildChannelFactory(Of TChannel)
    nameWithType: Binding.CanBuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingParameterCollection)
  nameWithType.vb: Binding.CanBuildChannelFactory(Of TChannel)(BindingParameterCollection)
  fullName.vb: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingParameterCollection)
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: CanBuildChannelFactory<TChannel>
    nameWithType: Binding.CanBuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: CanBuildChannelFactory(Of TChannel)
    nameWithType: Binding.CanBuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: GetProperty<T>(BindingParameterCollection)
  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.GetProperty<T>(System.ServiceModel.Channels.BindingParameterCollection)
  nameWithType.vb: Binding.GetProperty(Of T)(BindingParameterCollection)
  fullName.vb: System.ServiceModel.Channels.Binding.GetProperty(Of T)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: GetProperty(Of T)(BindingParameterCollection)
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: GetProperty<T>
    nameWithType: Binding.GetProperty<T>
    fullName: System.ServiceModel.Channels.Binding.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
    name: GetProperty(Of T)
    nameWithType: Binding.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.Binding.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingParameterCollection
    name: BindingParameterCollection
    nameWithType: BindingParameterCollection
    fullName: System.ServiceModel.Channels.BindingParameterCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.Binding.CloseTimeout
  commentId: P:System.ServiceModel.Channels.Binding.CloseTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: CloseTimeout
  nameWithType: Binding.CloseTimeout
  fullName: System.ServiceModel.Channels.Binding.CloseTimeout
- uid: System.ServiceModel.Channels.Binding.MessageVersion
  commentId: P:System.ServiceModel.Channels.Binding.MessageVersion
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: MessageVersion
  nameWithType: Binding.MessageVersion
  fullName: System.ServiceModel.Channels.Binding.MessageVersion
- uid: System.ServiceModel.Channels.Binding.Name
  commentId: P:System.ServiceModel.Channels.Binding.Name
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: Name
  nameWithType: Binding.Name
  fullName: System.ServiceModel.Channels.Binding.Name
- uid: System.ServiceModel.Channels.Binding.Namespace
  commentId: P:System.ServiceModel.Channels.Binding.Namespace
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: Namespace
  nameWithType: Binding.Namespace
  fullName: System.ServiceModel.Channels.Binding.Namespace
- uid: System.ServiceModel.Channels.Binding.OpenTimeout
  commentId: P:System.ServiceModel.Channels.Binding.OpenTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: OpenTimeout
  nameWithType: Binding.OpenTimeout
  fullName: System.ServiceModel.Channels.Binding.OpenTimeout
- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout
  commentId: P:System.ServiceModel.Channels.Binding.ReceiveTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: ReceiveTimeout
  nameWithType: Binding.ReceiveTimeout
  fullName: System.ServiceModel.Channels.Binding.ReceiveTimeout
- uid: System.ServiceModel.Channels.Binding.SendTimeout
  commentId: P:System.ServiceModel.Channels.Binding.SendTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: SendTimeout
  nameWithType: Binding.SendTimeout
  fullName: System.ServiceModel.Channels.Binding.SendTimeout
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding
  commentId: T:System.ServiceModel.Channels.PollingDuplexHttpBinding
  name: PollingDuplexHttpBinding
  nameWithType: PollingDuplexHttpBinding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.#ctor
  name: PollingDuplexHttpBinding
  nameWithType: PollingDuplexHttpBinding.PollingDuplexHttpBinding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.PollingDuplexHttpBinding
- uid: System.ServiceModel.PollingDuplexHttpSecurityMode
  commentId: T:System.ServiceModel.PollingDuplexHttpSecurityMode
  parent: System.ServiceModel
  name: PollingDuplexHttpSecurityMode
  nameWithType: PollingDuplexHttpSecurityMode
  fullName: System.ServiceModel.PollingDuplexHttpSecurityMode
- uid: System.ServiceModel.Channels.PollingDuplexMode
  commentId: T:System.ServiceModel.Channels.PollingDuplexMode
  parent: System.ServiceModel.Channels
  name: PollingDuplexMode
  nameWithType: PollingDuplexMode
  fullName: System.ServiceModel.Channels.PollingDuplexMode
- uid: System.ServiceModel.Channels.PollingDuplexMode.SingleMessagePerPoll
  commentId: F:System.ServiceModel.Channels.PollingDuplexMode.SingleMessagePerPoll
  isExternal: true
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
  name: DuplexMode
  nameWithType: PollingDuplexHttpBinding.DuplexMode
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.DuplexMode
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  commentId: P:System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  isExternal: true
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
  name: EnvelopeVersion
  nameWithType: PollingDuplexHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  commentId: T:System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
  name: InactivityTimeout
  nameWithType: PollingDuplexHttpBinding.InactivityTimeout
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.InactivityTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
  name: MaxBufferSize
  nameWithType: PollingDuplexHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxBufferSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
  name: MaxReceivedMessageSize
  nameWithType: PollingDuplexHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.MaxReceivedMessageSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.BasicHttpSecurityMode.Transport
  commentId: F:System.ServiceModel.BasicHttpSecurityMode.Transport
  isExternal: true
- uid: System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials
  commentId: F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials
  isExternal: true
- uid: System.ServiceModel.Channels.Binding.Scheme
  commentId: P:System.ServiceModel.Channels.Binding.Scheme
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: Scheme
  nameWithType: Binding.Scheme
  fullName: System.ServiceModel.Channels.Binding.Scheme
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
  name: Scheme
  nameWithType: PollingDuplexHttpBinding.Scheme
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.Scheme
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.PollingDuplexHttpSecurity
  commentId: T:System.ServiceModel.PollingDuplexHttpSecurity
  parent: System.ServiceModel
  name: PollingDuplexHttpSecurity
  nameWithType: PollingDuplexHttpSecurity
  fullName: System.ServiceModel.PollingDuplexHttpSecurity
- uid: System.ServiceModel.BasicHttpSecurityMode.None
  commentId: F:System.ServiceModel.BasicHttpSecurityMode.None
  isExternal: true
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.Security*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
  name: Security
  nameWithType: PollingDuplexHttpBinding.Security
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.Security
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text.UTF8Encoding
  commentId: T:System.Text.UTF8Encoding
  isExternal: true
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
  name: TextEncoding
  nameWithType: PollingDuplexHttpBinding.TextEncoding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.TextEncoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
  name: UseTextEncoding
  nameWithType: PollingDuplexHttpBinding.UseTextEncoding
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.UseTextEncoding
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.BindingElementCollection
  commentId: T:System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.Channels.Binding.CreateBindingElements
  commentId: M:System.ServiceModel.Channels.Binding.CreateBindingElements
  parent: System.ServiceModel.Channels.Binding
  isExternal: true
  name: CreateBindingElements()
  nameWithType: Binding.CreateBindingElements()
  fullName: System.ServiceModel.Channels.Binding.CreateBindingElements()
  spec.csharp:
  - uid: System.ServiceModel.Channels.Binding.CreateBindingElements
    name: CreateBindingElements
    nameWithType: Binding.CreateBindingElements
    fullName: System.ServiceModel.Channels.Binding.CreateBindingElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.Binding.CreateBindingElements
    name: CreateBindingElements
    nameWithType: Binding.CreateBindingElements
    fullName: System.ServiceModel.Channels.Binding.CreateBindingElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements*
  commentId: Overload:System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements
  name: CreateBindingElements
  nameWithType: PollingDuplexHttpBinding.CreateBindingElements
  fullName: System.ServiceModel.Channels.PollingDuplexHttpBinding.CreateBindingElements
