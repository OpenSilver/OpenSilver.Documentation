### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBindingExpression
  commentId: T:System.Windows.Data.MultiBindingExpression
  id: MultiBindingExpression
  parent: System.Windows.Data
  children:
  - System.Windows.Data.MultiBindingExpression.BindingExpressions
  - System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  - System.Windows.Data.MultiBindingExpression.UpdateSource
  langs:
  - csharp
  - vb
  name: MultiBindingExpression
  nameWithType: MultiBindingExpression
  fullName: System.Windows.Data.MultiBindingExpression
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MultiBindingExpression
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nContains instance information about a single instance of a <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class MultiBindingExpression : BindingExpressionBase'
    content.vb: >-
      Public NotInheritable Class MultiBindingExpression
          Inherits BindingExpressionBase
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Data.MultiBindingExpression.BindingExpressions
  commentId: P:System.Windows.Data.MultiBindingExpression.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  - vb
  name: BindingExpressions
  nameWithType: MultiBindingExpression.BindingExpressions
  fullName: System.Windows.Data.MultiBindingExpression.BindingExpressions
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BindingExpressions
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets the collection of <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> objects in this instance of \n<xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<BindingExpressionBase> BindingExpressions { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
      description: "\nA read-only collection of the <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> objects. Even though the \nreturn type is a collection of <xref href=\"System.Windows.Data.BindingExpressionBase\" data-throw-if-not-resolved=\"false\"></xref> objects the returned \ncollection would only contain <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> objects because the \n<xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> class currently only supports <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
    content.vb: Public ReadOnly Property BindingExpressions As ReadOnlyCollection(Of BindingExpressionBase)
  overload: System.Windows.Data.MultiBindingExpression.BindingExpressions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  commentId: P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  id: ParentMultiBinding
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  - vb
  name: ParentMultiBinding
  nameWithType: MultiBindingExpression.ParentMultiBinding
  fullName: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ParentMultiBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
    startLine: 70
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets the <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> object from which this <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> is created.\n"
  example: []
  syntax:
    content: public MultiBinding ParentMultiBinding { get; }
    parameters: []
    return:
      type: System.Windows.Data.MultiBinding
      description: "\nThe <xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> object from which this <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> is created.\n"
    content.vb: Public ReadOnly Property ParentMultiBinding As MultiBinding
  overload: System.Windows.Data.MultiBindingExpression.ParentMultiBinding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.MultiBindingExpression.UpdateSource
  commentId: M:System.Windows.Data.MultiBindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.MultiBindingExpression
  langs:
  - csharp
  - vb
  name: UpdateSource()
  nameWithType: MultiBindingExpression.UpdateSource()
  fullName: System.Windows.Data.MultiBindingExpression.UpdateSource()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UpdateSource
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/MultiBindingExpression.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nSends the current binding target value to the binding source properties in \n<xref href=\"System.Windows.Data.BindingMode.TwoWay\" data-throw-if-not-resolved=\"false\"></xref> bindings.\n"
  example: []
  syntax:
    content: public void UpdateSource()
    content.vb: Public Sub UpdateSource
  overload: System.Windows.Data.MultiBindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> is detached from the binding target.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Data.MultiBinding
  commentId: T:System.Windows.Data.MultiBinding
  parent: System.Windows.Data
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Expression
  commentId: T:System.Windows.Expression
  parent: System.Windows
  name: Expression
  nameWithType: Expression
  fullName: System.Windows.Expression
- uid: System.Windows.Data.BindingExpressionBase
  commentId: T:System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Data.BindingExpression
  commentId: T:System.Windows.Data.BindingExpression
  parent: System.Windows.Data
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
- uid: System.Windows.Data.MultiBindingExpression
  commentId: T:System.Windows.Data.MultiBindingExpression
  parent: System.Windows.Data
  name: MultiBindingExpression
  nameWithType: MultiBindingExpression
  fullName: System.Windows.Data.MultiBindingExpression
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.MultiBindingExpression.BindingExpressions*
  commentId: Overload:System.Windows.Data.MultiBindingExpression.BindingExpressions
  name: BindingExpressions
  nameWithType: MultiBindingExpression.BindingExpressions
  fullName: System.Windows.Data.MultiBindingExpression.BindingExpressions
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<BindingExpressionBase>
  nameWithType: ReadOnlyCollection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Data.BindingExpressionBase>
  nameWithType.vb: ReadOnlyCollection(Of BindingExpressionBase)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Windows.Data.BindingExpressionBase)
  name.vb: ReadOnlyCollection(Of BindingExpressionBase)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: System.Windows.Data.BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: System.Windows.Data.BindingExpressionBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Windows.Data.MultiBindingExpression.ParentMultiBinding*
  commentId: Overload:System.Windows.Data.MultiBindingExpression.ParentMultiBinding
  name: ParentMultiBinding
  nameWithType: MultiBindingExpression.ParentMultiBinding
  fullName: System.Windows.Data.MultiBindingExpression.ParentMultiBinding
- uid: System.Windows.Data.BindingMode.TwoWay
  commentId: F:System.Windows.Data.BindingMode.TwoWay
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Data.MultiBindingExpression.UpdateSource*
  commentId: Overload:System.Windows.Data.MultiBindingExpression.UpdateSource
  name: UpdateSource
  nameWithType: MultiBindingExpression.UpdateSource
  fullName: System.Windows.Data.MultiBindingExpression.UpdateSource
