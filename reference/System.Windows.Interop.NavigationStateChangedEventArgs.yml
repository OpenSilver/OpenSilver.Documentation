### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.NavigationStateChangedEventArgs
  commentId: T:System.Windows.Interop.NavigationStateChangedEventArgs
  id: NavigationStateChangedEventArgs
  parent: System.Windows.Interop
  children:
  - System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)
  - System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
  - System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
  langs:
  - csharp
  - vb
  name: NavigationStateChangedEventArgs
  nameWithType: NavigationStateChangedEventArgs
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NavigationStateChangedEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows.Interop
  summary: "\nProvides data for the <xref href=\"System.Windows.Host.NavigationStateChanged\" data-throw-if-not-resolved=\"false\"></xref>\nevent.\n"
  example: []
  syntax:
    content: 'public class NavigationStateChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class NavigationStateChangedEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)
  commentId: M:System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Windows.Interop.NavigationStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: NavigationStateChangedEventArgs(String, String)
  nameWithType: NavigationStateChangedEventArgs.NavigationStateChangedEventArgs(String, String)
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.NavigationStateChangedEventArgs(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Windows.Interop
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Interop.NavigationStateChangedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>\nclass.\n"
  example: []
  syntax:
    content: public NavigationStateChangedEventArgs(string previousNavigationState, string newNavigationState)
    parameters:
    - id: previousNavigationState
      type: System.String
      description: "\nThe URI fragment that represents the previous navigation state.\n"
    - id: newNavigationState
      type: System.String
      description: "\nThe URI fragment that represents the new navigation state.\n"
    content.vb: Public Sub New(previousNavigationState As String, newNavigationState As String)
  overload: System.Windows.Interop.NavigationStateChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
  commentId: P:System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
  id: NewNavigationState
  parent: System.Windows.Interop.NavigationStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewNavigationState
  nameWithType: NavigationStateChangedEventArgs.NewNavigationState
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NewNavigationState
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Windows.Interop
  summary: "\nGets the URI fragment that represents the new navigation state.\n"
  example: []
  syntax:
    content: public string NewNavigationState { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NewNavigationState As String
  overload: System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
  commentId: P:System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
  id: PreviousNavigationState
  parent: System.Windows.Interop.NavigationStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: PreviousNavigationState
  nameWithType: NavigationStateChangedEventArgs.PreviousNavigationState
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PreviousNavigationState
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Interop/NavigationStateChangedEventArgs.cs
    startLine: 45
  assemblies:
  - OpenSilver
  namespace: System.Windows.Interop
  summary: "\nGets the URI fragment that represents the previous navigation state.\n"
  example: []
  syntax:
    content: public string PreviousNavigationState { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PreviousNavigationState As String
  overload: System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Host.NavigationStateChanged
  commentId: E:System.Windows.Host.NavigationStateChanged
  isExternal: true
- uid: System.Windows.Interop
  commentId: N:System.Windows.Interop
  name: System.Windows.Interop
  nameWithType: System.Windows.Interop
  fullName: System.Windows.Interop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Interop.NavigationStateChangedEventArgs
  commentId: T:System.Windows.Interop.NavigationStateChangedEventArgs
  name: NavigationStateChangedEventArgs
  nameWithType: NavigationStateChangedEventArgs
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.#ctor*
  commentId: Overload:System.Windows.Interop.NavigationStateChangedEventArgs.#ctor
  name: NavigationStateChangedEventArgs
  nameWithType: NavigationStateChangedEventArgs.NavigationStateChangedEventArgs
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.NavigationStateChangedEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState*
  commentId: Overload:System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
  name: NewNavigationState
  nameWithType: NavigationStateChangedEventArgs.NewNavigationState
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState
- uid: System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState*
  commentId: Overload:System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
  name: PreviousNavigationState
  nameWithType: NavigationStateChangedEventArgs.PreviousNavigationState
  fullName: System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState
