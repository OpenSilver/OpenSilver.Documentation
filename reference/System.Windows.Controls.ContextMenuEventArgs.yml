### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ContextMenuEventArgs
  commentId: T:System.Windows.Controls.ContextMenuEventArgs
  id: ContextMenuEventArgs
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.ContextMenuEventArgs.#ctor(System.Double,System.Double)
  - System.Windows.Controls.ContextMenuEventArgs.CursorLeft
  - System.Windows.Controls.ContextMenuEventArgs.CursorTop
  langs:
  - csharp
  - vb
  name: ContextMenuEventArgs
  nameWithType: ContextMenuEventArgs
  fullName: System.Windows.Controls.ContextMenuEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ContextMenuEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides data for the context menu event.\n"
  example: []
  syntax:
    content: 'public sealed class ContextMenuEventArgs : RoutedEventArgs'
    content.vb: >-
      Public NotInheritable Class ContextMenuEventArgs
          Inherits RoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  inheritedMembers:
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Controls.ContextMenuEventArgs.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Controls.ContextMenuEventArgs.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Controls.ContextMenuEventArgs
  langs:
  - csharp
  - vb
  name: ContextMenuEventArgs(Double, Double)
  nameWithType: ContextMenuEventArgs.ContextMenuEventArgs(Double, Double)
  fullName: System.Windows.Controls.ContextMenuEventArgs.ContextMenuEventArgs(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  syntax:
    content: public ContextMenuEventArgs(double pointerLeft, double pointerTop)
    parameters:
    - id: pointerLeft
      type: System.Double
    - id: pointerTop
      type: System.Double
    content.vb: Public Sub New(pointerLeft As Double, pointerTop As Double)
  overload: System.Windows.Controls.ContextMenuEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.ContextMenuEventArgs.CursorLeft
  commentId: P:System.Windows.Controls.ContextMenuEventArgs.CursorLeft
  id: CursorLeft
  parent: System.Windows.Controls.ContextMenuEventArgs
  langs:
  - csharp
  - vb
  name: CursorLeft
  nameWithType: ContextMenuEventArgs.CursorLeft
  fullName: System.Windows.Controls.ContextMenuEventArgs.CursorLeft
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CursorLeft
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the horizontal position of the mouse.\n"
  example: []
  syntax:
    content: public double CursorLeft { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property CursorLeft As Double
  overload: System.Windows.Controls.ContextMenuEventArgs.CursorLeft*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.ContextMenuEventArgs.CursorTop
  commentId: P:System.Windows.Controls.ContextMenuEventArgs.CursorTop
  id: CursorTop
  parent: System.Windows.Controls.ContextMenuEventArgs
  langs:
  - csharp
  - vb
  name: CursorTop
  nameWithType: ContextMenuEventArgs.CursorTop
  fullName: System.Windows.Controls.ContextMenuEventArgs.CursorTop
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CursorTop
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ContextMenuEventArgs.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the vertical position of the mouse.\n"
  example: []
  syntax:
    content: public double CursorTop { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property CursorTop As Double
  overload: System.Windows.Controls.ContextMenuEventArgs.CursorTop*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.OriginalSource
  commentId: P:System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Controls.ContextMenuEventArgs.#ctor*
  commentId: Overload:System.Windows.Controls.ContextMenuEventArgs.#ctor
  name: ContextMenuEventArgs
  nameWithType: ContextMenuEventArgs.ContextMenuEventArgs
  fullName: System.Windows.Controls.ContextMenuEventArgs.ContextMenuEventArgs
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.ContextMenuEventArgs.CursorLeft*
  commentId: Overload:System.Windows.Controls.ContextMenuEventArgs.CursorLeft
  name: CursorLeft
  nameWithType: ContextMenuEventArgs.CursorLeft
  fullName: System.Windows.Controls.ContextMenuEventArgs.CursorLeft
- uid: System.Windows.Controls.ContextMenuEventArgs.CursorTop*
  commentId: Overload:System.Windows.Controls.ContextMenuEventArgs.CursorTop
  name: CursorTop
  nameWithType: ContextMenuEventArgs.CursorTop
  fullName: System.Windows.Controls.ContextMenuEventArgs.CursorTop
