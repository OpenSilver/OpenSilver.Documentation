### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ISelectionProvider
  commentId: T:System.Windows.Automation.Provider.ISelectionProvider
  id: ISelectionProvider
  parent: System.Windows.Automation.Provider
  children:
  - System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  - System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  - System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  langs:
  - csharp
  - vb
  name: ISelectionProvider
  nameWithType: ISelectionProvider
  fullName: System.Windows.Automation.Provider.ISelectionProvider
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ISelectionProvider
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nExposes methods and properties to support access by a UI Automation client to \ncontrols that act as containers for a collection of individual, selectable child \nitems. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface ISelectionProvider
    content.vb: Public Interface ISelectionProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  commentId: P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  id: CanSelectMultiple
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  - vb
  name: CanSelectMultiple
  nameWithType: ISelectionProvider.CanSelectMultiple
  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanSelectMultiple
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets a value that indicates whether the UI automation provider allows more than \none child element to be selected concurrently.\n"
  example: []
  syntax:
    content: bool CanSelectMultiple { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if multiple selection is allowed; otherwise, false.\n"
    content.vb: ReadOnly Property CanSelectMultiple As Boolean
  overload: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  commentId: M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  id: GetSelection
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  - vb
  name: GetSelection()
  nameWithType: ISelectionProvider.GetSelection()
  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetSelection
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nRetrieves a UI automation provider for each child element that is selected.\n"
  example: []
  syntax:
    content: IRawElementProviderSimple[] GetSelection()
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]
      description: "\nA generic list of UI automation providers.\n"
    content.vb: Function GetSelection As IRawElementProviderSimple()
  overload: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*
- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  commentId: P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  id: IsSelectionRequired
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  - vb
  name: IsSelectionRequired
  nameWithType: ISelectionProvider.IsSelectionRequired
  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsSelectionRequired
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/ISelectionProvider.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets a value that indicates whether the UI automation provider requires at \nleast one child element to be selected.\n"
  example: []
  syntax:
    content: bool IsSelectionRequired { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if selection is required; otherwise, false.\n"
    content.vb: ReadOnly Property IsSelectionRequired As Boolean
  overload: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Windows.Automation.Provider.ISelectionItemProvider
  commentId: T:System.Windows.Automation.Provider.ISelectionItemProvider
  parent: System.Windows.Automation.Provider
  name: ISelectionItemProvider
  nameWithType: ISelectionItemProvider
  fullName: System.Windows.Automation.Provider.ISelectionItemProvider
- uid: System.Windows.Automation.Provider
  commentId: N:System.Windows.Automation.Provider
  name: System.Windows.Automation.Provider
  nameWithType: System.Windows.Automation.Provider
  fullName: System.Windows.Automation.Provider
- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*
  commentId: Overload:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  name: CanSelectMultiple
  nameWithType: ISelectionProvider.CanSelectMultiple
  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*
  commentId: Overload:System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  name: GetSelection
  nameWithType: ISelectionProvider.GetSelection
  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  isExternal: true
  name: IRawElementProviderSimple[]
  nameWithType: IRawElementProviderSimple[]
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  nameWithType.vb: IRawElementProviderSimple()
  fullName.vb: System.Windows.Automation.Provider.IRawElementProviderSimple()
  name.vb: IRawElementProviderSimple()
  spec.csharp:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*
  commentId: Overload:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  name: IsSelectionRequired
  nameWithType: ISelectionProvider.IsSelectionRequired
  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
