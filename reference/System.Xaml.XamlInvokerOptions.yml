### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlInvokerOptions
  commentId: T:System.Xaml.XamlInvokerOptions
  id: XamlInvokerOptions
  parent: System.Xaml
  children:
  - System.Xaml.XamlInvokerOptions.Compile
  - System.Xaml.XamlInvokerOptions.DeferCompile
  - System.Xaml.XamlInvokerOptions.None
  langs:
  - csharp
  - vb
  name: XamlInvokerOptions
  nameWithType: XamlInvokerOptions
  fullName: System.Xaml.XamlInvokerOptions
  type: Enum
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlInvokerOptions
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
    startLine: 31
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nOptions for member and type invokers.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum XamlInvokerOptions
    content.vb: >-
      <Flags>

      Public Enum XamlInvokerOptions
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Xaml.XamlInvokerOptions.None
  commentId: F:System.Xaml.XamlInvokerOptions.None
  id: None
  parent: System.Xaml.XamlInvokerOptions
  langs:
  - csharp
  - vb
  name: None
  nameWithType: XamlInvokerOptions.None
  fullName: System.Xaml.XamlInvokerOptions.None
  type: Field
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: None
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
    startLine: 37
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nUse reflection, which is much slower than compiled code on each call.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: System.Xaml.XamlInvokerOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xaml.XamlInvokerOptions.Compile
  commentId: F:System.Xaml.XamlInvokerOptions.Compile
  id: Compile
  parent: System.Xaml.XamlInvokerOptions
  langs:
  - csharp
  - vb
  name: Compile
  nameWithType: XamlInvokerOptions.Compile
  fullName: System.Xaml.XamlInvokerOptions.Compile
  type: Field
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Compile
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
    startLine: 43
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nCompile an expression tree to get/set/add values, which has higher startup cost but is an \norder of magnatude faster than reflection.\n"
  example: []
  syntax:
    content: Compile = 1
    return:
      type: System.Xaml.XamlInvokerOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xaml.XamlInvokerOptions.DeferCompile
  commentId: F:System.Xaml.XamlInvokerOptions.DeferCompile
  id: DeferCompile
  parent: System.Xaml.XamlInvokerOptions
  langs:
  - csharp
  - vb
  name: DeferCompile
  nameWithType: XamlInvokerOptions.DeferCompile
  fullName: System.Xaml.XamlInvokerOptions.DeferCompile
  type: Field
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DeferCompile
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/XamlSchemaContextSettings.cs
    startLine: 52
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  summary: "\nUse reflection while the expression tree is compiled in a background thread.\n"
  remarks: "\nThis (might) be the best of both worlds, where it uses reflection initially, but will compile the expression tree\nin a background thread and use it when it is ready.\n"
  example: []
  syntax:
    content: DeferCompile = 3
    return:
      type: System.Xaml.XamlInvokerOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.XamlInvokerOptions
  commentId: T:System.Xaml.XamlInvokerOptions
  parent: System.Xaml
  name: XamlInvokerOptions
  nameWithType: XamlInvokerOptions
  fullName: System.Xaml.XamlInvokerOptions
