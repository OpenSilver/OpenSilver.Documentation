### YamlMime:ManagedReference
items:
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  commentId: T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  id: FluidMoveBehaviorBase
  parent: Microsoft.Expression.Interactivity.Layout
  children:
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesToProperty
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags(System.Windows.FrameworkElement)
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag(System.Windows.DependencyObject)
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IdentityTagProperty
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActiveProperty
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag(System.Windows.DependencyObject,System.Object)
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPathProperty
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagProperty
  langs:
  - csharp
  - vb
  name: FluidMoveBehaviorBase
  nameWithType: FluidMoveBehaviorBase
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  type: Class
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FluidMoveBehaviorBase
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 53
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: 'public abstract class FluidMoveBehaviorBase : Behavior<FrameworkElement>, IAttachedObject'
    content.vb: >-
      Public MustInherit Class FluidMoveBehaviorBase
          Inherits Behavior(Of FrameworkElement)
          Implements IAttachedObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  - System.Windows.Interactivity.Behavior
  - System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}
  derivedClasses:
  - Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior
  - Microsoft.Expression.Interactivity.Layout.FluidMoveSetTagBehavior
  implements:
  - System.Windows.Interactivity.IAttachedObject
  inheritedMembers:
  - System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}.AssociatedObject
  - System.Windows.Interactivity.Behavior.AssociatedType
  - System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  - System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
  - System.Windows.Interactivity.Behavior.Detach
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
  commentId: P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
  id: AppliesTo
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: AppliesTo
  nameWithType: FluidMoveBehaviorBase.AppliesTo
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AppliesTo
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 58
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nIndicates whether the behavior applies just to this element, or to all children of the element (if the element is a Panel).\n"
  example: []
  syntax:
    content: public FluidMoveScope AppliesTo { get; set; }
    parameters: []
    return:
      type: Microsoft.Expression.Interactivity.Layout.FluidMoveScope
    content.vb: Public Property AppliesTo As FluidMoveScope
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesToProperty
  commentId: F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesToProperty
  id: AppliesToProperty
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: AppliesToProperty
  nameWithType: FluidMoveBehaviorBase.AppliesToProperty
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesToProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AppliesToProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 66
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nDependency property for the scope of the behavior. See FluidMoveScope for more details.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty AppliesToProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly AppliesToProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
  commentId: P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
  id: IsActive
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: FluidMoveBehaviorBase.IsActive
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsActive
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 71
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nIndicates whether the behavior is currently active.\n"
  example: []
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActiveProperty
  commentId: F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActiveProperty
  id: IsActiveProperty
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: IsActiveProperty
  nameWithType: FluidMoveBehaviorBase.IsActiveProperty
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActiveProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsActiveProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 79
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nDependency property for the active state of the behavior.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsActiveProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsActiveProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
  commentId: P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
  id: Tag
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: FluidMoveBehaviorBase.Tag
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Tag
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 84
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nIndicates whether to use the element as its own tag, or to use the binding on the element as the tag.\n"
  example: []
  syntax:
    content: public TagType Tag { get; set; }
    parameters: []
    return:
      type: Microsoft.Expression.Interactivity.Layout.TagType
    content.vb: Public Property Tag As TagType
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagProperty
  commentId: F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagProperty
  id: TagProperty
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: TagProperty
  nameWithType: FluidMoveBehaviorBase.TagProperty
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TagProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 92
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nDependency property that provides the ability to use the element as its own tag, or the binding on the element.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty TagProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly TagProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
  commentId: P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
  id: TagPath
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: TagPath
  nameWithType: FluidMoveBehaviorBase.TagPath
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TagPath
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 97
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nExtra path to add to the binding when TagType is specified.\n"
  example: []
  syntax:
    content: public string TagPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TagPath As String
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPathProperty
  commentId: F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPathProperty
  id: TagPathProperty
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: TagPathProperty
  nameWithType: FluidMoveBehaviorBase.TagPathProperty
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPathProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TagPathProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 105
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nDependency property for the extra path to add to the binding when UsaBindingAsTag is true.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty TagPathProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly TagPathProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IdentityTagProperty
  commentId: F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IdentityTagProperty
  id: IdentityTagProperty
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: IdentityTagProperty
  nameWithType: FluidMoveBehaviorBase.IdentityTagProperty
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IdentityTagProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IdentityTagProperty
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 110
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  summary: "\nIdentity tag used to detect element motion between containers.\n"
  example: []
  syntax:
    content: protected static readonly DependencyProperty IdentityTagProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Protected Shared ReadOnly IdentityTagProperty As DependencyProperty
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag(System.Windows.DependencyObject)
  commentId: M:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag(System.Windows.DependencyObject)
  id: GetIdentityTag(System.Windows.DependencyObject)
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: GetIdentityTag(DependencyObject)
  nameWithType: FluidMoveBehaviorBase.GetIdentityTag(DependencyObject)
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag(System.Windows.DependencyObject)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetIdentityTag
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 111
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected static object GetIdentityTag(DependencyObject obj)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    return:
      type: System.Object
    content.vb: Protected Shared Function GetIdentityTag(obj As DependencyObject) As Object
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag(System.Windows.DependencyObject,System.Object)
  commentId: M:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag(System.Windows.DependencyObject,System.Object)
  id: SetIdentityTag(System.Windows.DependencyObject,System.Object)
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: SetIdentityTag(DependencyObject, Object)
  nameWithType: FluidMoveBehaviorBase.SetIdentityTag(DependencyObject, Object)
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag(System.Windows.DependencyObject, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetIdentityTag
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 112
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected static void SetIdentityTag(DependencyObject obj, object value)
    parameters:
    - id: obj
      type: System.Windows.DependencyObject
    - id: value
      type: System.Object
    content.vb: Protected Shared Sub SetIdentityTag(obj As DependencyObject, value As Object)
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached
  commentId: M:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached
  id: OnAttached
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: OnAttached()
  nameWithType: FluidMoveBehaviorBase.OnAttached()
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnAttached
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 134
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected override void OnAttached()
    content.vb: Protected Overrides Sub OnAttached
  overridden: System.Windows.Interactivity.Behavior.OnAttached
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching
  commentId: M:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching
  id: OnDetaching
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: OnDetaching()
  nameWithType: FluidMoveBehaviorBase.OnDetaching()
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching()
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnDetaching
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 140
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected override void OnDetaching()
    content.vb: Protected Overrides Sub OnDetaching
  overridden: System.Windows.Interactivity.Behavior.OnDetaching
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
  commentId: P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
  id: ShouldSkipInitialLayout
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: ShouldSkipInitialLayout
  nameWithType: FluidMoveBehaviorBase.ShouldSkipInitialLayout
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
  type: Property
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShouldSkipInitialLayout
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 246
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected virtual bool ShouldSkipInitialLayout { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property ShouldSkipInitialLayout As Boolean
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags(System.Windows.FrameworkElement)
  commentId: M:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags(System.Windows.FrameworkElement)
  id: EnsureTags(System.Windows.FrameworkElement)
  parent: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase
  langs:
  - csharp
  - vb
  name: EnsureTags(FrameworkElement)
  nameWithType: FluidMoveBehaviorBase.EnsureTags(FrameworkElement)
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EnsureTags
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/Layout/FluidMoveBehavior.cs
    startLine: 253
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity.Layout
  syntax:
    content: protected virtual void EnsureTags(FrameworkElement child)
    parameters:
    - id: child
      type: System.Windows.FrameworkElement
    content.vb: Protected Overridable Sub EnsureTags(child As FrameworkElement)
  overload: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Expression.Interactivity.Layout
  commentId: N:Microsoft.Expression.Interactivity.Layout
  name: Microsoft.Expression.Interactivity.Layout
  nameWithType: Microsoft.Expression.Interactivity.Layout
  fullName: Microsoft.Expression.Interactivity.Layout
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Interactivity.Behavior
  commentId: T:System.Windows.Interactivity.Behavior
  parent: System.Windows.Interactivity
  name: Behavior
  nameWithType: Behavior
  fullName: System.Windows.Interactivity.Behavior
- uid: System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}
  commentId: T:System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}
  parent: System.Windows.Interactivity
  definition: System.Windows.Interactivity.Behavior`1
  name: Behavior<FrameworkElement>
  nameWithType: Behavior<FrameworkElement>
  fullName: System.Windows.Interactivity.Behavior<System.Windows.FrameworkElement>
  nameWithType.vb: Behavior(Of FrameworkElement)
  fullName.vb: System.Windows.Interactivity.Behavior(Of System.Windows.FrameworkElement)
  name.vb: Behavior(Of FrameworkElement)
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: System.Windows.Interactivity.Behavior
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.FrameworkElement
    name: FrameworkElement
    nameWithType: FrameworkElement
    fullName: System.Windows.FrameworkElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: System.Windows.Interactivity.Behavior
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.FrameworkElement
    name: FrameworkElement
    nameWithType: FrameworkElement
    fullName: System.Windows.FrameworkElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.IAttachedObject
  commentId: T:System.Windows.Interactivity.IAttachedObject
  parent: System.Windows.Interactivity
  name: IAttachedObject
  nameWithType: IAttachedObject
  fullName: System.Windows.Interactivity.IAttachedObject
- uid: System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}.AssociatedObject
  commentId: P:System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}.AssociatedObject
  parent: System.Windows.Interactivity.Behavior{System.Windows.FrameworkElement}
  definition: System.Windows.Interactivity.Behavior`1.AssociatedObject
  name: AssociatedObject
  nameWithType: Behavior<FrameworkElement>.AssociatedObject
  fullName: System.Windows.Interactivity.Behavior<System.Windows.FrameworkElement>.AssociatedObject
  nameWithType.vb: Behavior(Of FrameworkElement).AssociatedObject
  fullName.vb: System.Windows.Interactivity.Behavior(Of System.Windows.FrameworkElement).AssociatedObject
- uid: System.Windows.Interactivity.Behavior.AssociatedType
  commentId: P:System.Windows.Interactivity.Behavior.AssociatedType
  parent: System.Windows.Interactivity.Behavior
  name: AssociatedType
  nameWithType: Behavior.AssociatedType
  fullName: System.Windows.Interactivity.Behavior.AssociatedType
- uid: System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  commentId: P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject
  parent: System.Windows.Interactivity.Behavior
  name: IAttachedObject.AssociatedObject
  nameWithType: Behavior.IAttachedObject.AssociatedObject
  fullName: System.Windows.Interactivity.Behavior.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  nameWithType.vb: Behavior.System.Windows.Interactivity.IAttachedObject.AssociatedObject
  name.vb: System.Windows.Interactivity.IAttachedObject.AssociatedObject
- uid: System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.Behavior
  name: Attach(DependencyObject)
  nameWithType: Behavior.Attach(DependencyObject)
  fullName: System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: Behavior.Attach
    fullName: System.Windows.Interactivity.Behavior.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)
    name: Attach
    nameWithType: Behavior.Attach
    fullName: System.Windows.Interactivity.Behavior.Attach
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.Behavior.Detach
  commentId: M:System.Windows.Interactivity.Behavior.Detach
  parent: System.Windows.Interactivity.Behavior
  name: Detach()
  nameWithType: Behavior.Detach()
  fullName: System.Windows.Interactivity.Behavior.Detach()
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior.Detach
    name: Detach
    nameWithType: Behavior.Detach
    fullName: System.Windows.Interactivity.Behavior.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior.Detach
    name: Detach
    nameWithType: Behavior.Detach
    fullName: System.Windows.Interactivity.Behavior.Detach
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetVisualStateValue(DependencyProperty)
  nameWithType: DependencyObject.GetVisualStateValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetVisualStateValue(System.Windows.DependencyProperty)
    name: GetVisualStateValue
    nameWithType: DependencyObject.GetVisualStateValue
    fullName: System.Windows.DependencyObject.GetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetVisualStateValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetVisualStateValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetVisualStateValue(System.Windows.DependencyProperty,System.Object)
    name: SetVisualStateValue
    nameWithType: DependencyObject.SetVisualStateValue
    fullName: System.Windows.DependencyObject.SetVisualStateValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetAnimationValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetAnimationValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetAnimationValue(System.Windows.DependencyProperty,System.Object)
    name: SetAnimationValue
    nameWithType: DependencyObject.SetAnimationValue
    fullName: System.Windows.DependencyObject.SetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationValue(System.Windows.DependencyProperty)
    name: GetAnimationValue
    nameWithType: DependencyObject.GetAnimationValue
    fullName: System.Windows.DependencyObject.GetAnimationValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  parent: System.Windows.Interactivity.DependencyObjectHelper
  definition: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors()
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors()
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors()
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Interactivity
  commentId: N:System.Windows.Interactivity
  name: System.Windows.Interactivity
  nameWithType: System.Windows.Interactivity
  fullName: System.Windows.Interactivity
- uid: System.Windows.Interactivity.Behavior`1
  commentId: T:System.Windows.Interactivity.Behavior`1
  name: Behavior<T>
  nameWithType: Behavior<T>
  fullName: System.Windows.Interactivity.Behavior<T>
  nameWithType.vb: Behavior(Of T)
  fullName.vb: System.Windows.Interactivity.Behavior(Of T)
  name.vb: Behavior(Of T)
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: System.Windows.Interactivity.Behavior
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: System.Windows.Interactivity.Behavior
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.Behavior`1.AssociatedObject
  commentId: P:System.Windows.Interactivity.Behavior`1.AssociatedObject
  name: AssociatedObject
  nameWithType: Behavior<T>.AssociatedObject
  fullName: System.Windows.Interactivity.Behavior<T>.AssociatedObject
  nameWithType.vb: Behavior(Of T).AssociatedObject
  fullName.vb: System.Windows.Interactivity.Behavior(Of T).AssociatedObject
- uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  commentId: M:System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  name: GetSelfAndAncestors(DependencyObject)
  nameWithType: DependencyObjectHelper.GetSelfAndAncestors(DependencyObject)
  fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors(System.Windows.DependencyObject)
    name: GetSelfAndAncestors
    nameWithType: DependencyObjectHelper.GetSelfAndAncestors
    fullName: System.Windows.Interactivity.DependencyObjectHelper.GetSelfAndAncestors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Interactivity.DependencyObjectHelper
  commentId: T:System.Windows.Interactivity.DependencyObjectHelper
  parent: System.Windows.Interactivity
  name: DependencyObjectHelper
  nameWithType: DependencyObjectHelper
  fullName: System.Windows.Interactivity.DependencyObjectHelper
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
  name: AppliesTo
  nameWithType: FluidMoveBehaviorBase.AppliesTo
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.AppliesTo
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveScope
  commentId: T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope
  parent: Microsoft.Expression.Interactivity.Layout
  name: FluidMoveScope
  nameWithType: FluidMoveScope
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveScope
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
  name: IsActive
  nameWithType: FluidMoveBehaviorBase.IsActive
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
  name: Tag
  nameWithType: FluidMoveBehaviorBase.Tag
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.Tag
- uid: Microsoft.Expression.Interactivity.Layout.TagType
  commentId: T:Microsoft.Expression.Interactivity.Layout.TagType
  parent: Microsoft.Expression.Interactivity.Layout
  name: TagType
  nameWithType: TagType
  fullName: Microsoft.Expression.Interactivity.Layout.TagType
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
  name: TagPath
  nameWithType: FluidMoveBehaviorBase.TagPath
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.TagPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag
  name: GetIdentityTag
  nameWithType: FluidMoveBehaviorBase.GetIdentityTag
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.GetIdentityTag
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag
  name: SetIdentityTag
  nameWithType: FluidMoveBehaviorBase.SetIdentityTag
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.SetIdentityTag
- uid: System.Windows.Interactivity.Behavior.OnAttached
  commentId: M:System.Windows.Interactivity.Behavior.OnAttached
  parent: System.Windows.Interactivity.Behavior
  name: OnAttached()
  nameWithType: Behavior.OnAttached()
  fullName: System.Windows.Interactivity.Behavior.OnAttached()
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior.OnAttached
    name: OnAttached
    nameWithType: Behavior.OnAttached
    fullName: System.Windows.Interactivity.Behavior.OnAttached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior.OnAttached
    name: OnAttached
    nameWithType: Behavior.OnAttached
    fullName: System.Windows.Interactivity.Behavior.OnAttached
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached
  name: OnAttached
  nameWithType: FluidMoveBehaviorBase.OnAttached
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnAttached
- uid: System.Windows.Interactivity.Behavior.OnDetaching
  commentId: M:System.Windows.Interactivity.Behavior.OnDetaching
  parent: System.Windows.Interactivity.Behavior
  name: OnDetaching()
  nameWithType: Behavior.OnDetaching()
  fullName: System.Windows.Interactivity.Behavior.OnDetaching()
  spec.csharp:
  - uid: System.Windows.Interactivity.Behavior.OnDetaching
    name: OnDetaching
    nameWithType: Behavior.OnDetaching
    fullName: System.Windows.Interactivity.Behavior.OnDetaching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Interactivity.Behavior.OnDetaching
    name: OnDetaching
    nameWithType: Behavior.OnDetaching
    fullName: System.Windows.Interactivity.Behavior.OnDetaching
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching
  name: OnDetaching
  nameWithType: FluidMoveBehaviorBase.OnDetaching
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.OnDetaching
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
  name: ShouldSkipInitialLayout
  nameWithType: FluidMoveBehaviorBase.ShouldSkipInitialLayout
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.ShouldSkipInitialLayout
- uid: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags*
  commentId: Overload:Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags
  name: EnsureTags
  nameWithType: FluidMoveBehaviorBase.EnsureTags
  fullName: Microsoft.Expression.Interactivity.Layout.FluidMoveBehaviorBase.EnsureTags
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
