### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionHost
  commentId: T:System.ComponentModel.Composition.Hosting.CompositionHost
  id: CompositionHost
  parent: System.ComponentModel.Composition.Hosting
  children:
  - System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)
  - System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  langs:
  - csharp
  - vb
  name: CompositionHost
  nameWithType: CompositionHost
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost
  type: Class
  source:
    remote:
      path: src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CompositionHost
    path: ../OpenSilverGit/src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
    startLine: 21
  assemblies:
  - System.ComponentModel.Composition.Initialization
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nProvides static methods to control the container used by <xref href=\"System.ComponentModel.Composition.CompositionInitializer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class CompositionHost
    content.vb: Public Module CompositionHost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)
  commentId: M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)
  id: Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)
  parent: System.ComponentModel.Composition.Hosting.CompositionHost
  langs:
  - csharp
  - vb
  name: Initialize(CompositionContainer)
  nameWithType: CompositionHost.Initialize(CompositionContainer)
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)
  type: Method
  source:
    remote:
      path: src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Initialize
    path: ../OpenSilverGit/src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
    startLine: 38
  assemblies:
  - System.ComponentModel.Composition.Initialization
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nSets <xref href=\"System.ComponentModel.Composition.CompositionInitializer\" data-throw-if-not-resolved=\"false\"></xref> to use the specified container.\n"
  example: []
  syntax:
    content: public static void Initialize(CompositionContainer container)
    parameters:
    - id: container
      type: System.ComponentModel.Composition.Hosting.CompositionContainer
      description: "\nThe container to use.\n"
    content.vb: Public Shared Sub Initialize(container As CompositionContainer)
  overload: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">container</code> is null.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThis method has already been called.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  commentId: M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  id: Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  parent: System.ComponentModel.Composition.Hosting.CompositionHost
  langs:
  - csharp
  - vb
  name: Initialize(ComposablePartCatalog[])
  nameWithType: CompositionHost.Initialize(ComposablePartCatalog[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])
  type: Method
  source:
    remote:
      path: src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Initialize
    path: ../OpenSilverGit/src/Runtime/MEF/System.ComponentModel.Composition.Initialization/Hosting/CompositionHost.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.Composition.Initialization
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nSets <xref href=\"System.ComponentModel.Composition.CompositionInitializer\" data-throw-if-not-resolved=\"false\"></xref> to use a new container initialized \nwith the specified catalogs.\n"
  example: []
  syntax:
    content: public static CompositionContainer Initialize(params ComposablePartCatalog[] catalogs)
    parameters:
    - id: catalogs
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
      description: "\nThe catalogs to load into the new container.\n"
    return:
      type: System.ComponentModel.Composition.Hosting.CompositionContainer
      description: "\nThe new container.\n"
    content.vb: Public Shared Function Initialize(ParamArray catalogs As ComposablePartCatalog()) As CompositionContainer
  overload: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  nameWithType.vb: CompositionHost.Initialize(ComposablePartCatalog())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog())
  name.vb: Initialize(ComposablePartCatalog())
references:
- uid: System.ComponentModel.Composition.CompositionInitializer
  commentId: T:System.ComponentModel.Composition.CompositionInitializer
  name: CompositionInitializer
  nameWithType: CompositionInitializer
  fullName: System.ComponentModel.Composition.CompositionInitializer
- uid: System.ComponentModel.Composition.Hosting
  commentId: N:System.ComponentModel.Composition.Hosting
  name: System.ComponentModel.Composition.Hosting
  nameWithType: System.ComponentModel.Composition.Hosting
  fullName: System.ComponentModel.Composition.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize*
  commentId: Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize
  name: Initialize
  nameWithType: CompositionHost.Initialize
  fullName: System.ComponentModel.Composition.Hosting.CompositionHost.Initialize
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  commentId: T:System.ComponentModel.Composition.Hosting.CompositionContainer
  parent: System.ComponentModel.Composition.Hosting
  isExternal: true
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
  isExternal: true
  name: ComposablePartCatalog[]
  nameWithType: ComposablePartCatalog[]
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog[]
  nameWithType.vb: ComposablePartCatalog()
  fullName.vb: System.ComponentModel.Composition.Primitives.ComposablePartCatalog()
  name.vb: ComposablePartCatalog()
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    name: ComposablePartCatalog
    nameWithType: ComposablePartCatalog
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
