### YamlMime:ManagedReference
items:
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs
  commentId: T:System.Windows.ApplicationUnhandledExceptionEventArgs
  id: ApplicationUnhandledExceptionEventArgs
  parent: System.Windows
  children:
  - System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)
  - System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
  - System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
  langs:
  - csharp
  - vb
  name: ApplicationUnhandledExceptionEventArgs
  nameWithType: ApplicationUnhandledExceptionEventArgs
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ApplicationUnhandledExceptionEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nProvides data for the <xref href=\"System.Windows.Application.UnhandledException\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public class ApplicationUnhandledExceptionEventArgs : EventArgs'
    content.vb: >-
      Public Class ApplicationUnhandledExceptionEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)
  commentId: M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)
  id: '#ctor(System.Exception,System.Boolean)'
  parent: System.Windows.ApplicationUnhandledExceptionEventArgs
  langs:
  - csharp
  - vb
  name: ApplicationUnhandledExceptionEventArgs(Exception, Boolean)
  nameWithType: ApplicationUnhandledExceptionEventArgs.ApplicationUnhandledExceptionEventArgs(Exception, Boolean)
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.ApplicationUnhandledExceptionEventArgs(System.Exception, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.ApplicationUnhandledExceptionEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ApplicationUnhandledExceptionEventArgs(Exception ex, bool handled)
    parameters:
    - id: ex
      type: System.Exception
      description: "\nThe exception that is being thrown as unhandled.\n"
    - id: handled
      type: System.Boolean
      description: "\nA value that indicates whether the exception has been handled and should not be processed further.\n"
    content.vb: Public Sub New(ex As Exception, handled As Boolean)
  overload: System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
  commentId: P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
  id: ExceptionObject
  parent: System.Windows.ApplicationUnhandledExceptionEventArgs
  langs:
  - csharp
  - vb
  name: ExceptionObject
  nameWithType: ApplicationUnhandledExceptionEventArgs.ExceptionObject
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ExceptionObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets the unhandled exception.\n"
  example: []
  syntax:
    content: public Exception ExceptionObject { get; set; }
    parameters: []
    return:
      type: System.Exception
      description: "\nThe unhandled exception.\n"
    content.vb: Public Property ExceptionObject As Exception
  overload: System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
  commentId: P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
  id: Handled
  parent: System.Windows.ApplicationUnhandledExceptionEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: ApplicationUnhandledExceptionEventArgs.Handled
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Handled
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/ApplicationUnhandledExceptionEventArgs.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets or sets a value that indicates whether the exception is handled.\n"
  example: []
  syntax:
    content: public bool Handled { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue to mark the exception as handled, which indicates that Silverlight should\nnot process it further; otherwise, false.\n"
    content.vb: Public Property Handled As Boolean
  overload: System.Windows.ApplicationUnhandledExceptionEventArgs.Handled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Application.UnhandledException
  commentId: E:System.Windows.Application.UnhandledException
  isExternal: true
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs
  commentId: T:System.Windows.ApplicationUnhandledExceptionEventArgs
  name: ApplicationUnhandledExceptionEventArgs
  nameWithType: ApplicationUnhandledExceptionEventArgs
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor*
  commentId: Overload:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor
  name: ApplicationUnhandledExceptionEventArgs
  nameWithType: ApplicationUnhandledExceptionEventArgs.ApplicationUnhandledExceptionEventArgs
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.ApplicationUnhandledExceptionEventArgs
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject*
  commentId: Overload:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
  name: ExceptionObject
  nameWithType: ApplicationUnhandledExceptionEventArgs.ExceptionObject
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject
- uid: System.Windows.ApplicationUnhandledExceptionEventArgs.Handled*
  commentId: Overload:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
  name: Handled
  nameWithType: ApplicationUnhandledExceptionEventArgs.Handled
  fullName: System.Windows.ApplicationUnhandledExceptionEventArgs.Handled
