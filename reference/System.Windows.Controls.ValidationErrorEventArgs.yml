### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationErrorEventArgs
  commentId: T:System.Windows.Controls.ValidationErrorEventArgs
  id: ValidationErrorEventArgs
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.ValidationErrorEventArgs.#ctor
  - System.Windows.Controls.ValidationErrorEventArgs.Action
  - System.Windows.Controls.ValidationErrorEventArgs.Error
  - System.Windows.Controls.ValidationErrorEventArgs.Handled
  langs:
  - csharp
  - vb
  name: ValidationErrorEventArgs
  nameWithType: ValidationErrorEventArgs
  fullName: System.Windows.Controls.ValidationErrorEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidationErrorEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides data for the <xref href=\"System.Windows.FrameworkElement.BindingValidationError\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: 'public class ValidationErrorEventArgs : RoutedEventArgs'
    content.vb: >-
      Public Class ValidationErrorEventArgs
          Inherits RoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  inheritedMembers:
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Controls.ValidationErrorEventArgs.#ctor
  commentId: M:System.Windows.Controls.ValidationErrorEventArgs.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ValidationErrorEventArgs
  langs:
  - csharp
  - vb
  name: ValidationErrorEventArgs()
  nameWithType: ValidationErrorEventArgs.ValidationErrorEventArgs()
  fullName: System.Windows.Controls.ValidationErrorEventArgs.ValidationErrorEventArgs()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  syntax:
    content: public ValidationErrorEventArgs()
    content.vb: Public Sub New
  overload: System.Windows.Controls.ValidationErrorEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.ValidationErrorEventArgs.Action
  commentId: P:System.Windows.Controls.ValidationErrorEventArgs.Action
  id: Action
  parent: System.Windows.Controls.ValidationErrorEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ValidationErrorEventArgs.Action
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Action
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Action
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the state of the validation error.\n"
  example: []
  syntax:
    content: public ValidationErrorEventAction Action { get; }
    parameters: []
    return:
      type: System.Windows.Controls.ValidationErrorEventAction
      description: "\nOne of the enumeration values that indicates the state of the validation error.\n"
    content.vb: Public ReadOnly Property Action As ValidationErrorEventAction
  overload: System.Windows.Controls.ValidationErrorEventArgs.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.ValidationErrorEventArgs.Error
  commentId: P:System.Windows.Controls.ValidationErrorEventArgs.Error
  id: Error
  parent: System.Windows.Controls.ValidationErrorEventArgs
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ValidationErrorEventArgs.Error
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Error
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Error
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
    startLine: 44
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the validation error that caused the <xref href=\"System.Windows.FrameworkElement.BindingValidationError\" data-throw-if-not-resolved=\"false\"></xref>\nevent.\n"
  example: []
  syntax:
    content: public ValidationError Error { get; }
    parameters: []
    return:
      type: System.Windows.Controls.ValidationError
      description: "\nA <xref href=\"System.Windows.Controls.ValidationError\" data-throw-if-not-resolved=\"false\"></xref> object that contains the exception that caused the validation error.\n"
    content.vb: Public ReadOnly Property Error As ValidationError
  overload: System.Windows.Controls.ValidationErrorEventArgs.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.ValidationErrorEventArgs.Handled
  commentId: P:System.Windows.Controls.ValidationErrorEventArgs.Handled
  id: Handled
  parent: System.Windows.Controls.ValidationErrorEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: ValidationErrorEventArgs.Handled
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Handled
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/ValidationErrorEventArgs.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets the value that marks the routed event as handled.\n"
  example: []
  syntax:
    content: public bool Handled { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the event is handled; otherwise, false.\n"
    content.vb: Public Property Handled As Boolean
  overload: System.Windows.Controls.ValidationErrorEventArgs.Handled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.FrameworkElement.BindingValidationError
  commentId: E:System.Windows.FrameworkElement.BindingValidationError
  parent: System.Windows.FrameworkElement
  name: BindingValidationError
  nameWithType: FrameworkElement.BindingValidationError
  fullName: System.Windows.FrameworkElement.BindingValidationError
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.OriginalSource
  commentId: P:System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Controls.ValidationErrorEventArgs.#ctor*
  commentId: Overload:System.Windows.Controls.ValidationErrorEventArgs.#ctor
  name: ValidationErrorEventArgs
  nameWithType: ValidationErrorEventArgs.ValidationErrorEventArgs
  fullName: System.Windows.Controls.ValidationErrorEventArgs.ValidationErrorEventArgs
- uid: System.Windows.Controls.ValidationErrorEventArgs.Action*
  commentId: Overload:System.Windows.Controls.ValidationErrorEventArgs.Action
  name: Action
  nameWithType: ValidationErrorEventArgs.Action
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Action
- uid: System.Windows.Controls.ValidationErrorEventAction
  commentId: T:System.Windows.Controls.ValidationErrorEventAction
  parent: System.Windows.Controls
  name: ValidationErrorEventAction
  nameWithType: ValidationErrorEventAction
  fullName: System.Windows.Controls.ValidationErrorEventAction
- uid: System.Windows.Controls.ValidationError
  commentId: T:System.Windows.Controls.ValidationError
  parent: System.Windows.Controls
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
- uid: System.Windows.Controls.ValidationErrorEventArgs.Error*
  commentId: Overload:System.Windows.Controls.ValidationErrorEventArgs.Error
  name: Error
  nameWithType: ValidationErrorEventArgs.Error
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Error
- uid: System.Windows.Controls.ValidationErrorEventArgs.Handled*
  commentId: Overload:System.Windows.Controls.ValidationErrorEventArgs.Handled
  name: Handled
  nameWithType: ValidationErrorEventArgs.Handled
  fullName: System.Windows.Controls.ValidationErrorEventArgs.Handled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
