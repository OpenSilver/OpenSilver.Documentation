### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.ArcSegment
  commentId: T:System.Windows.Media.ArcSegment
  id: ArcSegment
  parent: System.Windows.Media
  children:
  - System.Windows.Media.ArcSegment.#ctor
  - System.Windows.Media.ArcSegment.IsLargeArc
  - System.Windows.Media.ArcSegment.IsLargeArcProperty
  - System.Windows.Media.ArcSegment.Point
  - System.Windows.Media.ArcSegment.PointProperty
  - System.Windows.Media.ArcSegment.RotationAngle
  - System.Windows.Media.ArcSegment.RotationAngleProperty
  - System.Windows.Media.ArcSegment.Size
  - System.Windows.Media.ArcSegment.SizeProperty
  - System.Windows.Media.ArcSegment.SweepDirection
  - System.Windows.Media.ArcSegment.SweepDirectionProperty
  langs:
  - csharp
  - vb
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ArcSegment
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nRepresents an elliptical arc between two points.\n"
  example: []
  syntax:
    content: 'public sealed class ArcSegment : PathSegment, IDependencyObject'
    content.vb: >-
      Public NotInheritable Class ArcSegment
          Inherits PathSegment
          Implements IDependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  - System.Windows.Media.PathSegment
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Media.ArcSegment.#ctor
  commentId: M:System.Windows.Media.ArcSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.ArcSegment\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ArcSegment()
    content.vb: Public Sub New
  overload: System.Windows.Media.ArcSegment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  commentId: F:System.Windows.Media.ArcSegment.IsLargeArcProperty
  id: IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsLargeArcProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nIdentifies the <xref href=\"System.Windows.Media.ArcSegment.IsLargeArc\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsLargeArcProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsLargeArcProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  commentId: P:System.Windows.Media.ArcSegment.IsLargeArc
  id: IsLargeArc
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsLargeArc
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 45
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets or sets a value that indicates whether the arc should be greater than 180\ndegrees.\n"
  example: []
  syntax:
    content: public bool IsLargeArc { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the arc should be greater than 180 degrees; otherwise, false. The default\nis false.\n"
    content.vb: Public Property IsLargeArc As Boolean
  overload: System.Windows.Media.ArcSegment.IsLargeArc*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.ArcSegment.PointProperty
  commentId: F:System.Windows.Media.ArcSegment.PointProperty
  id: PointProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PointProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nIdentifies the <xref href=\"System.Windows.Media.ArcSegment.Point\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty PointProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly PointProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.ArcSegment.Point
  commentId: P:System.Windows.Media.ArcSegment.Point
  id: Point
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Point
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 68
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets or sets the endpoint of the elliptical arc.\n"
  example: []
  syntax:
    content: public Point Point { get; set; }
    parameters: []
    return:
      type: System.Windows.Point
      description: "\nThe point to which the arc is drawn. The default is a <xref href=\"System.Windows.Media.ArcSegment.Point\" data-throw-if-not-resolved=\"false\"></xref> with\nvalue 0,0.\n"
    content.vb: Public Property Point As Point
  overload: System.Windows.Media.ArcSegment.Point*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  commentId: F:System.Windows.Media.ArcSegment.RotationAngleProperty
  id: RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RotationAngleProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nIdentifies the <xref href=\"System.Windows.Media.ArcSegment.RotationAngle\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty RotationAngleProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly RotationAngleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.ArcSegment.RotationAngle
  commentId: P:System.Windows.Media.ArcSegment.RotationAngle
  id: RotationAngle
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RotationAngle
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 92
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets or sets the amount (in degrees) by which the ellipse is rotated about the\nx-axis.\n"
  example: []
  syntax:
    content: public double RotationAngle { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe amount (in degrees) by which the ellipse is rotated about the x-axis. The\ndefault value is 0.\n"
    content.vb: Public Property RotationAngle As Double
  overload: System.Windows.Media.ArcSegment.RotationAngle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.ArcSegment.SizeProperty
  commentId: F:System.Windows.Media.ArcSegment.SizeProperty
  id: SizeProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SizeProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 101
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nIdentifies the <xref href=\"System.Windows.Media.ArcSegment.Size\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty SizeProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly SizeProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.ArcSegment.Size
  commentId: P:System.Windows.Media.ArcSegment.Size
  id: Size
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Size
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 117
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets or sets the x- and y-radius of the arc as a <xref href=\"System.Windows.Media.ArcSegment.Size\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public Size Size { get; set; }
    parameters: []
    return:
      type: System.Windows.Size
      description: "\nA <xref href=\"System.Windows.Media.ArcSegment.Size\" data-throw-if-not-resolved=\"false\"></xref> structure that describes the x- and y-radius of the elliptical\narc. The <xref href=\"System.Windows.Media.ArcSegment.Size\" data-throw-if-not-resolved=\"false\"></xref> structure&apos;s <xref href=\"System.Windows.Size.Width\" data-throw-if-not-resolved=\"false\"></xref> property specifies\nthe arc&apos;s x-radius; its <xref href=\"System.Windows.Size.Height\" data-throw-if-not-resolved=\"false\"></xref> property specifies the arc&apos;s\ny-radius. The default is a <xref href=\"System.Windows.Media.ArcSegment.Size\" data-throw-if-not-resolved=\"false\"></xref> with value 0,0.\n"
    content.vb: Public Property Size As Size
  overload: System.Windows.Media.ArcSegment.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  commentId: F:System.Windows.Media.ArcSegment.SweepDirectionProperty
  id: SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SweepDirectionProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 126
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nIdentifies the <xref href=\"System.Windows.Media.ArcSegment.SweepDirection\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty SweepDirectionProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly SweepDirectionProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.ArcSegment.SweepDirection
  commentId: P:System.Windows.Media.ArcSegment.SweepDirection
  id: SweepDirection
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  - vb
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SweepDirection
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/ArcSegment.cs
    startLine: 141
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets or sets a value that specifies whether the arc is drawn in the <xref href=\"System.Windows.Media.SweepDirection.Clockwise\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"System.Windows.Media.SweepDirection.Counterclockwise\" data-throw-if-not-resolved=\"false\"></xref> direction.\n"
  example: []
  syntax:
    content: public SweepDirection SweepDirection { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.SweepDirection
      description: "\nOne of the enumeration values that specifies the direction in which the arc is\ndrawn. The default is <xref href=\"System.Windows.Media.SweepDirection.Counterclockwise\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property SweepDirection As SweepDirection
  overload: System.Windows.Media.ArcSegment.SweepDirection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Media.PathSegment
  commentId: T:System.Windows.Media.PathSegment
  parent: System.Windows.Media
  name: PathSegment
  nameWithType: PathSegment
  fullName: System.Windows.Media.PathSegment
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  commentId: M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Media.ArcSegment
  commentId: T:System.Windows.Media.ArcSegment
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
- uid: System.Windows.Media.ArcSegment.#ctor*
  commentId: Overload:System.Windows.Media.ArcSegment.#ctor
  name: ArcSegment
  nameWithType: ArcSegment.ArcSegment
  fullName: System.Windows.Media.ArcSegment.ArcSegment
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  commentId: P:System.Windows.Media.ArcSegment.IsLargeArc
  isExternal: true
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.ArcSegment.IsLargeArc*
  commentId: Overload:System.Windows.Media.ArcSegment.IsLargeArc
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.ArcSegment.Point
  commentId: P:System.Windows.Media.ArcSegment.Point
  isExternal: true
- uid: System.Windows.Media.ArcSegment.Point*
  commentId: Overload:System.Windows.Media.ArcSegment.Point
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Media.ArcSegment.RotationAngle
  commentId: P:System.Windows.Media.ArcSegment.RotationAngle
  isExternal: true
- uid: System.Windows.Media.ArcSegment.RotationAngle*
  commentId: Overload:System.Windows.Media.ArcSegment.RotationAngle
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.ArcSegment.Size
  commentId: P:System.Windows.Media.ArcSegment.Size
  isExternal: true
- uid: System.Windows.Size.Width
  commentId: P:System.Windows.Size.Width
  isExternal: true
- uid: System.Windows.Size.Height
  commentId: P:System.Windows.Size.Height
  isExternal: true
- uid: System.Windows.Media.ArcSegment.Size*
  commentId: Overload:System.Windows.Media.ArcSegment.Size
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
- uid: System.Windows.Size
  commentId: T:System.Windows.Size
  parent: System.Windows
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Media.ArcSegment.SweepDirection
  commentId: P:System.Windows.Media.ArcSegment.SweepDirection
  isExternal: true
- uid: System.Windows.Media.SweepDirection.Clockwise
  commentId: F:System.Windows.Media.SweepDirection.Clockwise
  isExternal: true
- uid: System.Windows.Media.SweepDirection.Counterclockwise
  commentId: F:System.Windows.Media.SweepDirection.Counterclockwise
  isExternal: true
- uid: System.Windows.Media.ArcSegment.SweepDirection*
  commentId: Overload:System.Windows.Media.ArcSegment.SweepDirection
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
- uid: System.Windows.Media.SweepDirection
  commentId: T:System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
