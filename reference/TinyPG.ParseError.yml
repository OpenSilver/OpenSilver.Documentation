### YamlMime:ManagedReference
items:
- uid: TinyPG.ParseError
  commentId: T:TinyPG.ParseError
  id: ParseError
  parent: TinyPG
  children:
  - TinyPG.ParseError.#ctor
  - TinyPG.ParseError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - TinyPG.ParseError.#ctor(System.String,System.Int32,TinyPG.ParseNode)
  - TinyPG.ParseError.Code
  - TinyPG.ParseError.Column
  - TinyPG.ParseError.Length
  - TinyPG.ParseError.Line
  - TinyPG.ParseError.Message
  - TinyPG.ParseError.Position
  langs:
  - csharp
  - vb
  name: ParseError
  nameWithType: ParseError
  fullName: TinyPG.ParseError
  type: Class
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ParseError
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 32
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: >-
      [Serializable]

      public class ParseError
    content.vb: >-
      <Serializable>

      Public Class ParseError
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyPG.ParseError.Code
  commentId: P:TinyPG.ParseError.Code
  id: Code
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ParseError.Code
  fullName: TinyPG.ParseError.Code
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Code
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 42
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public int Code { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Code As Integer
  overload: TinyPG.ParseError.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.Line
  commentId: P:TinyPG.ParseError.Line
  id: Line
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: ParseError.Line
  fullName: TinyPG.ParseError.Line
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Line
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 43
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public int Line { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Line As Integer
  overload: TinyPG.ParseError.Line*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.Column
  commentId: P:TinyPG.ParseError.Column
  id: Column
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: ParseError.Column
  fullName: TinyPG.ParseError.Column
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Column
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 44
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public int Column { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Column As Integer
  overload: TinyPG.ParseError.Column*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.Position
  commentId: P:TinyPG.ParseError.Position
  id: Position
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ParseError.Position
  fullName: TinyPG.ParseError.Position
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Position
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 45
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Position As Integer
  overload: TinyPG.ParseError.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.Length
  commentId: P:TinyPG.ParseError.Length
  id: Length
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ParseError.Length
  fullName: TinyPG.ParseError.Length
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Length
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 46
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: TinyPG.ParseError.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.Message
  commentId: P:TinyPG.ParseError.Message
  id: Message
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ParseError.Message
  fullName: TinyPG.ParseError.Message
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Message
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 47
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: TinyPG.ParseError.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyPG.ParseError.#ctor
  commentId: M:TinyPG.ParseError.#ctor
  id: '#ctor'
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: ParseError()
  nameWithType: ParseError.ParseError()
  fullName: TinyPG.ParseError.ParseError()
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 50
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public ParseError()
    content.vb: Public Sub New
  overload: TinyPG.ParseError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyPG.ParseError.#ctor(System.String,System.Int32,TinyPG.ParseNode)
  commentId: M:TinyPG.ParseError.#ctor(System.String,System.Int32,TinyPG.ParseNode)
  id: '#ctor(System.String,System.Int32,TinyPG.ParseNode)'
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: ParseError(String, Int32, ParseNode)
  nameWithType: ParseError.ParseError(String, Int32, ParseNode)
  fullName: TinyPG.ParseError.ParseError(System.String, System.Int32, TinyPG.ParseNode)
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 54
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public ParseError(string message, int code, ParseNode node)
    parameters:
    - id: message
      type: System.String
    - id: code
      type: System.Int32
    - id: node
      type: TinyPG.ParseNode
    content.vb: Public Sub New(message As String, code As Integer, node As ParseNode)
  overload: TinyPG.ParseError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyPG.ParseError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:TinyPG.ParseError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: TinyPG.ParseError
  langs:
  - csharp
  - vb
  name: ParseError(String, Int32, Int32, Int32, Int32, Int32)
  nameWithType: ParseError.ParseError(String, Int32, Int32, Int32, Int32, Int32)
  fullName: TinyPG.ParseError.ParseError(System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/ParseTree.cs
    startLine: 58
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TinyPG
  syntax:
    content: public ParseError(string message, int code, int line, int col, int pos, int length)
    parameters:
    - id: message
      type: System.String
    - id: code
      type: System.Int32
    - id: line
      type: System.Int32
    - id: col
      type: System.Int32
    - id: pos
      type: System.Int32
    - id: length
      type: System.Int32
    content.vb: Public Sub New(message As String, code As Integer, line As Integer, col As Integer, pos As Integer, length As Integer)
  overload: TinyPG.ParseError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TinyPG
  commentId: N:TinyPG
  name: TinyPG
  nameWithType: TinyPG
  fullName: TinyPG
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TinyPG.ParseError.Code*
  commentId: Overload:TinyPG.ParseError.Code
  name: Code
  nameWithType: ParseError.Code
  fullName: TinyPG.ParseError.Code
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyPG.ParseError.Line*
  commentId: Overload:TinyPG.ParseError.Line
  name: Line
  nameWithType: ParseError.Line
  fullName: TinyPG.ParseError.Line
- uid: TinyPG.ParseError.Column*
  commentId: Overload:TinyPG.ParseError.Column
  name: Column
  nameWithType: ParseError.Column
  fullName: TinyPG.ParseError.Column
- uid: TinyPG.ParseError.Position*
  commentId: Overload:TinyPG.ParseError.Position
  name: Position
  nameWithType: ParseError.Position
  fullName: TinyPG.ParseError.Position
- uid: TinyPG.ParseError.Length*
  commentId: Overload:TinyPG.ParseError.Length
  name: Length
  nameWithType: ParseError.Length
  fullName: TinyPG.ParseError.Length
- uid: TinyPG.ParseError.Message*
  commentId: Overload:TinyPG.ParseError.Message
  name: Message
  nameWithType: ParseError.Message
  fullName: TinyPG.ParseError.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyPG.ParseError.#ctor*
  commentId: Overload:TinyPG.ParseError.#ctor
  name: ParseError
  nameWithType: ParseError.ParseError
  fullName: TinyPG.ParseError.ParseError
- uid: TinyPG.ParseNode
  commentId: T:TinyPG.ParseNode
  parent: TinyPG
  name: ParseNode
  nameWithType: ParseNode
  fullName: TinyPG.ParseNode
