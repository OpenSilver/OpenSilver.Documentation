### YamlMime:ManagedReference
items:
- uid: TypeScriptDefToCSharp.Model.Declaration.Container`1
  commentId: T:TypeScriptDefToCSharp.Model.Declaration.Container`1
  id: Declaration.Container`1
  parent: TypeScriptDefToCSharp.Model
  children:
  - TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  langs:
  - csharp
  - vb
  name: Declaration.Container<T>
  nameWithType: Declaration.Container<T>
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<T>
  type: Interface
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Container
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 39
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: 'public interface Container<out T> : IDeclaration, IEnumerable<T>, IEnumerable where T : Declaration'
    typeParameters:
    - id: T
    content.vb: >-
      Public Interface Container(Of Out T As Declaration)
          Inherits IDeclaration, IEnumerable(Of T)
  inheritedMembers:
  - TypeScriptDefToCSharp.Model.IDeclaration.Name
  - TypeScriptDefToCSharp.Model.IDeclaration.Super
  - TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  - TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  - TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: Declaration.Container(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of T)
  name.vb: Declaration.Container(Of T)
- uid: TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  commentId: M:TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  id: AddContent(System.Xml.Linq.XElement,TypeScriptDefToCSharp.TypeScriptDefContext)
  parent: TypeScriptDefToCSharp.Model.Declaration.Container`1
  langs:
  - csharp
  - vb
  name: AddContent(XElement, TypeScriptDefContext)
  nameWithType: Declaration.Container<T>.AddContent(XElement, TypeScriptDefContext)
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<T>.AddContent(System.Xml.Linq.XElement, TypeScriptDefToCSharp.TypeScriptDefContext)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddContent
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/Declaration.cs
    startLine: 42
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: void AddContent(XElement content, TypeScriptDefContext context)
    parameters:
    - id: content
      type: System.Xml.Linq.XElement
    - id: context
      type: TypeScriptDefToCSharp.TypeScriptDefContext
    content.vb: Sub AddContent(content As XElement, context As TypeScriptDefContext)
  overload: TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent*
  nameWithType.vb: Declaration.Container(Of T).AddContent(XElement, TypeScriptDefContext)
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of T).AddContent(System.Xml.Linq.XElement, TypeScriptDefToCSharp.TypeScriptDefContext)
references:
- uid: TypeScriptDefToCSharp.Model
  commentId: N:TypeScriptDefToCSharp.Model
  name: TypeScriptDefToCSharp.Model
  nameWithType: TypeScriptDefToCSharp.Model
  fullName: TypeScriptDefToCSharp.Model
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Name
  commentId: P:TypeScriptDefToCSharp.Model.IDeclaration.Name
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  name: Name
  nameWithType: IDeclaration.Name
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Name
- uid: TypeScriptDefToCSharp.Model.IDeclaration.Super
  commentId: P:TypeScriptDefToCSharp.Model.IDeclaration.Super
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  name: Super
  nameWithType: IDeclaration.Super
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.Super
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  isExternal: true
  name: FullName(String)
  nameWithType: IDeclaration.FullName(String)
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
    name: FullName
    nameWithType: IDeclaration.FullName
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.FullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.FullName(System.String)
    name: FullName
    nameWithType: IDeclaration.FullName
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.FullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  isExternal: true
  name: SkippedFullName(String, Int32)
  nameWithType: IDeclaration.SkippedFullName(String, Int32)
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String, System.Int32)
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
    name: SkippedFullName
    nameWithType: IDeclaration.SkippedFullName
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName(System.String,System.Int32)
    name: SkippedFullName
    nameWithType: IDeclaration.SkippedFullName
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.SkippedFullName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  commentId: M:TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
  parent: TypeScriptDefToCSharp.Model.IDeclaration
  name: FirstAncestor<TContainer>()
  nameWithType: IDeclaration.FirstAncestor<TContainer>()
  fullName: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor<TContainer>()
  nameWithType.vb: IDeclaration.FirstAncestor(Of TContainer)()
  fullName.vb: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor(Of TContainer)()
  name.vb: FirstAncestor(Of TContainer)()
  spec.csharp:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
    name: FirstAncestor<TContainer>
    nameWithType: IDeclaration.FirstAncestor<TContainer>
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor<TContainer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor``1
    name: FirstAncestor(Of TContainer)
    nameWithType: IDeclaration.FirstAncestor(Of TContainer)
    fullName: TypeScriptDefToCSharp.Model.IDeclaration.FirstAncestor(Of TContainer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefToCSharp.Model.IDeclaration
  commentId: T:TypeScriptDefToCSharp.Model.IDeclaration
  parent: TypeScriptDefToCSharp.Model
  name: IDeclaration
  nameWithType: IDeclaration
  fullName: TypeScriptDefToCSharp.Model.IDeclaration
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent*
  commentId: Overload:TypeScriptDefToCSharp.Model.Declaration.Container`1.AddContent
  name: AddContent
  nameWithType: Declaration.Container<T>.AddContent
  fullName: TypeScriptDefToCSharp.Model.Declaration.Container<T>.AddContent
  nameWithType.vb: Declaration.Container(Of T).AddContent
  fullName.vb: TypeScriptDefToCSharp.Model.Declaration.Container(Of T).AddContent
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: TypeScriptDefToCSharp.TypeScriptDefContext
  commentId: T:TypeScriptDefToCSharp.TypeScriptDefContext
  parent: TypeScriptDefToCSharp
  name: TypeScriptDefContext
  nameWithType: TypeScriptDefContext
  fullName: TypeScriptDefToCSharp.TypeScriptDefContext
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: TypeScriptDefToCSharp
  commentId: N:TypeScriptDefToCSharp
  name: TypeScriptDefToCSharp
  nameWithType: TypeScriptDefToCSharp
  fullName: TypeScriptDefToCSharp
