### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  id: Binding
  parent: System.Windows.Data
  children:
  - System.Windows.Data.Binding.#ctor
  - System.Windows.Data.Binding.#ctor(System.String)
  - System.Windows.Data.Binding.#ctor(System.Windows.Data.Binding)
  - System.Windows.Data.Binding.BindsDirectlyToSource
  - System.Windows.Data.Binding.Converter
  - System.Windows.Data.Binding.ConverterCulture
  - System.Windows.Data.Binding.ConverterParameter
  - System.Windows.Data.Binding.ElementName
  - System.Windows.Data.Binding.IsDebuggingEnabled
  - System.Windows.Data.Binding.Mode
  - System.Windows.Data.Binding.NotifyOnValidationError
  - System.Windows.Data.Binding.Path
  - System.Windows.Data.Binding.RelativeSource
  - System.Windows.Data.Binding.Source
  - System.Windows.Data.Binding.UpdateSourceTrigger
  - System.Windows.Data.Binding.ValidatesOnDataErrors
  - System.Windows.Data.Binding.ValidatesOnExceptions
  - System.Windows.Data.Binding.ValidatesOnLoad
  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  langs:
  - csharp
  - vb
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Binding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 75
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nDefines a binding that connects the properties of binding targets and data sources.\n"
  example:
  - "\nYou can add a Binding using XAML as follows:\n<pre><code><TextBlock x:Name=\"MyTextBlock\" Text=\"{Binding Size}\" HorizontalAlignment=\"Left\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"></TextBlock></code></pre>\n<pre><code>MyTextBlock.DataContext = myPlanet;</code></pre>\nNote: you can create the Binding directly using C#:\n<pre><code>Binding myBinding = new Binding(&quot;Size&quot;);\nMyTextBlock.SetBinding(TextBlock.TextProperty, myBinding);\nMyTextBlock.DataContext = myPlanet;</code></pre>\nHere is another example using the TwoWay mode, and also using a Converter:\n<pre><code>MyTextBox.DataContext = myPlanet;</code></pre>\n<pre><code><Border xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:local=\"using:MyAssembly.MyApp\">\n<!-- We define the Converter: -->\n<Border.Resources>\n<local:KilometersToMilesConverter x:Key=\"KilometersToMilesConverter\"></local:KilometersToMilesConverter>\n</Border.Resources>\n<TextBox x:Name=\"MyTextBox\" Text=\"{Binding Length, Mode=TwoWay, Converter={StaticResource KilometersToMilesConverter}}\" HorizontalAlignment=\"Left\"></TextBox>\n</Border></code></pre>\nUsing C#:\n<pre><code>Binding myBinding = new Binding(&quot;Size&quot;);\n\n//we set the binding in TwoWay mode:\nmyBinding.Mode = BindingMode.TwoWay;\n\n//We create the converter:\nmyBinding.Converter = new KilometersToMilesConverter();\n\nMyTextBox.SetBinding(TextBox.TextProperty, myBinding);\nMyTextBox.DataContext = myPlanet;</code></pre>\n"
  syntax:
    content: 'public class Binding : BindingBase, IMarkupExtension<object>'
    content.vb: >-
      Public Class Binding
          Inherits BindingBase
          Implements IMarkupExtension(Of Object)
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements:
  - System.Xaml.IMarkupExtension{System.Object}
  inheritedMembers:
  - System.Windows.Data.BindingBase._stringFormat
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.TargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.CheckSealed
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Data.Binding.#ctor
  commentId: M:System.Windows.Data.Binding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Binding()
    content.vb: Public Sub New
  overload: System.Windows.Data.Binding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.#ctor(System.String)
  commentId: M:System.Windows.Data.Binding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 117
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> class with an initial\nproperty path for the data source.\n"
  example: []
  syntax:
    content: public Binding(string path)
    parameters:
    - id: path
      type: System.String
      description: "\nThe initial property path for the source of the binding.\n"
    content.vb: Public Sub New(path As String)
  overload: System.Windows.Data.Binding.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\npath is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.#ctor(System.Windows.Data.Binding)
  commentId: M:System.Windows.Data.Binding.#ctor(System.Windows.Data.Binding)
  id: '#ctor(System.Windows.Data.Binding)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Binding(Binding)
  nameWithType: Binding.Binding(Binding)
  fullName: System.Windows.Data.Binding.Binding(System.Windows.Data.Binding)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 134
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> class with initial\nproperty values copied from the specified <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Binding(Binding original)
    parameters:
    - id: original
      type: System.Windows.Data.Binding
      description: "\nThe <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> to copy.\n"
    content.vb: Public Sub New(original As Binding)
  overload: System.Windows.Data.Binding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.Converter
  commentId: P:System.Windows.Data.Binding.Converter
  id: Converter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Converter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 172
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the converter object that is called by the binding engine to\nmodify the data as it is passed between the source and target, or vice versa.\nReturns the IValueConverter object that modifies the data.\n"
  example: []
  syntax:
    content: public IValueConverter Converter { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.IValueConverter
    content.vb: Public Property Converter As IValueConverter
  overload: System.Windows.Data.Binding.Converter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ConverterCulture
  commentId: P:System.Windows.Data.Binding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterCulture
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 183
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the culture to be used by the Binding.Converter.\nReturns the System.Globalization.CultureInfo used by the Binding.Converter.\n"
  example: []
  syntax:
    content: public CultureInfo ConverterCulture { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Public Property ConverterCulture As CultureInfo
  overload: System.Windows.Data.Binding.ConverterCulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ConverterParameter
  commentId: P:System.Windows.Data.Binding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterParameter
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 205
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a parameter that can be used in the Converter logic.\nReturns a parameter to be passed to the Converter. This can be used in the conversion logic. The default is null.\n"
  example: []
  syntax:
    content: public object ConverterParameter { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property ConverterParameter As Object
  overload: System.Windows.Data.Binding.ConverterParameter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ElementName
  commentId: P:System.Windows.Data.Binding.ElementName
  id: ElementName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ElementName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 215
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the name of the element to use as the binding source for the Binding.\nReturns the value of the Name property or x:Name attribute for the element to bind to. The default is null.\n"
  example: []
  syntax:
    content: public string ElementName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ElementName As String
  overload: System.Windows.Data.Binding.ElementName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.Mode
  commentId: P:System.Windows.Data.Binding.Mode
  id: Mode
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Mode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 225
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates the direction of the data flow in the binding.\nReturns one of the BindingMode values.\n"
  example: []
  syntax:
    content: public BindingMode Mode { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.BindingMode
    content.vb: Public Property Mode As BindingMode
  overload: System.Windows.Data.Binding.Mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.Path
  commentId: P:System.Windows.Data.Binding.Path
  id: Path
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Path
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 253
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the path to the binding source property.\nReturns the property path for the source of the binding.\n"
  example: []
  syntax:
    content: public PropertyPath Path { get; set; }
    parameters: []
    return:
      type: System.Windows.PropertyPath
    content.vb: Public Property Path As PropertyPath
  overload: System.Windows.Data.Binding.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.RelativeSource
  commentId: P:System.Windows.Data.Binding.RelativeSource
  id: RelativeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RelativeSource
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 277
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the binding source by specifying its location relative to the position of the binding target.\nReturns the relative location of the binding source to use. The default is null.\n"
  example: []
  syntax:
    content: public RelativeSource RelativeSource { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.RelativeSource
    content.vb: Public Property RelativeSource As RelativeSource
  overload: System.Windows.Data.Binding.RelativeSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.Source
  commentId: P:System.Windows.Data.Binding.Source
  id: Source
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Source
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 287
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets the data source for the binding.\nReturns the source object that contains the data for the binding.\n"
  example: []
  syntax:
    content: public object Source { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Source As Object
  overload: System.Windows.Data.Binding.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  commentId: P:System.Windows.Data.Binding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UpdateSourceTrigger
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 296
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nUpdate type\n"
  example: []
  syntax:
    content: public UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.UpdateSourceTrigger
    content.vb: Public Property UpdateSourceTrigger As UpdateSourceTrigger
  overload: System.Windows.Data.Binding.UpdateSourceTrigger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  commentId: P:System.Windows.Data.Binding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnExceptions
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 320
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report\nexception validation errors.\n"
  example: []
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidatesOnExceptions As Boolean
  overload: System.Windows.Data.Binding.ValidatesOnExceptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  commentId: P:System.Windows.Data.Binding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NotifyOnValidationError
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 330
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the System.Windows.FrameworkElement.BindingValidationError\nevent is raised on validation errors.\n"
  example: []
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NotifyOnValidationError As Boolean
  overload: System.Windows.Data.Binding.NotifyOnValidationError*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ValidatesOnLoad
  commentId: P:System.Windows.Data.Binding.ValidatesOnLoad
  id: ValidatesOnLoad
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ValidatesOnLoad
  nameWithType: Binding.ValidatesOnLoad
  fullName: System.Windows.Data.Binding.ValidatesOnLoad
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnLoad
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 342
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nTrue to force the property to go through the Validation process when the Binding is set or when the Target is added in the Visual tree.\nThis way, if the source property has an Invalid value when setting the Binding, it will immediately be marked as Invalid instead of waiting\nfor a value change that keeps/makes it Invalid (which is what happens on Silverlight).\nDefaults to False since it is the behaviour of Silverlight and WPF.\n"
  example: []
  syntax:
    content: public bool ValidatesOnLoad { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidatesOnLoad As Boolean
  overload: System.Windows.Data.Binding.ValidatesOnLoad*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.IsDebuggingEnabled
  commentId: F:System.Windows.Data.Binding.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: IsDebuggingEnabled
  nameWithType: Binding.IsDebuggingEnabled
  fullName: System.Windows.Data.Binding.IsDebuggingEnabled
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsDebuggingEnabled
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 348
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  syntax:
    content: >-
      [NotImplemented]

      public static bool IsDebuggingEnabled
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Shared IsDebuggingEnabled As Boolean
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  commentId: P:System.Windows.Data.Binding.BindsDirectlyToSource
  id: BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BindsDirectlyToSource
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 357
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding ignores any <xref href=\"System.ComponentModel.ICollectionView\" data-throw-if-not-resolved=\"false\"></xref>\nsettings on the data source.\n"
  example: []
  syntax:
    content: public bool BindsDirectlyToSource { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding binds directly to the data source; otherwise, false.\n"
    content.vb: Public Property BindsDirectlyToSource As Boolean
  overload: System.Windows.Data.Binding.BindsDirectlyToSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  commentId: P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnNotifyDataErrors
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 372
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report validation\nerrors from an System.ComponentModel.INotifyDataErrorInfo implementation on the\nbound data entity.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool ValidatesOnNotifyDataErrors { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding engine will report System.ComponentModel.INotifyDataErrorInfo\nvalidation errors; otherwise, false. The default is true.\n"
    content.vb: >-
      <NotImplemented>

      Public Property ValidatesOnNotifyDataErrors As Boolean
  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  commentId: P:System.Windows.Data.Binding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  - vb
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/Binding.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidatesOnDataErrors
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/Binding.cs
    startLine: 388
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets or sets a value that indicates whether the binding engine will report validation\nerrors from an System.ComponentModel.IDataErrorInfo implementation on the bound\ndata entity.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool ValidatesOnDataErrors { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the binding engine will report System.ComponentModel.IDataErrorInfo validation\nerrors; otherwise, false. The default is false.\n"
    content.vb: >-
      <NotImplemented>

      Public Property ValidatesOnDataErrors As Boolean
  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Windows.Data.BindingBase
  commentId: T:System.Windows.Data.BindingBase
  parent: System.Windows.Data
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Xaml.IMarkupExtension{System.Object}
  commentId: T:System.Xaml.IMarkupExtension{System.Object}
  parent: System.Xaml
  definition: System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<Object>
  nameWithType: IMarkupExtension<Object>
  fullName: System.Xaml.IMarkupExtension<System.Object>
  nameWithType.vb: IMarkupExtension(Of Object)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object)
  name.vb: IMarkupExtension(Of Object)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.BindingBase._stringFormat
  commentId: F:System.Windows.Data.BindingBase._stringFormat
  parent: System.Windows.Data.BindingBase
  name: _stringFormat
  nameWithType: BindingBase._stringFormat
  fullName: System.Windows.Data.BindingBase._stringFormat
- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Data.BindingBase
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: BindingBase.ProvideValue(IServiceProvider)
  fullName: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: BindingBase.ProvideValue
    fullName: System.Windows.Data.BindingBase.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: BindingBase.ProvideValue
    fullName: System.Windows.Data.BindingBase.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.BindingBase.FallbackValue
  commentId: P:System.Windows.Data.BindingBase.FallbackValue
  parent: System.Windows.Data.BindingBase
  name: FallbackValue
  nameWithType: BindingBase.FallbackValue
  fullName: System.Windows.Data.BindingBase.FallbackValue
- uid: System.Windows.Data.BindingBase.TargetNullValue
  commentId: P:System.Windows.Data.BindingBase.TargetNullValue
  parent: System.Windows.Data.BindingBase
  name: TargetNullValue
  nameWithType: BindingBase.TargetNullValue
  fullName: System.Windows.Data.BindingBase.TargetNullValue
- uid: System.Windows.Data.BindingBase.StringFormat
  commentId: P:System.Windows.Data.BindingBase.StringFormat
  parent: System.Windows.Data.BindingBase
  name: StringFormat
  nameWithType: BindingBase.StringFormat
  fullName: System.Windows.Data.BindingBase.StringFormat
- uid: System.Windows.Data.BindingBase.CheckSealed
  commentId: M:System.Windows.Data.BindingBase.CheckSealed
  parent: System.Windows.Data.BindingBase
  name: CheckSealed()
  nameWithType: BindingBase.CheckSealed()
  fullName: System.Windows.Data.BindingBase.CheckSealed()
  spec.csharp:
  - uid: System.Windows.Data.BindingBase.CheckSealed
    name: CheckSealed
    nameWithType: BindingBase.CheckSealed
    fullName: System.Windows.Data.BindingBase.CheckSealed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.BindingBase.CheckSealed
    name: CheckSealed
    nameWithType: BindingBase.CheckSealed
    fullName: System.Windows.Data.BindingBase.CheckSealed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: System.Xaml.IMarkupExtension`1
  commentId: T:System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<T>
  nameWithType: IMarkupExtension<T>
  fullName: System.Xaml.IMarkupExtension<T>
  nameWithType.vb: IMarkupExtension(Of T)
  fullName.vb: System.Xaml.IMarkupExtension(Of T)
  name.vb: IMarkupExtension(Of T)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.Binding.#ctor*
  commentId: Overload:System.Windows.Data.Binding.#ctor
  name: Binding
  nameWithType: Binding.Binding
  fullName: System.Windows.Data.Binding.Binding
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.Binding.Converter*
  commentId: Overload:System.Windows.Data.Binding.Converter
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.Binding.ConverterCulture*
  commentId: Overload:System.Windows.Data.Binding.ConverterCulture
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Windows.Data.Binding.ConverterParameter*
  commentId: Overload:System.Windows.Data.Binding.ConverterParameter
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
- uid: System.Windows.Data.Binding.ElementName*
  commentId: Overload:System.Windows.Data.Binding.ElementName
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
- uid: System.Windows.Data.Binding.Mode*
  commentId: Overload:System.Windows.Data.Binding.Mode
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
- uid: System.Windows.Data.BindingMode
  commentId: T:System.Windows.Data.BindingMode
  parent: System.Windows.Data
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.Binding.Path*
  commentId: Overload:System.Windows.Data.Binding.Path
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
- uid: System.Windows.PropertyPath
  commentId: T:System.Windows.PropertyPath
  parent: System.Windows
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: System.Windows.PropertyPath
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Data.Binding.RelativeSource*
  commentId: Overload:System.Windows.Data.Binding.RelativeSource
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
- uid: System.Windows.Data.RelativeSource
  commentId: T:System.Windows.Data.RelativeSource
  parent: System.Windows.Data
  name: RelativeSource
  nameWithType: RelativeSource
  fullName: System.Windows.Data.RelativeSource
- uid: System.Windows.Data.Binding.Source*
  commentId: Overload:System.Windows.Data.Binding.Source
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
- uid: System.Windows.Data.Binding.UpdateSourceTrigger*
  commentId: Overload:System.Windows.Data.Binding.UpdateSourceTrigger
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  commentId: T:System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnExceptions*
  commentId: Overload:System.Windows.Data.Binding.ValidatesOnExceptions
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.Binding.NotifyOnValidationError*
  commentId: Overload:System.Windows.Data.Binding.NotifyOnValidationError
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.ValidatesOnLoad*
  commentId: Overload:System.Windows.Data.Binding.ValidatesOnLoad
  name: ValidatesOnLoad
  nameWithType: Binding.ValidatesOnLoad
  fullName: System.Windows.Data.Binding.ValidatesOnLoad
- uid: System.ComponentModel.ICollectionView
  commentId: T:System.ComponentModel.ICollectionView
  parent: System.ComponentModel
  name: ICollectionView
  nameWithType: ICollectionView
  fullName: System.ComponentModel.ICollectionView
- uid: System.Windows.Data.Binding.BindsDirectlyToSource*
  commentId: Overload:System.Windows.Data.Binding.BindsDirectlyToSource
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  commentId: Overload:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*
  commentId: Overload:System.Windows.Data.Binding.ValidatesOnDataErrors
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
