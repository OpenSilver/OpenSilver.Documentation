### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.PriorityQueue`1
  commentId: T:System.Collections.Generic.PriorityQueue`1
  id: PriorityQueue`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.PriorityQueue`1.#ctor(System.Int32)
  - System.Collections.Generic.PriorityQueue`1.Count
  - System.Collections.Generic.PriorityQueue`1.Dequeue
  - System.Collections.Generic.PriorityQueue`1.Enqueue(System.Int32,`0)
  - System.Collections.Generic.PriorityQueue`1.Peek
  - System.Collections.Generic.PriorityQueue`1.TryDequeue(`0@)
  - System.Collections.Generic.PriorityQueue`1.TryPeek(`0@)
  langs:
  - csharp
  - vb
  name: PriorityQueue<TValue>
  nameWithType: PriorityQueue<TValue>
  fullName: System.Collections.Generic.PriorityQueue<TValue>
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PriorityQueue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 15
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public class PriorityQueue<TValue>
    typeParameters:
    - id: TValue
    content.vb: Public Class PriorityQueue(Of TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: PriorityQueue(Of TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue)
  name.vb: PriorityQueue(Of TValue)
- uid: System.Collections.Generic.PriorityQueue`1.#ctor(System.Int32)
  commentId: M:System.Collections.Generic.PriorityQueue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: PriorityQueue(Int32)
  nameWithType: PriorityQueue<TValue>.PriorityQueue(Int32)
  fullName: System.Collections.Generic.PriorityQueue<TValue>.PriorityQueue(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public PriorityQueue(int maxPriority)
    parameters:
    - id: maxPriority
      type: System.Int32
    content.vb: Public Sub New(maxPriority As Integer)
  overload: System.Collections.Generic.PriorityQueue`1.#ctor*
  nameWithType.vb: PriorityQueue(Of TValue).PriorityQueue(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).PriorityQueue(System.Int32)
- uid: System.Collections.Generic.PriorityQueue`1.Count
  commentId: P:System.Collections.Generic.PriorityQueue`1.Count
  id: Count
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PriorityQueue<TValue>.Count
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Count
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Count
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Collections.Generic.PriorityQueue`1.Count*
  nameWithType.vb: PriorityQueue(Of TValue).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Count
- uid: System.Collections.Generic.PriorityQueue`1.Enqueue(System.Int32,`0)
  commentId: M:System.Collections.Generic.PriorityQueue`1.Enqueue(System.Int32,`0)
  id: Enqueue(System.Int32,`0)
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(Int32, TValue)
  nameWithType: PriorityQueue<TValue>.Enqueue(Int32, TValue)
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Enqueue(System.Int32, TValue)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Enqueue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public void Enqueue(int priority, TValue value)
    parameters:
    - id: priority
      type: System.Int32
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Enqueue(priority As Integer, value As TValue)
  overload: System.Collections.Generic.PriorityQueue`1.Enqueue*
  nameWithType.vb: PriorityQueue(Of TValue).Enqueue(Int32, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Enqueue(System.Int32, TValue)
- uid: System.Collections.Generic.PriorityQueue`1.Dequeue
  commentId: M:System.Collections.Generic.PriorityQueue`1.Dequeue
  id: Dequeue
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: PriorityQueue<TValue>.Dequeue()
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Dequeue()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Dequeue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 53
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public TValue Dequeue()
    return:
      type: '{TValue}'
    content.vb: Public Function Dequeue As TValue
  overload: System.Collections.Generic.PriorityQueue`1.Dequeue*
  nameWithType.vb: PriorityQueue(Of TValue).Dequeue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Dequeue()
- uid: System.Collections.Generic.PriorityQueue`1.TryDequeue(`0@)
  commentId: M:System.Collections.Generic.PriorityQueue`1.TryDequeue(`0@)
  id: TryDequeue(`0@)
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: TryDequeue(out TValue)
  nameWithType: PriorityQueue<TValue>.TryDequeue(out TValue)
  fullName: System.Collections.Generic.PriorityQueue<TValue>.TryDequeue(out TValue)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryDequeue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 63
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public bool TryDequeue(out TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function TryDequeue(ByRef value As TValue) As Boolean
  overload: System.Collections.Generic.PriorityQueue`1.TryDequeue*
  nameWithType.vb: PriorityQueue(Of TValue).TryDequeue(ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).TryDequeue(ByRef TValue)
  name.vb: TryDequeue(ByRef TValue)
- uid: System.Collections.Generic.PriorityQueue`1.Peek
  commentId: M:System.Collections.Generic.PriorityQueue`1.Peek
  id: Peek
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: PriorityQueue<TValue>.Peek()
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Peek()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Peek
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 87
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public TValue Peek()
    return:
      type: '{TValue}'
    content.vb: Public Function Peek As TValue
  overload: System.Collections.Generic.PriorityQueue`1.Peek*
  nameWithType.vb: PriorityQueue(Of TValue).Peek()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Peek()
- uid: System.Collections.Generic.PriorityQueue`1.TryPeek(`0@)
  commentId: M:System.Collections.Generic.PriorityQueue`1.TryPeek(`0@)
  id: TryPeek(`0@)
  parent: System.Collections.Generic.PriorityQueue`1
  langs:
  - csharp
  - vb
  name: TryPeek(out TValue)
  nameWithType: PriorityQueue<TValue>.TryPeek(out TValue)
  fullName: System.Collections.Generic.PriorityQueue<TValue>.TryPeek(out TValue)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryPeek
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Collections.Generic/PriorityQueue.cs
    startLine: 97
  assemblies:
  - OpenSilver
  namespace: System.Collections.Generic
  syntax:
    content: public bool TryPeek(out TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function TryPeek(ByRef value As TValue) As Boolean
  overload: System.Collections.Generic.PriorityQueue`1.TryPeek*
  nameWithType.vb: PriorityQueue(Of TValue).TryPeek(ByRef TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).TryPeek(ByRef TValue)
  name.vb: TryPeek(ByRef TValue)
references:
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.PriorityQueue`1.#ctor*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.#ctor
  name: PriorityQueue
  nameWithType: PriorityQueue<TValue>.PriorityQueue
  fullName: System.Collections.Generic.PriorityQueue<TValue>.PriorityQueue
  nameWithType.vb: PriorityQueue(Of TValue).PriorityQueue
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).PriorityQueue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.PriorityQueue`1.Count*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.Count
  name: Count
  nameWithType: PriorityQueue<TValue>.Count
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Count
  nameWithType.vb: PriorityQueue(Of TValue).Count
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Count
- uid: System.Collections.Generic.PriorityQueue`1.Enqueue*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.Enqueue
  name: Enqueue
  nameWithType: PriorityQueue<TValue>.Enqueue
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Enqueue
  nameWithType.vb: PriorityQueue(Of TValue).Enqueue
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Enqueue
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.PriorityQueue`1.Dequeue*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.Dequeue
  name: Dequeue
  nameWithType: PriorityQueue<TValue>.Dequeue
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Dequeue
  nameWithType.vb: PriorityQueue(Of TValue).Dequeue
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Dequeue
- uid: System.Collections.Generic.PriorityQueue`1.TryDequeue*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.TryDequeue
  name: TryDequeue
  nameWithType: PriorityQueue<TValue>.TryDequeue
  fullName: System.Collections.Generic.PriorityQueue<TValue>.TryDequeue
  nameWithType.vb: PriorityQueue(Of TValue).TryDequeue
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).TryDequeue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.PriorityQueue`1.Peek*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.Peek
  name: Peek
  nameWithType: PriorityQueue<TValue>.Peek
  fullName: System.Collections.Generic.PriorityQueue<TValue>.Peek
  nameWithType.vb: PriorityQueue(Of TValue).Peek
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).Peek
- uid: System.Collections.Generic.PriorityQueue`1.TryPeek*
  commentId: Overload:System.Collections.Generic.PriorityQueue`1.TryPeek
  name: TryPeek
  nameWithType: PriorityQueue<TValue>.TryPeek
  fullName: System.Collections.Generic.PriorityQueue<TValue>.TryPeek
  nameWithType.vb: PriorityQueue(Of TValue).TryPeek
  fullName.vb: System.Collections.Generic.PriorityQueue(Of TValue).TryPeek
