### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  commentId: T:System.ComponentModel.Composition.Hosting.DeploymentCatalog
  id: DeploymentCatalog
  parent: System.ComponentModel.Composition.Hosting
  children:
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
  - System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
  langs:
  - csharp
  - vb
  name: DeploymentCatalog
  nameWithType: DeploymentCatalog
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DeploymentCatalog
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nDiscovers attributed parts in a XAP file, and provides methods for asynchronously\ndownloading XAP files.\n"
  example: []
  syntax:
    content: 'public class DeploymentCatalog : ComposablePartCatalog, IEnumerable<ComposablePartDefinition>, IEnumerable, IDisposable, INotifyComposablePartCatalogChanged'
    content.vb: >-
      Public Class DeploymentCatalog

          Inherits ComposablePartCatalog

          Implements IEnumerable(Of ComposablePartDefinition), IEnumerable, IDisposable, INotifyComposablePartCatalogChanged
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  - System.Collections.IEnumerable
  - System.IDisposable
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DeploymentCatalog()
  nameWithType: DeploymentCatalog.DeploymentCatalog()
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DeploymentCatalog()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nInitializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref> \nclass using assemblies in the current XAP.\n"
  example: []
  syntax:
    content: public DeploymentCatalog()
    content.vb: Public Sub New
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DeploymentCatalog(String)
  nameWithType: DeploymentCatalog.DeploymentCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DeploymentCatalog(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nInitializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>\nclass using the XAP file at the specified relative URI.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public DeploymentCatalog(string uriRelative)
    parameters:
    - id: uriRelative
      type: System.String
      description: The URI of the XAP file.
    content.vb: >-
      <NotImplemented>

      Public Sub New(uriRelative As String)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DeploymentCatalog(Uri)
  nameWithType: DeploymentCatalog.DeploymentCatalog(Uri)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DeploymentCatalog(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 49
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nInitializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>\nclass using the XAP file at the specified URI.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public DeploymentCatalog(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI of the XAP file.
    content.vb: >-
      <NotImplemented>

      Public Sub New(uri As Uri)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
  commentId: P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
  id: Parts
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: Parts
  nameWithType: DeploymentCatalog.Parts
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Parts
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 61
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nGets all the parts contained in the catalog.\n"
  example: []
  syntax:
    content: public override IQueryable<ComposablePartDefinition> Parts { get; }
    parameters: []
    return:
      type: System.Linq.IQueryable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "\nA query enumerating all the parts contained in the catalog.\n"
    content.vb: Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)
  overridden: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
  commentId: P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
  id: Uri
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: DeploymentCatalog.Uri
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Uri
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nGets the URI for the XAP file.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: DeploymentCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Changed
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 86
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nOccurs when the contents of the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>\nhave changed.\n"
  example: []
  syntax:
    content: public event EventHandler<ComposablePartCatalogChangeEventArgs> Changed
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
    content.vb: Public Event Changed As EventHandler(Of ComposablePartCatalogChangeEventArgs)
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: Changing
  nameWithType: DeploymentCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Changing
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 92
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nOccurs when the contents of the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>\nare changing.\n"
  example: []
  syntax:
    content: public event EventHandler<ComposablePartCatalogChangeEventArgs> Changing
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
    content.vb: Public Event Changing As EventHandler(Of ComposablePartCatalogChangeEventArgs)
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  id: DownloadCompleted
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DownloadCompleted
  nameWithType: DeploymentCatalog.DownloadCompleted
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DownloadCompleted
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 97
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nOccurs when the XAP file has finished downloading, or there has been an error.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public event EventHandler<AsyncCompletedEventArgs> DownloadCompleted
    return:
      type: System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs}
    content.vb: >-
      <NotImplemented>

      Public Event DownloadCompleted As EventHandler(Of AsyncCompletedEventArgs)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DownloadProgressChanged
  nameWithType: DeploymentCatalog.DownloadProgressChanged
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DownloadProgressChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nOccurs when the download progress of the XAP file changes.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public event EventHandler<DownloadProgressChangedEventArgs> DownloadProgressChanged
    return:
      type: System.EventHandler{System.Net.DownloadProgressChangedEventArgs}
    content.vb: >-
      <NotImplemented>

      Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  id: CancelAsync
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: CancelAsync()
  nameWithType: DeploymentCatalog.CancelAsync()
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CancelAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 133
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nCancels the XAP file download in progress.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void CancelAsync()
    content.vb: >-
      <NotImplemented>

      Public Sub CancelAsync
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe method is called before <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync\" data-throw-if-not-resolved=\"false\"></xref>\nor after the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted\" data-throw-if-not-resolved=\"false\"></xref> event has occurred.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  id: DownloadAsync
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: DownloadAsync()
  nameWithType: DeploymentCatalog.DownloadAsync()
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DownloadAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 146
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nBegins downloading the XAP file associated with the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void DownloadAsync()
    content.vb: >-
      <NotImplemented>

      Public Sub DownloadAsync
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThis method is called more than once, or after the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync\" data-throw-if-not-resolved=\"false\"></xref>\nmethod.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: GetExports(ImportDefinition)
  nameWithType: DeploymentCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetExports
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 164
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nGets the export definitions that match the constraint expressed by the specified\ndefinition.\n"
  example: []
  syntax:
    content: public override IEnumerable<Tuple<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "\nThe conditions of the <xref href=\"System.ComponentModel.Composition.Primitives.ExportDefinition\" data-throw-if-not-resolved=\"false\"></xref> objects to be returned.\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "\nA collection of <xref href=\"System.Tuple%602\" data-throw-if-not-resolved=\"false\"></xref> objects containing the <xref href=\"System.ComponentModel.Composition.Primitives.ExportDefinition\" data-throw-if-not-resolved=\"false\"></xref>\nobjects and their associated <xref href=\"System.ComponentModel.Composition.Primitives.ComposablePartDefinition\" data-throw-if-not-resolved=\"false\"></xref>\nobjects for objects that match the constraint specified by definition.\n"
    content.vb: Public Overrides Function GetExports(definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))
  overridden: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DeploymentCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Dispose
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 178
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nReleases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog\" data-throw-if-not-resolved=\"false\"></xref>\nand optionally releases the managed resources.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\ntrue to release both managed and unmanaged resources; false to release only unmanaged\nresources.\n"
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DeploymentCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 217
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nRaises the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed\" data-throw-if-not-resolved=\"false\"></xref>\nevent.\n"
  example: []
  syntax:
    content: protected virtual void OnChanged(ComposablePartCatalogChangeEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "\nA <xref href=\"System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\" data-throw-if-not-resolved=\"false\"></xref>\nobject that contains the event data.\n"
    content.vb: Protected Overridable Sub OnChanged(e As ComposablePartCatalogChangeEventArgs)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DeploymentCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnChanging
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 231
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nRaises the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnChanging(ComposablePartCatalogChangeEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "\nA <xref href=\"System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object that contains the event data.\n"
    content.vb: Protected Overridable Sub OnChanging(e As ComposablePartCatalogChangeEventArgs)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: OnDownloadCompleted(AsyncCompletedEventArgs)
  nameWithType: DeploymentCatalog.OnDownloadCompleted(AsyncCompletedEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnDownloadCompleted
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 245
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nRaises the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      protected virtual void OnDownloadCompleted(AsyncCompletedEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "\nA <xref href=\"System.ComponentModel.AsyncCompletedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object that contains the event data.\n"
    content.vb: >-
      <NotImplemented>

      Protected Overridable Sub OnDownloadCompleted(e As AsyncCompletedEventArgs)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  id: OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  langs:
  - csharp
  - vb
  name: OnDownloadProgressChanged(DownloadProgressChangedEventArgs)
  nameWithType: DeploymentCatalog.OnDownloadProgressChanged(DownloadProgressChangedEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnDownloadProgressChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel.Composition.Hosting/WORKINPROGRESS/DeploymentCatalog.cs
    startLine: 257
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel.Composition.Hosting
  summary: "\nRaises the <xref href=\"System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      protected virtual void OnDownloadProgressChanged(DownloadProgressChangedEventArgs e)
    parameters:
    - id: e
      type: System.Net.DownloadProgressChangedEventArgs
      description: "\nA <xref href=\"System.Net.DownloadProgressChangedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object that contains the event data.\n"
    content.vb: >-
      <NotImplemented>

      Protected Overridable Sub OnDownloadProgressChanged(e As DownloadProgressChangedEventArgs)
  overload: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.ComponentModel.Composition.Hosting
  commentId: N:System.ComponentModel.Composition.Hosting
  name: System.ComponentModel.Composition.Hosting
  nameWithType: System.ComponentModel.Composition.Hosting
  fullName: System.ComponentModel.Composition.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  commentId: T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: true
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ComposablePartDefinition>
  nameWithType: IEnumerable<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  nameWithType.vb: IEnumerable(Of ComposablePartDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.ComponentModel.Composition.Primitives.ComposablePartDefinition)
  name.vb: IEnumerable(Of ComposablePartDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  commentId: T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  parent: System.ComponentModel.Composition.Hosting
  isExternal: true
  name: INotifyComposablePartCatalogChanged
  nameWithType: INotifyComposablePartCatalogChanged
  fullName: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  commentId: M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: Dispose()
  nameWithType: ComposablePartCatalog.Dispose()
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose()
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    name: Dispose
    nameWithType: ComposablePartCatalog.Dispose
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    name: Dispose
    nameWithType: ComposablePartCatalog.Dispose
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
  commentId: M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: GetEnumerator()
  nameWithType: ComposablePartCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator()
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
    name: GetEnumerator
    nameWithType: ComposablePartCatalog.GetEnumerator
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
    name: GetEnumerator
    nameWithType: ComposablePartCatalog.GetEnumerator
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: ComposablePartCatalog.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ComposablePartCatalog.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ComposablePartCatalog.IEnumerable.GetEnumerator
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ComposablePartCatalog.System.Collections.IEnumerable.GetEnumerator
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.Composition.Primitives
  commentId: N:System.ComponentModel.Composition.Primitives
  isExternal: true
  name: System.ComponentModel.Composition.Primitives
  nameWithType: System.ComponentModel.Composition.Primitives
  fullName: System.ComponentModel.Composition.Primitives
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog
  commentId: T:System.ComponentModel.Composition.Hosting.DeploymentCatalog
  name: DeploymentCatalog
  nameWithType: DeploymentCatalog
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor
  name: DeploymentCatalog
  nameWithType: DeploymentCatalog.DeploymentCatalog
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DeploymentCatalog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  commentId: P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: Parts
  nameWithType: ComposablePartCatalog.Parts
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
  name: Parts
  nameWithType: DeploymentCatalog.Parts
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts
- uid: System.Linq.IQueryable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  commentId: T:System.Linq.IQueryable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<ComposablePartDefinition>
  nameWithType: IQueryable<ComposablePartDefinition>
  fullName: System.Linq.IQueryable<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  nameWithType.vb: IQueryable(Of ComposablePartDefinition)
  fullName.vb: System.Linq.IQueryable(Of System.ComponentModel.Composition.Primitives.ComposablePartDefinition)
  name.vb: IQueryable(Of ComposablePartDefinition)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
  name: Uri
  nameWithType: DeploymentCatalog.Uri
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri
- uid: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed
  commentId: E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed
  parent: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  isExternal: true
  name: Changed
  nameWithType: INotifyComposablePartCatalogChanged.Changed
  fullName: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  commentId: T:System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  nameWithType.vb: EventHandler(Of ComposablePartCatalogChangeEventArgs)
  fullName.vb: System.EventHandler(Of System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  name.vb: EventHandler(Of ComposablePartCatalogChangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing
  commentId: E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing
  parent: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  isExternal: true
  name: Changing
  nameWithType: INotifyComposablePartCatalogChanged.Changing
  fullName: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing
- uid: System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs}
  commentId: T:System.EventHandler{System.ComponentModel.AsyncCompletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<AsyncCompletedEventArgs>
  nameWithType: EventHandler<AsyncCompletedEventArgs>
  fullName: System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>
  nameWithType.vb: EventHandler(Of AsyncCompletedEventArgs)
  fullName.vb: System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
  name.vb: EventHandler(Of AsyncCompletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.AsyncCompletedEventArgs
    name: AsyncCompletedEventArgs
    nameWithType: AsyncCompletedEventArgs
    fullName: System.ComponentModel.AsyncCompletedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.AsyncCompletedEventArgs
    name: AsyncCompletedEventArgs
    nameWithType: AsyncCompletedEventArgs
    fullName: System.ComponentModel.AsyncCompletedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Net.DownloadProgressChangedEventArgs}
  commentId: T:System.EventHandler{System.Net.DownloadProgressChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.DownloadProgressChangedEventArgs>
  nameWithType.vb: EventHandler(Of DownloadProgressChangedEventArgs)
  fullName.vb: System.EventHandler(Of System.Net.DownloadProgressChangedEventArgs)
  name.vb: EventHandler(Of DownloadProgressChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: System.Net.DownloadProgressChangedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: System.Net.DownloadProgressChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  name: CancelAsync
  nameWithType: DeploymentCatalog.CancelAsync
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  commentId: M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
  name: DownloadAsync
  nameWithType: DeploymentCatalog.DownloadAsync
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync
- uid: System.ComponentModel.Composition.Primitives.ExportDefinition
  commentId: T:System.ComponentModel.Composition.Primitives.ExportDefinition
  isExternal: true
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
  commentId: T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition
  isExternal: true
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  commentId: M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: GetExports(ImportDefinition)
  nameWithType: ComposablePartCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
    name: GetExports
    nameWithType: ComposablePartCatalog.GetExports
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.Composition.Primitives.ImportDefinition
    name: ImportDefinition
    nameWithType: ImportDefinition
    fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
    name: GetExports
    nameWithType: ComposablePartCatalog.GetExports
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.Composition.Primitives.ImportDefinition
    name: ImportDefinition
    nameWithType: ImportDefinition
    fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports
  name: GetExports
  nameWithType: DeploymentCatalog.GetExports
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  commentId: T:System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: true
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Tuple<ComposablePartDefinition, ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition, ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition, System.ComponentModel.Composition.Primitives.ExportDefinition>>
  nameWithType.vb: IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Tuple(Of System.ComponentModel.Composition.Primitives.ComposablePartDefinition, System.ComponentModel.Composition.Primitives.ExportDefinition))
  name.vb: IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: System.ComponentModel.Composition.Primitives.ExportDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: System.ComponentModel.Composition.Primitives.ExportDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
  commentId: M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: ComposablePartCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ComposablePartCatalog.Dispose
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)
    name: Dispose
    nameWithType: ComposablePartCatalog.Dispose
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose
  name: Dispose
  nameWithType: DeploymentCatalog.Dispose
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  commentId: T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: true
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged
  name: OnChanged
  nameWithType: DeploymentCatalog.OnChanged
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing
  isExternal: true
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging
  name: OnChanging
  nameWithType: DeploymentCatalog.OnChanging
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging
- uid: System.ComponentModel.AsyncCompletedEventArgs
  commentId: T:System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted
  name: OnDownloadCompleted
  nameWithType: DeploymentCatalog.OnDownloadCompleted
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  commentId: E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged
  isExternal: true
- uid: System.Net.DownloadProgressChangedEventArgs
  commentId: T:System.Net.DownloadProgressChangedEventArgs
  parent: System.Net
  isExternal: true
  name: DownloadProgressChangedEventArgs
  nameWithType: DownloadProgressChangedEventArgs
  fullName: System.Net.DownloadProgressChangedEventArgs
- uid: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged*
  commentId: Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged
  name: OnDownloadProgressChanged
  nameWithType: DeploymentCatalog.OnDownloadProgressChanged
  fullName: System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged
- uid: System.Net
  commentId: N:System.Net
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
