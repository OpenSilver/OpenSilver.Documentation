### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.Automation.AutomationFactory
  commentId: T:System.Runtime.InteropServices.Automation.AutomationFactory
  id: AutomationFactory
  parent: System.Runtime.InteropServices.Automation
  children:
  - System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)
  - System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object,System.String)
  - System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)
  - System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
  langs:
  - csharp
  - vb
  name: AutomationFactory
  nameWithType: AutomationFactory
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AutomationFactory
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Runtime.InteropServices.Automation
  summary: "\nProvides access to registered Automation servers.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public static class AutomationFactory
    content.vb: >-
      <NotImplemented>

      Public Module AutomationFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
  commentId: P:System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
  id: IsAvailable
  parent: System.Runtime.InteropServices.Automation.AutomationFactory
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: AutomationFactory.IsAvailable
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAvailable
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Runtime.InteropServices.Automation
  summary: "\nGets a value that indicates whether the Automation feature in Silverlight is\navailable to the application.\n"
  example: []
  syntax:
    content: public static bool IsAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the Automation feature in Silverlight is available to the application;\notherwise, false.\n"
    content.vb: Public Shared ReadOnly Property IsAvailable As Boolean
  overload: System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)
  commentId: M:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)
  id: CreateObject(System.String)
  parent: System.Runtime.InteropServices.Automation.AutomationFactory
  langs:
  - csharp
  - vb
  name: CreateObject(String)
  nameWithType: AutomationFactory.CreateObject(String)
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Runtime.InteropServices.Automation
  summary: "\nActivates and returns a reference to the registered Automation server with the\nspecified programmatic identifier (ProgID).\n"
  example: []
  syntax:
    content: public static object CreateObject(string progID)
    parameters:
    - id: progID
      type: System.String
      description: "\nThe ProgID of the registered automation server to activate.\n"
    return:
      type: System.Object
      description: "\nA late-bound reference to the specified automation server.\n"
    content.vb: Public Shared Function CreateObject(progID As String) As Object
  overload: System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\nNo object was found registered for the specified progID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object,System.String)
  commentId: M:System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object,System.String)
  id: GetEvent(System.Object,System.String)
  parent: System.Runtime.InteropServices.Automation.AutomationFactory
  langs:
  - csharp
  - vb
  name: GetEvent(Object, String)
  nameWithType: AutomationFactory.GetEvent(Object, String)
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEvent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Runtime.InteropServices.Automation
  summary: "\nGets an object that represents the specified event of the specified Automation server.\n"
  example: []
  syntax:
    content: public static AutomationEvent GetEvent(object automationObject, string eventName)
    parameters:
    - id: automationObject
      type: System.Object
      description: "\nA reference to the Automation server to retrieve an event for.\n"
    - id: eventName
      type: System.String
      description: "\nThe name of the event to retrieve.\n"
    return:
      type: System.Runtime.InteropServices.Automation.AutomationEvent
      description: "\nAn object that represents the specified event.\n"
    content.vb: Public Shared Function GetEvent(automationObject As Object, eventName As String) As AutomationEvent
  overload: System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)
  commentId: M:System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)
  id: GetObject(System.String)
  parent: System.Runtime.InteropServices.Automation.AutomationFactory
  langs:
  - csharp
  - vb
  name: GetObject(String)
  nameWithType: AutomationFactory.GetObject(String)
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Runtime.InteropServices.Automation/AutomationFactory.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Runtime.InteropServices.Automation
  summary: "\nGets a reference to the previously activated and currently running Automation\nserver with the specified programmatic identifier (ProgID).\n"
  example: []
  syntax:
    content: public static object GetObject(string progID)
    parameters:
    - id: progID
      type: System.String
      description: "\nThe ProgID of the registered Automation server to retrieve a reference to.\n"
    return:
      type: System.Object
      description: "\nA late-bound reference to the specified Automation server.\n"
    content.vb: Public Shared Function GetObject(progID As String) As Object
  overload: System.Runtime.InteropServices.Automation.AutomationFactory.GetObject*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\nNo object was found registered for the specified progID.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices.Automation
  commentId: N:System.Runtime.InteropServices.Automation
  name: System.Runtime.InteropServices.Automation
  nameWithType: System.Runtime.InteropServices.Automation
  fullName: System.Runtime.InteropServices.Automation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable*
  commentId: Overload:System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
  name: IsAvailable
  nameWithType: AutomationFactory.IsAvailable
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject*
  commentId: Overload:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject
  name: CreateObject
  nameWithType: AutomationFactory.CreateObject
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent*
  commentId: Overload:System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent
  name: GetEvent
  nameWithType: AutomationFactory.GetEvent
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent
- uid: System.Runtime.InteropServices.Automation.AutomationEvent
  commentId: T:System.Runtime.InteropServices.Automation.AutomationEvent
  parent: System.Runtime.InteropServices.Automation
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Runtime.InteropServices.Automation.AutomationEvent
- uid: System.Runtime.InteropServices.Automation.AutomationFactory.GetObject*
  commentId: Overload:System.Runtime.InteropServices.Automation.AutomationFactory.GetObject
  name: GetObject
  nameWithType: AutomationFactory.GetObject
  fullName: System.Runtime.InteropServices.Automation.AutomationFactory.GetObject
