### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IPagedCollectionView
  commentId: T:System.ComponentModel.IPagedCollectionView
  id: IPagedCollectionView
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IPagedCollectionView.CanChangePage
  - System.ComponentModel.IPagedCollectionView.IsPageChanging
  - System.ComponentModel.IPagedCollectionView.ItemCount
  - System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  - System.ComponentModel.IPagedCollectionView.MoveToLastPage
  - System.ComponentModel.IPagedCollectionView.MoveToNextPage
  - System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  - System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  - System.ComponentModel.IPagedCollectionView.PageChanged
  - System.ComponentModel.IPagedCollectionView.PageChanging
  - System.ComponentModel.IPagedCollectionView.PageIndex
  - System.ComponentModel.IPagedCollectionView.PageSize
  - System.ComponentModel.IPagedCollectionView.TotalItemCount
  langs:
  - csharp
  - vb
  name: IPagedCollectionView
  nameWithType: IPagedCollectionView
  fullName: System.ComponentModel.IPagedCollectionView
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IPagedCollectionView
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 15
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nInterface used to drive paging of collection views.\n"
  example: []
  syntax:
    content: public interface IPagedCollectionView
    content.vb: Public Interface IPagedCollectionView
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.IPagedCollectionView.PageChanged
  commentId: E:System.ComponentModel.IPagedCollectionView.PageChanged
  id: PageChanged
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: PageChanged
  nameWithType: IPagedCollectionView.PageChanged
  fullName: System.ComponentModel.IPagedCollectionView.PageChanged
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PageChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nRaised when a page index change completed.\n"
  example: []
  syntax:
    content: event EventHandler<EventArgs> PageChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Event PageChanged As EventHandler(Of EventArgs)
- uid: System.ComponentModel.IPagedCollectionView.PageChanging
  commentId: E:System.ComponentModel.IPagedCollectionView.PageChanging
  id: PageChanging
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: PageChanging
  nameWithType: IPagedCollectionView.PageChanging
  fullName: System.ComponentModel.IPagedCollectionView.PageChanging
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PageChanging
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nRaised when a page index change is requested.\n"
  example: []
  syntax:
    content: event EventHandler<PageChangingEventArgs> PageChanging
    return:
      type: System.EventHandler{System.ComponentModel.PageChangingEventArgs}
    content.vb: Event PageChanging As EventHandler(Of PageChangingEventArgs)
- uid: System.ComponentModel.IPagedCollectionView.CanChangePage
  commentId: P:System.ComponentModel.IPagedCollectionView.CanChangePage
  id: CanChangePage
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: CanChangePage
  nameWithType: IPagedCollectionView.CanChangePage
  fullName: System.ComponentModel.IPagedCollectionView.CanChangePage
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanChangePage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets a value indicating whether the PageIndex value is allowed to change or not.\n"
  example: []
  syntax:
    content: bool CanChangePage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanChangePage As Boolean
  overload: System.ComponentModel.IPagedCollectionView.CanChangePage*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IPagedCollectionView.IsPageChanging
  commentId: P:System.ComponentModel.IPagedCollectionView.IsPageChanging
  id: IsPageChanging
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: IsPageChanging
  nameWithType: IPagedCollectionView.IsPageChanging
  fullName: System.ComponentModel.IPagedCollectionView.IsPageChanging
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsPageChanging
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 38
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets a value indicating whether a page index change is in process or not.\n"
  example: []
  syntax:
    content: bool IsPageChanging { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPageChanging As Boolean
  overload: System.ComponentModel.IPagedCollectionView.IsPageChanging*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IPagedCollectionView.ItemCount
  commentId: P:System.ComponentModel.IPagedCollectionView.ItemCount
  id: ItemCount
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: ItemCount
  nameWithType: IPagedCollectionView.ItemCount
  fullName: System.ComponentModel.IPagedCollectionView.ItemCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ItemCount
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets the number of known items in the view before paging is applied.\n"
  example: []
  syntax:
    content: int ItemCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property ItemCount As Integer
  overload: System.ComponentModel.IPagedCollectionView.ItemCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IPagedCollectionView.PageIndex
  commentId: P:System.ComponentModel.IPagedCollectionView.PageIndex
  id: PageIndex
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: PageIndex
  nameWithType: IPagedCollectionView.PageIndex
  fullName: System.ComponentModel.IPagedCollectionView.PageIndex
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PageIndex
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets the current page we are on. (zero based)\n"
  example: []
  syntax:
    content: int PageIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property PageIndex As Integer
  overload: System.ComponentModel.IPagedCollectionView.PageIndex*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IPagedCollectionView.PageSize
  commentId: P:System.ComponentModel.IPagedCollectionView.PageSize
  id: PageSize
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: IPagedCollectionView.PageSize
  fullName: System.ComponentModel.IPagedCollectionView.PageSize
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PageSize
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets or sets the number of items to display on a page.\n"
  example: []
  syntax:
    content: int PageSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property PageSize As Integer
  overload: System.ComponentModel.IPagedCollectionView.PageSize*
  modifiers.csharp:
  - get
  - set
- uid: System.ComponentModel.IPagedCollectionView.TotalItemCount
  commentId: P:System.ComponentModel.IPagedCollectionView.TotalItemCount
  id: TotalItemCount
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: TotalItemCount
  nameWithType: IPagedCollectionView.TotalItemCount
  fullName: System.ComponentModel.IPagedCollectionView.TotalItemCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TotalItemCount
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nGets the total number of items in the view before paging is applied,\nor -1 if that total number is unknown.\n"
  example: []
  syntax:
    content: int TotalItemCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property TotalItemCount As Integer
  overload: System.ComponentModel.IPagedCollectionView.TotalItemCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  id: MoveToFirstPage
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToFirstPage()
  nameWithType: IPagedCollectionView.MoveToFirstPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToFirstPage()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MoveToFirstPage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 81
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nMoves to the first page.\n"
  example: []
  syntax:
    content: bool MoveToFirstPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Function MoveToFirstPage As Boolean
  overload: System.ComponentModel.IPagedCollectionView.MoveToFirstPage*
- uid: System.ComponentModel.IPagedCollectionView.MoveToLastPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToLastPage
  id: MoveToLastPage
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToLastPage()
  nameWithType: IPagedCollectionView.MoveToLastPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToLastPage()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MoveToLastPage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 87
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nMoves to the last page.\n"
  example: []
  syntax:
    content: bool MoveToLastPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Function MoveToLastPage As Boolean
  overload: System.ComponentModel.IPagedCollectionView.MoveToLastPage*
- uid: System.ComponentModel.IPagedCollectionView.MoveToNextPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToNextPage
  id: MoveToNextPage
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToNextPage()
  nameWithType: IPagedCollectionView.MoveToNextPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToNextPage()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MoveToNextPage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 93
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nMoves to the page after the current page we are on.\n"
  example: []
  syntax:
    content: bool MoveToNextPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Function MoveToNextPage As Boolean
  overload: System.ComponentModel.IPagedCollectionView.MoveToNextPage*
- uid: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  id: MoveToPreviousPage
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToPreviousPage()
  nameWithType: IPagedCollectionView.MoveToPreviousPage()
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MoveToPreviousPage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 99
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nMoves to the page before the current page we are on.\n"
  example: []
  syntax:
    content: bool MoveToPreviousPage()
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Function MoveToPreviousPage As Boolean
  overload: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage*
- uid: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  commentId: M:System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  id: MoveToPage(System.Int32)
  parent: System.ComponentModel.IPagedCollectionView
  langs:
  - csharp
  - vb
  name: MoveToPage(Int32)
  nameWithType: IPagedCollectionView.MoveToPage(Int32)
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPage(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MoveToPage
    path: ../OpenSilverGit/src/Runtime/Runtime/PagedCollectionView/IPagedCollectionView.cs
    startLine: 106
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nMoves to page <code data-dev-comment-type=\"paramref\" class=\"paramref\">pageIndex</code>.\n"
  example: []
  syntax:
    content: bool MoveToPage(int pageIndex)
    parameters:
    - id: pageIndex
      type: System.Int32
      description: The index of the page to which to move.
    return:
      type: System.Boolean
      description: Whether or not the move was successful.
    content.vb: Function MoveToPage(pageIndex As Integer) As Boolean
  overload: System.ComponentModel.IPagedCollectionView.MoveToPage*
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{System.ComponentModel.PageChangingEventArgs}
  commentId: T:System.EventHandler{System.ComponentModel.PageChangingEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PageChangingEventArgs>
  nameWithType: EventHandler<PageChangingEventArgs>
  fullName: System.EventHandler<System.ComponentModel.PageChangingEventArgs>
  nameWithType.vb: EventHandler(Of PageChangingEventArgs)
  fullName.vb: System.EventHandler(Of System.ComponentModel.PageChangingEventArgs)
  name.vb: EventHandler(Of PageChangingEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.PageChangingEventArgs
    name: PageChangingEventArgs
    nameWithType: PageChangingEventArgs
    fullName: System.ComponentModel.PageChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.PageChangingEventArgs
    name: PageChangingEventArgs
    nameWithType: PageChangingEventArgs
    fullName: System.ComponentModel.PageChangingEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.IPagedCollectionView.CanChangePage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.CanChangePage
  name: CanChangePage
  nameWithType: IPagedCollectionView.CanChangePage
  fullName: System.ComponentModel.IPagedCollectionView.CanChangePage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IPagedCollectionView.IsPageChanging*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.IsPageChanging
  name: IsPageChanging
  nameWithType: IPagedCollectionView.IsPageChanging
  fullName: System.ComponentModel.IPagedCollectionView.IsPageChanging
- uid: System.ComponentModel.IPagedCollectionView.ItemCount*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.ItemCount
  name: ItemCount
  nameWithType: IPagedCollectionView.ItemCount
  fullName: System.ComponentModel.IPagedCollectionView.ItemCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IPagedCollectionView.PageIndex*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.PageIndex
  name: PageIndex
  nameWithType: IPagedCollectionView.PageIndex
  fullName: System.ComponentModel.IPagedCollectionView.PageIndex
- uid: System.ComponentModel.IPagedCollectionView.PageSize*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.PageSize
  name: PageSize
  nameWithType: IPagedCollectionView.PageSize
  fullName: System.ComponentModel.IPagedCollectionView.PageSize
- uid: System.ComponentModel.IPagedCollectionView.TotalItemCount*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.TotalItemCount
  name: TotalItemCount
  nameWithType: IPagedCollectionView.TotalItemCount
  fullName: System.ComponentModel.IPagedCollectionView.TotalItemCount
- uid: System.ComponentModel.IPagedCollectionView.MoveToFirstPage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.MoveToFirstPage
  name: MoveToFirstPage
  nameWithType: IPagedCollectionView.MoveToFirstPage
  fullName: System.ComponentModel.IPagedCollectionView.MoveToFirstPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToLastPage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.MoveToLastPage
  name: MoveToLastPage
  nameWithType: IPagedCollectionView.MoveToLastPage
  fullName: System.ComponentModel.IPagedCollectionView.MoveToLastPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToNextPage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.MoveToNextPage
  name: MoveToNextPage
  nameWithType: IPagedCollectionView.MoveToNextPage
  fullName: System.ComponentModel.IPagedCollectionView.MoveToNextPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
  name: MoveToPreviousPage
  nameWithType: IPagedCollectionView.MoveToPreviousPage
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPreviousPage
- uid: System.ComponentModel.IPagedCollectionView.MoveToPage*
  commentId: Overload:System.ComponentModel.IPagedCollectionView.MoveToPage
  name: MoveToPage
  nameWithType: IPagedCollectionView.MoveToPage
  fullName: System.ComponentModel.IPagedCollectionView.MoveToPage
