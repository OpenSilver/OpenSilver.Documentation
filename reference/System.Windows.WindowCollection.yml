### YamlMime:ManagedReference
items:
- uid: System.Windows.WindowCollection
  commentId: T:System.Windows.WindowCollection
  id: WindowCollection
  parent: System.Windows
  children:
  - System.Windows.WindowCollection.Count
  - System.Windows.WindowCollection.GetEnumerator
  - System.Windows.WindowCollection.IsSynchronized
  - System.Windows.WindowCollection.SyncRoot
  - System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  - vb
  name: WindowCollection
  nameWithType: WindowCollection
  fullName: System.Windows.WindowCollection
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowCollection
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents a collection of <xref href=\"System.Windows.Window\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: 'public sealed class WindowCollection : ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class WindowCollection
          Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.WindowCollection.Count
  commentId: P:System.Windows.WindowCollection.Count
  id: Count
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Count
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 36
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the number of windows in the collection.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of windows in the collection.\n"
    content.vb: Public ReadOnly Property Count As Integer
  overload: System.Windows.WindowCollection.Count*
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.IsSynchronized
  commentId: P:System.Windows.WindowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsSynchronized
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 44
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates whether access to the collection is synchronized (thread safe).\n"
  example: []
  syntax:
    content: public bool IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nAlways returns false.\n"
    content.vb: Public ReadOnly Property IsSynchronized As Boolean
  overload: System.Windows.WindowCollection.IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.SyncRoot
  commentId: P:System.Windows.WindowCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SyncRoot
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets an object that can be used to synchronize access to the <xref href=\"System.Windows.WindowCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public object SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
      description: "\nAn object that can be used to synchronize access to the <xref href=\"System.Windows.WindowCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property SyncRoot As Object
  overload: System.Windows.WindowCollection.SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowCollection.GetEnumerator
  commentId: M:System.Windows.WindowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: WindowCollection.GetEnumerator()
  fullName: System.Windows.WindowCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEnumerator
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 60
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: "\nAn enumerator for the collection.\n"
    content.vb: Public Function GetEnumerator As IEnumerator
  overload: System.Windows.WindowCollection.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: WindowCollection.ICollection.CopyTo(Array, Int32)
  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowCollection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.Collections.ICollection.CopyTo
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowCollection.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.Windows
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
  overload: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: WindowCollection.System.Collections.ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
references:
- uid: System.Windows.Window
  commentId: T:System.Windows.Window
  parent: System.Windows
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Windows.WindowCollection.Count*
  commentId: Overload:System.Windows.WindowCollection.Count
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.WindowCollection.IsSynchronized*
  commentId: Overload:System.Windows.WindowCollection.IsSynchronized
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.WindowCollection
  commentId: T:System.Windows.WindowCollection
  parent: System.Windows
  name: WindowCollection
  nameWithType: WindowCollection
  fullName: System.Windows.WindowCollection
- uid: System.Windows.WindowCollection.SyncRoot*
  commentId: Overload:System.Windows.WindowCollection.SyncRoot
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Windows.WindowCollection.GetEnumerator*
  commentId: Overload:System.Windows.WindowCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: WindowCollection.GetEnumerator
  fullName: System.Windows.WindowCollection.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo*
  commentId: Overload:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo
  name: ICollection.CopyTo
  nameWithType: WindowCollection.ICollection.CopyTo
  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo
  nameWithType.vb: WindowCollection.System.Collections.ICollection.CopyTo
  name.vb: System.Collections.ICollection.CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
