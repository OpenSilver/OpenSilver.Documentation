### YamlMime:ManagedReference
items:
- uid: System.Windows.Browser.HtmlEventArgs
  commentId: T:System.Windows.Browser.HtmlEventArgs
  id: HtmlEventArgs
  parent: System.Windows.Browser
  children:
  - System.Windows.Browser.HtmlEventArgs.AltKey
  - System.Windows.Browser.HtmlEventArgs.CharacterCode
  - System.Windows.Browser.HtmlEventArgs.ClientX
  - System.Windows.Browser.HtmlEventArgs.ClientY
  - System.Windows.Browser.HtmlEventArgs.CtrlKey
  - System.Windows.Browser.HtmlEventArgs.EventObject
  - System.Windows.Browser.HtmlEventArgs.EventType
  - System.Windows.Browser.HtmlEventArgs.KeyCode
  - System.Windows.Browser.HtmlEventArgs.MouseButton
  - System.Windows.Browser.HtmlEventArgs.OffsetX
  - System.Windows.Browser.HtmlEventArgs.OffsetY
  - System.Windows.Browser.HtmlEventArgs.PreventDefault
  - System.Windows.Browser.HtmlEventArgs.ScreenX
  - System.Windows.Browser.HtmlEventArgs.ScreenY
  - System.Windows.Browser.HtmlEventArgs.ShiftKey
  - System.Windows.Browser.HtmlEventArgs.Source
  - System.Windows.Browser.HtmlEventArgs.StopPropagation
  langs:
  - csharp
  - vb
  name: HtmlEventArgs
  nameWithType: HtmlEventArgs
  fullName: System.Windows.Browser.HtmlEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HtmlEventArgs
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 21
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nProvides event details to event handlers.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public class HtmlEventArgs : EventArgs
    content.vb: >-
      <NotImplemented>

      Public Class HtmlEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Browser.HtmlEventArgs.AltKey
  commentId: P:System.Windows.Browser.HtmlEventArgs.AltKey
  id: AltKey
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: AltKey
  nameWithType: HtmlEventArgs.AltKey
  fullName: System.Windows.Browser.HtmlEventArgs.AltKey
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AltKey
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 32
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the state of the ALT key when the event was raised.\n"
  example: []
  syntax:
    content: public bool AltKey { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the ALT key was pressed when the event was raised; otherwise, false.\n"
    content.vb: Public ReadOnly Property AltKey As Boolean
  overload: System.Windows.Browser.HtmlEventArgs.AltKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.CharacterCode
  commentId: P:System.Windows.Browser.HtmlEventArgs.CharacterCode
  id: CharacterCode
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: CharacterCode
  nameWithType: HtmlEventArgs.CharacterCode
  fullName: System.Windows.Browser.HtmlEventArgs.CharacterCode
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CharacterCode
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 41
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the integer Unicode value of a key that was pressed.\n"
  example: []
  syntax:
    content: public int CharacterCode { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nAn integer Unicode value of the key that was pressed if the <xref href=\"System.Windows.Browser.HtmlEventArgs.EventType\" data-throw-if-not-resolved=\"false\"></xref>\nproperty value is &quot;keypress&quot;; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property CharacterCode As Integer
  overload: System.Windows.Browser.HtmlEventArgs.CharacterCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.ClientX
  commentId: P:System.Windows.Browser.HtmlEventArgs.ClientX
  id: ClientX
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: ClientX
  nameWithType: HtmlEventArgs.ClientX
  fullName: System.Windows.Browser.HtmlEventArgs.ClientX
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClientX
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 51
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the x-coordinate mouse position in pixels relative to the client area of\nthe window.\n"
  example: []
  syntax:
    content: public int ClientX { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe x-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property ClientX As Integer
  overload: System.Windows.Browser.HtmlEventArgs.ClientX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.ClientY
  commentId: P:System.Windows.Browser.HtmlEventArgs.ClientY
  id: ClientY
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: ClientY
  nameWithType: HtmlEventArgs.ClientY
  fullName: System.Windows.Browser.HtmlEventArgs.ClientY
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClientY
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 61
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the y-coordinate mouse position in pixels relative to the client area of\nthe window.\n"
  example: []
  syntax:
    content: public int ClientY { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe y-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property ClientY As Integer
  overload: System.Windows.Browser.HtmlEventArgs.ClientY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.CtrlKey
  commentId: P:System.Windows.Browser.HtmlEventArgs.CtrlKey
  id: CtrlKey
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: CtrlKey
  nameWithType: HtmlEventArgs.CtrlKey
  fullName: System.Windows.Browser.HtmlEventArgs.CtrlKey
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CtrlKey
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 69
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the state of the CTRL key when the event was raised.\n"
  example: []
  syntax:
    content: public bool CtrlKey { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the CTRL key was pressed when the event was raised; otherwise, false.\n"
    content.vb: Public ReadOnly Property CtrlKey As Boolean
  overload: System.Windows.Browser.HtmlEventArgs.CtrlKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.EventObject
  commentId: P:System.Windows.Browser.HtmlEventArgs.EventObject
  id: EventObject
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: EventObject
  nameWithType: HtmlEventArgs.EventObject
  fullName: System.Windows.Browser.HtmlEventArgs.EventObject
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EventObject
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 77
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the underlying HTML event object.\n"
  example: []
  syntax:
    content: public ScriptObject EventObject { get; }
    parameters: []
    return:
      type: System.Windows.Browser.ScriptObject
      description: "\nAn HTML event object.\n"
    content.vb: Public ReadOnly Property EventObject As ScriptObject
  overload: System.Windows.Browser.HtmlEventArgs.EventObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.EventType
  commentId: P:System.Windows.Browser.HtmlEventArgs.EventType
  id: EventType
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: HtmlEventArgs.EventType
  fullName: System.Windows.Browser.HtmlEventArgs.EventType
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EventType
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 85
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the name of the event raised by the browser.\n"
  example: []
  syntax:
    content: public string EventType { get; }
    parameters: []
    return:
      type: System.String
      description: "\nAn event name.\n"
    content.vb: Public ReadOnly Property EventType As String
  overload: System.Windows.Browser.HtmlEventArgs.EventType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.KeyCode
  commentId: P:System.Windows.Browser.HtmlEventArgs.KeyCode
  id: KeyCode
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: KeyCode
  nameWithType: HtmlEventArgs.KeyCode
  fullName: System.Windows.Browser.HtmlEventArgs.KeyCode
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: KeyCode
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 95
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the integer Unicode value of a key that is associated with a keyboard event\nother than &quot;keypress&quot;.\n"
  example: []
  syntax:
    content: public int KeyCode { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe integer Unicode value of a key involved in a keyboard event, if the event\nis not &quot;keypress&quot;; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property KeyCode As Integer
  overload: System.Windows.Browser.HtmlEventArgs.KeyCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.MouseButton
  commentId: P:System.Windows.Browser.HtmlEventArgs.MouseButton
  id: MouseButton
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: MouseButton
  nameWithType: HtmlEventArgs.MouseButton
  fullName: System.Windows.Browser.HtmlEventArgs.MouseButton
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MouseButton
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 103
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the mouse buttons that were clicked at the time the event was raised.\n"
  example: []
  syntax:
    content: public MouseButtons MouseButton { get; }
    parameters: []
    return:
      type: System.Windows.Browser.MouseButtons
      description: "\nOne of the enumeration values that indicates which mouse button was clicked.\n"
    content.vb: Public ReadOnly Property MouseButton As MouseButtons
  overload: System.Windows.Browser.HtmlEventArgs.MouseButton*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.OffsetX
  commentId: P:System.Windows.Browser.HtmlEventArgs.OffsetX
  id: OffsetX
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: OffsetX
  nameWithType: HtmlEventArgs.OffsetX
  fullName: System.Windows.Browser.HtmlEventArgs.OffsetX
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OffsetX
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 113
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the x-coordinate mouse position in pixels relative to the HTML object that\nraised the event.\n"
  example: []
  syntax:
    content: public int OffsetX { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe x-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property OffsetX As Integer
  overload: System.Windows.Browser.HtmlEventArgs.OffsetX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.OffsetY
  commentId: P:System.Windows.Browser.HtmlEventArgs.OffsetY
  id: OffsetY
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: OffsetY
  nameWithType: HtmlEventArgs.OffsetY
  fullName: System.Windows.Browser.HtmlEventArgs.OffsetY
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OffsetY
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 123
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the y-coordinate mouse position in pixels relative to the HTML object that\nraised the event.\n"
  example: []
  syntax:
    content: public int OffsetY { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe y-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property OffsetY As Integer
  overload: System.Windows.Browser.HtmlEventArgs.OffsetY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.ScreenX
  commentId: P:System.Windows.Browser.HtmlEventArgs.ScreenX
  id: ScreenX
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: ScreenX
  nameWithType: HtmlEventArgs.ScreenX
  fullName: System.Windows.Browser.HtmlEventArgs.ScreenX
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ScreenX
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 132
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the x-coordinate mouse position in pixels relative to the user&apos;s screen.\n"
  example: []
  syntax:
    content: public int ScreenX { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe x-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property ScreenX As Integer
  overload: System.Windows.Browser.HtmlEventArgs.ScreenX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.ScreenY
  commentId: P:System.Windows.Browser.HtmlEventArgs.ScreenY
  id: ScreenY
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: ScreenY
  nameWithType: HtmlEventArgs.ScreenY
  fullName: System.Windows.Browser.HtmlEventArgs.ScreenY
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ScreenY
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 141
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the y-coordinate mouse position in pixels relative to the user&apos;s screen.\n"
  example: []
  syntax:
    content: public int ScreenY { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe y-coordinate mouse position in pixels if the Document Object Model (DOM)\nevent includes position information; otherwise, 0 (zero).\n"
    content.vb: Public ReadOnly Property ScreenY As Integer
  overload: System.Windows.Browser.HtmlEventArgs.ScreenY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.ShiftKey
  commentId: P:System.Windows.Browser.HtmlEventArgs.ShiftKey
  id: ShiftKey
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: ShiftKey
  nameWithType: HtmlEventArgs.ShiftKey
  fullName: System.Windows.Browser.HtmlEventArgs.ShiftKey
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShiftKey
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 149
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets the state of the SHIFT key when the event was raised.\n"
  example: []
  syntax:
    content: public bool ShiftKey { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the SHIFT key was pressed when the event was raised; otherwise, false.\n"
    content.vb: Public ReadOnly Property ShiftKey As Boolean
  overload: System.Windows.Browser.HtmlEventArgs.ShiftKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.Source
  commentId: P:System.Windows.Browser.HtmlEventArgs.Source
  id: Source
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: HtmlEventArgs.Source
  fullName: System.Windows.Browser.HtmlEventArgs.Source
  type: Property
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Source
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 158
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nGets a reference to the Document Object Model (DOM) element or object that raised\nthe event.\n"
  example: []
  syntax:
    content: public HtmlObject Source { get; }
    parameters: []
    return:
      type: System.Windows.Browser.HtmlObject
      description: "\nA reference to the DOM element or object that raised the event.\n"
    content.vb: Public ReadOnly Property Source As HtmlObject
  overload: System.Windows.Browser.HtmlEventArgs.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.HtmlEventArgs.PreventDefault
  commentId: M:System.Windows.Browser.HtmlEventArgs.PreventDefault
  id: PreventDefault
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: PreventDefault()
  nameWithType: HtmlEventArgs.PreventDefault()
  fullName: System.Windows.Browser.HtmlEventArgs.PreventDefault()
  type: Method
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PreventDefault
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 167
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nSpecifies that the associated Document Object Model (DOM) element should not\nperform the default action for the current event.\n"
  example: []
  syntax:
    content: public void PreventDefault()
    content.vb: Public Sub PreventDefault
  overload: System.Windows.Browser.HtmlEventArgs.PreventDefault*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nAn unexpected error occurred.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Browser.HtmlEventArgs.StopPropagation
  commentId: M:System.Windows.Browser.HtmlEventArgs.StopPropagation
  id: StopPropagation
  parent: System.Windows.Browser.HtmlEventArgs
  langs:
  - csharp
  - vb
  name: StopPropagation()
  nameWithType: HtmlEventArgs.StopPropagation()
  fullName: System.Windows.Browser.HtmlEventArgs.StopPropagation()
  type: Method
  source:
    remote:
      path: src/Runtime/Browser/HtmlEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StopPropagation
    path: ../OpenSilverGit/src/Runtime/Browser/HtmlEventArgs.cs
    startLine: 177
  assemblies:
  - OpenSilver.Browser
  namespace: System.Windows.Browser
  summary: "\nSpecifies that the event should not bubble up the Document Object Model (DOM)\nhierarchy.\n"
  example: []
  syntax:
    content: public void StopPropagation()
    content.vb: Public Sub StopPropagation
  overload: System.Windows.Browser.HtmlEventArgs.StopPropagation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nAn unexpected error occurred.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Browser
  commentId: N:System.Windows.Browser
  name: System.Windows.Browser
  nameWithType: System.Windows.Browser
  fullName: System.Windows.Browser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Browser.HtmlEventArgs.AltKey*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.AltKey
  name: AltKey
  nameWithType: HtmlEventArgs.AltKey
  fullName: System.Windows.Browser.HtmlEventArgs.AltKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Browser.HtmlEventArgs.EventType
  commentId: P:System.Windows.Browser.HtmlEventArgs.EventType
  isExternal: true
- uid: System.Windows.Browser.HtmlEventArgs.CharacterCode*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.CharacterCode
  name: CharacterCode
  nameWithType: HtmlEventArgs.CharacterCode
  fullName: System.Windows.Browser.HtmlEventArgs.CharacterCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Browser.HtmlEventArgs.ClientX*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.ClientX
  name: ClientX
  nameWithType: HtmlEventArgs.ClientX
  fullName: System.Windows.Browser.HtmlEventArgs.ClientX
- uid: System.Windows.Browser.HtmlEventArgs.ClientY*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.ClientY
  name: ClientY
  nameWithType: HtmlEventArgs.ClientY
  fullName: System.Windows.Browser.HtmlEventArgs.ClientY
- uid: System.Windows.Browser.HtmlEventArgs.CtrlKey*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.CtrlKey
  name: CtrlKey
  nameWithType: HtmlEventArgs.CtrlKey
  fullName: System.Windows.Browser.HtmlEventArgs.CtrlKey
- uid: System.Windows.Browser.HtmlEventArgs.EventObject*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.EventObject
  name: EventObject
  nameWithType: HtmlEventArgs.EventObject
  fullName: System.Windows.Browser.HtmlEventArgs.EventObject
- uid: System.Windows.Browser.ScriptObject
  commentId: T:System.Windows.Browser.ScriptObject
  parent: System.Windows.Browser
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: System.Windows.Browser.ScriptObject
- uid: System.Windows.Browser.HtmlEventArgs.EventType*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.EventType
  name: EventType
  nameWithType: HtmlEventArgs.EventType
  fullName: System.Windows.Browser.HtmlEventArgs.EventType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Browser.HtmlEventArgs.KeyCode*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.KeyCode
  name: KeyCode
  nameWithType: HtmlEventArgs.KeyCode
  fullName: System.Windows.Browser.HtmlEventArgs.KeyCode
- uid: System.Windows.Browser.HtmlEventArgs.MouseButton*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.MouseButton
  name: MouseButton
  nameWithType: HtmlEventArgs.MouseButton
  fullName: System.Windows.Browser.HtmlEventArgs.MouseButton
- uid: System.Windows.Browser.MouseButtons
  commentId: T:System.Windows.Browser.MouseButtons
  parent: System.Windows.Browser
  name: MouseButtons
  nameWithType: MouseButtons
  fullName: System.Windows.Browser.MouseButtons
- uid: System.Windows.Browser.HtmlEventArgs.OffsetX*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.OffsetX
  name: OffsetX
  nameWithType: HtmlEventArgs.OffsetX
  fullName: System.Windows.Browser.HtmlEventArgs.OffsetX
- uid: System.Windows.Browser.HtmlEventArgs.OffsetY*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.OffsetY
  name: OffsetY
  nameWithType: HtmlEventArgs.OffsetY
  fullName: System.Windows.Browser.HtmlEventArgs.OffsetY
- uid: System.Windows.Browser.HtmlEventArgs.ScreenX*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.ScreenX
  name: ScreenX
  nameWithType: HtmlEventArgs.ScreenX
  fullName: System.Windows.Browser.HtmlEventArgs.ScreenX
- uid: System.Windows.Browser.HtmlEventArgs.ScreenY*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.ScreenY
  name: ScreenY
  nameWithType: HtmlEventArgs.ScreenY
  fullName: System.Windows.Browser.HtmlEventArgs.ScreenY
- uid: System.Windows.Browser.HtmlEventArgs.ShiftKey*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.ShiftKey
  name: ShiftKey
  nameWithType: HtmlEventArgs.ShiftKey
  fullName: System.Windows.Browser.HtmlEventArgs.ShiftKey
- uid: System.Windows.Browser.HtmlEventArgs.Source*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.Source
  name: Source
  nameWithType: HtmlEventArgs.Source
  fullName: System.Windows.Browser.HtmlEventArgs.Source
- uid: System.Windows.Browser.HtmlObject
  commentId: T:System.Windows.Browser.HtmlObject
  parent: System.Windows.Browser
  name: HtmlObject
  nameWithType: HtmlObject
  fullName: System.Windows.Browser.HtmlObject
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Browser.HtmlEventArgs.PreventDefault*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.PreventDefault
  name: PreventDefault
  nameWithType: HtmlEventArgs.PreventDefault
  fullName: System.Windows.Browser.HtmlEventArgs.PreventDefault
- uid: System.Windows.Browser.HtmlEventArgs.StopPropagation*
  commentId: Overload:System.Windows.Browser.HtmlEventArgs.StopPropagation
  name: StopPropagation
  nameWithType: HtmlEventArgs.StopPropagation
  fullName: System.Windows.Browser.HtmlEventArgs.StopPropagation
