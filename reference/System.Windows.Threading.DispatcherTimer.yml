### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherTimer
  commentId: T:System.Windows.Threading.DispatcherTimer
  id: DispatcherTimer
  parent: System.Windows.Threading
  children:
  - System.Windows.Threading.DispatcherTimer.#ctor
  - System.Windows.Threading.DispatcherTimer.Interval
  - System.Windows.Threading.DispatcherTimer.IsEnabled
  - System.Windows.Threading.DispatcherTimer.OnTick
  - System.Windows.Threading.DispatcherTimer.Start
  - System.Windows.Threading.DispatcherTimer.Stop
  - System.Windows.Threading.DispatcherTimer.Tick
  langs:
  - csharp
  - vb
  name: DispatcherTimer
  nameWithType: DispatcherTimer
  fullName: System.Windows.Threading.DispatcherTimer
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DispatcherTimer
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 23
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nA timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> queue, which is \nprocessed at a specified interval of time and at a specified priority.\n"
  example: []
  syntax:
    content: public class DispatcherTimer
    content.vb: Public Class DispatcherTimer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Threading.DispatcherTimer.#ctor
  commentId: M:System.Windows.Threading.DispatcherTimer.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: DispatcherTimer()
  nameWithType: DispatcherTimer.DispatcherTimer()
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DispatcherTimer()
    content.vb: Public Sub New
  overload: System.Windows.Threading.DispatcherTimer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.DispatcherTimer.Interval
  commentId: P:System.Windows.Threading.DispatcherTimer.Interval
  id: Interval
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: DispatcherTimer.Interval
  fullName: System.Windows.Threading.DispatcherTimer.Interval
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Interval
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 42
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nGets or sets the amount of time between timer ticks.\n"
  example: []
  syntax:
    content: public TimeSpan Interval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nThe amount of time between ticks. The default is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Interval As TimeSpan
  overload: System.Windows.Threading.DispatcherTimer.Interval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nThe specified value when setting this property represents a negative time interval.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.DispatcherTimer.IsEnabled
  commentId: P:System.Windows.Threading.DispatcherTimer.IsEnabled
  id: IsEnabled
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: DispatcherTimer.IsEnabled
  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsEnabled
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 64
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nGets a value that indicates whether the timer is running.\n"
  example: []
  syntax:
    content: public bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEnabled As Boolean
  overload: System.Windows.Threading.DispatcherTimer.IsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Threading.DispatcherTimer.Tick
  commentId: E:System.Windows.Threading.DispatcherTimer.Tick
  id: Tick
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: Tick
  nameWithType: DispatcherTimer.Tick
  fullName: System.Windows.Threading.DispatcherTimer.Tick
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Tick
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 69
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nOccurs when the timer interval has elapsed.\n"
  example: []
  syntax:
    content: public event EventHandler Tick
    return:
      type: System.EventHandler
    content.vb: Public Event Tick As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.DispatcherTimer.OnTick
  commentId: M:System.Windows.Threading.DispatcherTimer.OnTick
  id: OnTick
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: OnTick()
  nameWithType: DispatcherTimer.OnTick()
  fullName: System.Windows.Threading.DispatcherTimer.OnTick()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnTick
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 74
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nRaises the Tick event.\n"
  example: []
  syntax:
    content: protected void OnTick()
    content.vb: Protected Sub OnTick
  overload: System.Windows.Threading.DispatcherTimer.OnTick*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Threading.DispatcherTimer.Start
  commentId: M:System.Windows.Threading.DispatcherTimer.Start
  id: Start
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: DispatcherTimer.Start()
  fullName: System.Windows.Threading.DispatcherTimer.Start()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Start
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nStarts the <xref href=\"System.Windows.Threading.DispatcherTimer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: System.Windows.Threading.DispatcherTimer.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.DispatcherTimer.Stop
  commentId: M:System.Windows.Threading.DispatcherTimer.Stop
  id: Stop
  parent: System.Windows.Threading.DispatcherTimer
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: DispatcherTimer.Stop()
  fullName: System.Windows.Threading.DispatcherTimer.Stop()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Stop
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/DispatcherTimer.cs
    startLine: 84
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nStops the <xref href=\"System.Windows.Threading.DispatcherTimer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: System.Windows.Threading.DispatcherTimer.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Threading.Dispatcher
  commentId: T:System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Threading.DispatcherTimer
  commentId: T:System.Windows.Threading.DispatcherTimer
  name: DispatcherTimer
  nameWithType: DispatcherTimer
  fullName: System.Windows.Threading.DispatcherTimer
- uid: System.Windows.Threading.DispatcherTimer.#ctor*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.#ctor
  name: DispatcherTimer
  nameWithType: DispatcherTimer.DispatcherTimer
  fullName: System.Windows.Threading.DispatcherTimer.DispatcherTimer
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Windows.Threading.DispatcherTimer.Interval*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.Interval
  name: Interval
  nameWithType: DispatcherTimer.Interval
  fullName: System.Windows.Threading.DispatcherTimer.Interval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Threading.DispatcherTimer.IsEnabled*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.IsEnabled
  name: IsEnabled
  nameWithType: DispatcherTimer.IsEnabled
  fullName: System.Windows.Threading.DispatcherTimer.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Threading.DispatcherTimer.OnTick*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.OnTick
  name: OnTick
  nameWithType: DispatcherTimer.OnTick
  fullName: System.Windows.Threading.DispatcherTimer.OnTick
- uid: System.Windows.Threading.DispatcherTimer.Start*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.Start
  name: Start
  nameWithType: DispatcherTimer.Start
  fullName: System.Windows.Threading.DispatcherTimer.Start
- uid: System.Windows.Threading.DispatcherTimer.Stop*
  commentId: Overload:System.Windows.Threading.DispatcherTimer.Stop
  name: Stop
  nameWithType: DispatcherTimer.Stop
  fullName: System.Windows.Threading.DispatcherTimer.Stop
