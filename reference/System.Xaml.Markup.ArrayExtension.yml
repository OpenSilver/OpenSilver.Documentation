### YamlMime:ManagedReference
items:
- uid: System.Xaml.Markup.ArrayExtension
  commentId: T:System.Xaml.Markup.ArrayExtension
  id: ArrayExtension
  parent: System.Xaml.Markup
  children:
  - System.Xaml.Markup.ArrayExtension.#ctor
  - System.Xaml.Markup.ArrayExtension.#ctor(System.Array)
  - System.Xaml.Markup.ArrayExtension.#ctor(System.Type)
  - System.Xaml.Markup.ArrayExtension.AddChild(System.Object)
  - System.Xaml.Markup.ArrayExtension.AddText(System.String)
  - System.Xaml.Markup.ArrayExtension.Items
  - System.Xaml.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)
  - System.Xaml.Markup.ArrayExtension.Type
  langs:
  - csharp
  - vb
  name: ArrayExtension
  nameWithType: ArrayExtension
  fullName: System.Xaml.Markup.ArrayExtension
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ArrayExtension
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 32
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: >-
      [MarkupExtensionReturnType(typeof(Array))]

      public class ArrayExtension : MarkupExtension, IMarkupExtension<object>
    content.vb: >-
      <MarkupExtensionReturnType(GetType(Array))>

      Public Class ArrayExtension
          Inherits MarkupExtension
          Implements IMarkupExtension(Of Object)
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  implements:
  - System.Xaml.IMarkupExtension{System.Object}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.Xaml.Markup.MarkupExtensionReturnTypeAttribute
    ctor: System.Xaml.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Array
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xaml.Markup.ArrayExtension.#ctor
  commentId: M:System.Xaml.Markup.ArrayExtension.#ctor
  id: '#ctor'
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: ArrayExtension()
  nameWithType: ArrayExtension.ArrayExtension()
  fullName: System.Xaml.Markup.ArrayExtension.ArrayExtension()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 37
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public ArrayExtension()
    content.vb: Public Sub New
  overload: System.Xaml.Markup.ArrayExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.#ctor(System.Array)
  commentId: M:System.Xaml.Markup.ArrayExtension.#ctor(System.Array)
  id: '#ctor(System.Array)'
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: ArrayExtension(Array)
  nameWithType: ArrayExtension.ArrayExtension(Array)
  fullName: System.Xaml.Markup.ArrayExtension.ArrayExtension(System.Array)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 42
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public ArrayExtension(Array elements)
    parameters:
    - id: elements
      type: System.Array
    content.vb: Public Sub New(elements As Array)
  overload: System.Xaml.Markup.ArrayExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.#ctor(System.Type)
  commentId: M:System.Xaml.Markup.ArrayExtension.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: ArrayExtension(Type)
  nameWithType: ArrayExtension.ArrayExtension(Type)
  fullName: System.Xaml.Markup.ArrayExtension.ArrayExtension(System.Type)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 50
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public ArrayExtension(Type arrayType)
    parameters:
    - id: arrayType
      type: System.Type
    content.vb: Public Sub New(arrayType As Type)
  overload: System.Xaml.Markup.ArrayExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.Type
  commentId: P:System.Xaml.Markup.ArrayExtension.Type
  id: Type
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ArrayExtension.Type
  fullName: System.Xaml.Markup.ArrayExtension.Type
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Type
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 58
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: >-
      [ConstructorArgument("arrayType")]

      public Type Type { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <ConstructorArgument("arrayType")>

      Public Property Type As Type
  overload: System.Xaml.Markup.ArrayExtension.Type*
  attributes:
  - type: System.Xaml.Markup.ConstructorArgumentAttribute
    ctor: System.Xaml.Markup.ConstructorArgumentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: arrayType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.Items
  commentId: P:System.Xaml.Markup.ArrayExtension.Items
  id: Items
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ArrayExtension.Items
  fullName: System.Xaml.Markup.ArrayExtension.Items
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Items
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 63
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public IList Items { get; }
    parameters: []
    return:
      type: System.Collections.IList
    content.vb: Public ReadOnly Property Items As IList
  overload: System.Xaml.Markup.ArrayExtension.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.Markup.ArrayExtension.AddChild(System.Object)
  commentId: M:System.Xaml.Markup.ArrayExtension.AddChild(System.Object)
  id: AddChild(System.Object)
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: AddChild(Object)
  nameWithType: ArrayExtension.AddChild(Object)
  fullName: System.Xaml.Markup.ArrayExtension.AddChild(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddChild
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 68
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public void AddChild(object value)
    parameters:
    - id: value
      type: System.Object
    content.vb: Public Sub AddChild(value As Object)
  overload: System.Xaml.Markup.ArrayExtension.AddChild*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.AddText(System.String)
  commentId: M:System.Xaml.Markup.ArrayExtension.AddText(System.String)
  id: AddText(System.String)
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: AddText(String)
  nameWithType: ArrayExtension.AddText(String)
  fullName: System.Xaml.Markup.ArrayExtension.AddText(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddText
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 74
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public void AddText(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub AddText(text As String)
  overload: System.Xaml.Markup.ArrayExtension.AddText*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Xaml.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Xaml.Markup.ArrayExtension
  langs:
  - csharp
  - vb
  name: ProvideValue(IServiceProvider)
  nameWithType: ArrayExtension.ProvideValue(IServiceProvider)
  fullName: System.Xaml.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProvideValue
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/ArrayExtension.cs
    startLine: 80
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Markup
  syntax:
    content: public override object ProvideValue(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: System.Object
    content.vb: Public Overrides Function ProvideValue(serviceProvider As IServiceProvider) As Object
  overridden: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  overload: System.Xaml.Markup.ArrayExtension.ProvideValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xaml.Markup
  commentId: N:System.Xaml.Markup
  name: System.Xaml.Markup
  nameWithType: System.Xaml.Markup
  fullName: System.Xaml.Markup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Xaml.IMarkupExtension{System.Object}
  commentId: T:System.Xaml.IMarkupExtension{System.Object}
  parent: System.Xaml
  definition: System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<Object>
  nameWithType: IMarkupExtension<Object>
  fullName: System.Xaml.IMarkupExtension<System.Object>
  nameWithType.vb: IMarkupExtension(Of Object)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object)
  name.vb: IMarkupExtension(Of Object)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: System.Xaml.IMarkupExtension`1
  commentId: T:System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<T>
  nameWithType: IMarkupExtension<T>
  fullName: System.Xaml.IMarkupExtension<T>
  nameWithType.vb: IMarkupExtension(Of T)
  fullName.vb: System.Xaml.IMarkupExtension(Of T)
  name.vb: IMarkupExtension(Of T)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.Markup.ArrayExtension.#ctor*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.#ctor
  name: ArrayExtension
  nameWithType: ArrayExtension.ArrayExtension
  fullName: System.Xaml.Markup.ArrayExtension.ArrayExtension
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.Markup.ArrayExtension.Type*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.Type
  name: Type
  nameWithType: ArrayExtension.Type
  fullName: System.Xaml.Markup.ArrayExtension.Type
- uid: System.Xaml.Markup.ArrayExtension.Items*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.Items
  name: Items
  nameWithType: ArrayExtension.Items
  fullName: System.Xaml.Markup.ArrayExtension.Items
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Xaml.Markup.ArrayExtension.AddChild*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.AddChild
  name: AddChild
  nameWithType: ArrayExtension.AddChild
  fullName: System.Xaml.Markup.ArrayExtension.AddChild
- uid: System.Xaml.Markup.ArrayExtension.AddText*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.AddText
  name: AddText
  nameWithType: ArrayExtension.AddText
  fullName: System.Xaml.Markup.ArrayExtension.AddText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Markup.ArrayExtension.ProvideValue*
  commentId: Overload:System.Xaml.Markup.ArrayExtension.ProvideValue
  name: ProvideValue
  nameWithType: ArrayExtension.ProvideValue
  fullName: System.Xaml.Markup.ArrayExtension.ProvideValue
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
