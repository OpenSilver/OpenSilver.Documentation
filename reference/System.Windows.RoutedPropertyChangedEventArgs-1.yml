### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedPropertyChangedEventArgs`1
  commentId: T:System.Windows.RoutedPropertyChangedEventArgs`1
  id: RoutedPropertyChangedEventArgs`1
  parent: System.Windows
  children:
  - System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)
  - System.Windows.RoutedPropertyChangedEventArgs`1.NewValue
  - System.Windows.RoutedPropertyChangedEventArgs`1.OldValue
  langs:
  - csharp
  - vb
  name: RoutedPropertyChangedEventArgs<T>
  nameWithType: RoutedPropertyChangedEventArgs<T>
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RoutedPropertyChangedEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nProvides data about a change in value to a dependency property as reported by\nparticular routed events, including the previous and current value of the property\nthat changed.\n"
  example: []
  syntax:
    content: 'public class RoutedPropertyChangedEventArgs<T> : RoutedEventArgs'
    typeParameters:
    - id: T
      description: The type of the dependency property that has changed.
    content.vb: >-
      Public Class RoutedPropertyChangedEventArgs(Of T)
          Inherits RoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  inheritedMembers:
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T)
  name.vb: RoutedPropertyChangedEventArgs(Of T)
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)
  commentId: M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)
  id: '#ctor(`0,`0)'
  parent: System.Windows.RoutedPropertyChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: RoutedPropertyChangedEventArgs(T, T)
  nameWithType: RoutedPropertyChangedEventArgs<T>.RoutedPropertyChangedEventArgs(T, T)
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.RoutedPropertyChangedEventArgs(T, T)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the System.Windows.RoutedPropertyChangedEventArgs`1\nclass, with provided old and new values.\n"
  example: []
  syntax:
    content: public RoutedPropertyChangedEventArgs(T oldValue, T newValue)
    parameters:
    - id: oldValue
      type: '{T}'
      description: The previous value of the property, before the event was raised.
    - id: newValue
      type: '{T}'
      description: The current value of the property at the time of the event.
    content.vb: Public Sub New(oldValue As T, newValue As T)
  overload: System.Windows.RoutedPropertyChangedEventArgs`1.#ctor*
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).RoutedPropertyChangedEventArgs(T, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).RoutedPropertyChangedEventArgs(T, T)
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.NewValue
  commentId: P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue
  id: NewValue
  parent: System.Windows.RoutedPropertyChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: NewValue
  nameWithType: RoutedPropertyChangedEventArgs<T>.NewValue
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.NewValue
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NewValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
    startLine: 43
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the new value of a property as reported by a property-changed event.\n"
  example: []
  syntax:
    content: public T NewValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property NewValue As T
  overload: System.Windows.RoutedPropertyChangedEventArgs`1.NewValue*
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).NewValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).NewValue
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.OldValue
  commentId: P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue
  id: OldValue
  parent: System.Windows.RoutedPropertyChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: OldValue
  nameWithType: RoutedPropertyChangedEventArgs<T>.OldValue
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.OldValue
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OldValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/RoutedPropertyChangedEventArgs_1.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the previous value of the property as reported by a property-changed event.\n"
  example: []
  syntax:
    content: public T OldValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property OldValue As T
  overload: System.Windows.RoutedPropertyChangedEventArgs`1.OldValue*
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).OldValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).OldValue
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.OriginalSource
  commentId: P:System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.#ctor*
  commentId: Overload:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor
  name: RoutedPropertyChangedEventArgs
  nameWithType: RoutedPropertyChangedEventArgs<T>.RoutedPropertyChangedEventArgs
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.RoutedPropertyChangedEventArgs
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).RoutedPropertyChangedEventArgs
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).RoutedPropertyChangedEventArgs
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.NewValue*
  commentId: Overload:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue
  name: NewValue
  nameWithType: RoutedPropertyChangedEventArgs<T>.NewValue
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.NewValue
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).NewValue
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).NewValue
- uid: System.Windows.RoutedPropertyChangedEventArgs`1.OldValue*
  commentId: Overload:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue
  name: OldValue
  nameWithType: RoutedPropertyChangedEventArgs<T>.OldValue
  fullName: System.Windows.RoutedPropertyChangedEventArgs<T>.OldValue
  nameWithType.vb: RoutedPropertyChangedEventArgs(Of T).OldValue
  fullName.vb: System.Windows.RoutedPropertyChangedEventArgs(Of T).OldValue
