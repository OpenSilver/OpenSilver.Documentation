### YamlMime:ManagedReference
items:
- uid: TypeScriptDefToCSharp.Model.TSType
  commentId: T:TypeScriptDefToCSharp.Model.TSType
  id: TSType
  parent: TypeScriptDefToCSharp.Model
  children:
  - TypeScriptDefToCSharp.Model.TSType.Name
  - TypeScriptDefToCSharp.Model.TSType.New(System.String)
  - TypeScriptDefToCSharp.Model.TSType.ToString
  langs:
  - csharp
  - vb
  name: TSType
  nameWithType: TSType
  fullName: TypeScriptDefToCSharp.Model.TSType
  type: Interface
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TSType
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
    startLine: 26
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: public interface TSType
    content.vb: Public Interface TSType
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TypeScriptDefToCSharp.Model.TSType.Name
  commentId: P:TypeScriptDefToCSharp.Model.TSType.Name
  id: Name
  parent: TypeScriptDefToCSharp.Model.TSType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TSType.Name
  fullName: TypeScriptDefToCSharp.Model.TSType.Name
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
    startLine: 28
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: TypeScriptDefToCSharp.Model.TSType.Name*
  modifiers.csharp:
  - get
  - set
- uid: TypeScriptDefToCSharp.Model.TSType.New(System.String)
  commentId: M:TypeScriptDefToCSharp.Model.TSType.New(System.String)
  id: New(System.String)
  parent: TypeScriptDefToCSharp.Model.TSType
  langs:
  - csharp
  - vb
  name: New(String)
  nameWithType: TSType.New(String)
  fullName: TypeScriptDefToCSharp.Model.TSType.New(System.String)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: New
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
    startLine: 30
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string New(string jsObj)
    parameters:
    - id: jsObj
      type: System.String
    return:
      type: System.String
    content.vb: Function New(jsObj As String) As String
  overload: TypeScriptDefToCSharp.Model.TSType.New*
- uid: TypeScriptDefToCSharp.Model.TSType.ToString
  commentId: M:TypeScriptDefToCSharp.Model.TSType.ToString
  id: ToString
  parent: TypeScriptDefToCSharp.Model.TSType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TSType.ToString()
  fullName: TypeScriptDefToCSharp.Model.TSType.ToString()
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/Model/TSType.cs
    startLine: 31
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp.Model
  syntax:
    content: string ToString()
    return:
      type: System.String
    content.vb: Function ToString As String
  overload: TypeScriptDefToCSharp.Model.TSType.ToString*
references:
- uid: TypeScriptDefToCSharp.Model
  commentId: N:TypeScriptDefToCSharp.Model
  name: TypeScriptDefToCSharp.Model
  nameWithType: TypeScriptDefToCSharp.Model
  fullName: TypeScriptDefToCSharp.Model
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefToCSharp.Model.TSType.Name*
  commentId: Overload:TypeScriptDefToCSharp.Model.TSType.Name
  name: Name
  nameWithType: TSType.Name
  fullName: TypeScriptDefToCSharp.Model.TSType.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: TypeScriptDefToCSharp.Model.TSType.New*
  commentId: Overload:TypeScriptDefToCSharp.Model.TSType.New
  name: New
  nameWithType: TSType.New
  fullName: TypeScriptDefToCSharp.Model.TSType.New
- uid: TypeScriptDefToCSharp.Model.TSType.ToString*
  commentId: Overload:TypeScriptDefToCSharp.Model.TSType.ToString
  name: ToString
  nameWithType: TSType.ToString
  fullName: TypeScriptDefToCSharp.Model.TSType.ToString
