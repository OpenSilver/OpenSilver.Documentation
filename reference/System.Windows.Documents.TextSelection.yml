### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextSelection
  commentId: T:System.Windows.Documents.TextSelection
  id: TextSelection
  parent: System.Windows.Documents
  children:
  - System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Documents.TextSelection.End
  - System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)
  - System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextSelection.Start
  - System.Windows.Documents.TextSelection.Text
  - System.Windows.Documents.TextSelection.Xaml
  langs:
  - csharp
  - vb
  name: TextSelection
  nameWithType: TextSelection
  fullName: System.Windows.Documents.TextSelection
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TextSelection
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nEncapsulates the selection state for the <xref href=\"System.Windows.Controls.RichTextBox\" data-throw-if-not-resolved=\"false\"></xref> control.\n"
  example: []
  syntax:
    content: public sealed class TextSelection
    content.vb: Public NotInheritable Class TextSelection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Documents.TextSelection.End
  commentId: P:System.Windows.Documents.TextSelection.End
  id: End
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: End
  nameWithType: TextSelection.End
  fullName: System.Windows.Documents.TextSelection.End
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: End
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 40
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nGets a <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref> that represents the end of the current selection.\n"
  example: []
  syntax:
    content: public TextPointer End { get; }
    parameters: []
    return:
      type: System.Windows.Documents.TextPointer
      description: "\nA <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref> that represents the end of the current selection.\n"
    content.vb: Public ReadOnly Property End As TextPointer
  overload: System.Windows.Documents.TextSelection.End*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Documents.TextSelection.Start
  commentId: P:System.Windows.Documents.TextSelection.Start
  id: Start
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: TextSelection.Start
  fullName: System.Windows.Documents.TextSelection.Start
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Start
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nGets a <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref> that represents the beginning of the current selection.\n"
  example: []
  syntax:
    content: public TextPointer Start { get; }
    parameters: []
    return:
      type: System.Windows.Documents.TextPointer
      description: "\nA <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref> that represents the beginning of the current selection.\n"
    content.vb: Public ReadOnly Property Start As TextPointer
  overload: System.Windows.Documents.TextSelection.Start*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Documents.TextSelection.Text
  commentId: P:System.Windows.Documents.TextSelection.Text
  id: Text
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextSelection.Text
  fullName: System.Windows.Documents.TextSelection.Text
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Text
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nGets or sets the plain text contents of the current selection.\n"
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA string that contains the plain text contents of the current selection.\n"
    content.vb: Public Property Text As String
  overload: System.Windows.Documents.TextSelection.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Documents.TextSelection.Xaml
  commentId: P:System.Windows.Documents.TextSelection.Xaml
  id: Xaml
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: Xaml
  nameWithType: TextSelection.Xaml
  fullName: System.Windows.Documents.TextSelection.Xaml
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Xaml
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nGets or sets the XAML representation of the current selection.\n"
  example: []
  syntax:
    content: public string Xaml { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that is a XAML representation of the current selection. This\nXAML representation is the same XAML that is applied to the clipboard for a copy\noperation.\n"
    content.vb: Public Property Xaml As String
  overload: System.Windows.Documents.TextSelection.Xaml*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: ApplyPropertyValue(DependencyProperty, Object)
  nameWithType: TextSelection.ApplyPropertyValue(DependencyProperty, Object)
  fullName: System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ApplyPropertyValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 90
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nApplies the specified formatting property and value to the current selection.\n"
  example: []
  syntax:
    content: public void ApplyPropertyValue(DependencyProperty formattingProperty, object value)
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "\nA formatting property to apply.\n"
    - id: value
      type: System.Object
      description: "\nThe value for the formatting property.\n"
    content.vb: Public Sub ApplyPropertyValue(formattingProperty As DependencyProperty, value As Object)
  overload: System.Windows.Documents.TextSelection.ApplyPropertyValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)
  id: GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextSelection.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPropertyValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 103
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nGets the value of the specified formatting property on the current selection.\n"
  example: []
  syntax:
    content: public object GetPropertyValue(DependencyProperty formattingProperty)
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: "\nA formatting property to get the value of on the current selection.\n"
    return:
      type: System.Object
      description: "\nAn object that indicates the value of the specified formatting property on the\ncurrent selection.\n"
    content.vb: Public Function GetPropertyValue(formattingProperty As DependencyProperty) As Object
  overload: System.Windows.Documents.TextSelection.GetPropertyValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)
  commentId: M:System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)
  id: Insert(System.Windows.Documents.TextElement)
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: Insert(TextElement)
  nameWithType: TextSelection.Insert(TextElement)
  fullName: System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Insert
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 137
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nInserts or replaces the content at the current selection as a <xref href=\"System.Windows.Documents.TextElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Insert(TextElement element)
    parameters:
    - id: element
      type: System.Windows.Documents.TextElement
      description: "\nThe <xref href=\"System.Windows.Documents.TextElement\" data-throw-if-not-resolved=\"false\"></xref> to be inserted.\n"
    content.vb: Public Sub Insert(element As TextElement)
  overload: System.Windows.Documents.TextSelection.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  commentId: M:System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextSelection
  langs:
  - csharp
  - vb
  name: Select(TextPointer, TextPointer)
  nameWithType: TextSelection.Select(TextPointer, TextPointer)
  fullName: System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer, System.Windows.Documents.TextPointer)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Select
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Documents/TextSelection.cs
    startLine: 157
  assemblies:
  - OpenSilver
  namespace: System.Windows.Documents
  summary: "\nUpdates the current selection, taking two <xref href=\"System.Windows.Documents.TextPointer\" data-throw-if-not-resolved=\"false\"></xref>\npositions to indicate the updated selection.\n"
  example: []
  syntax:
    content: public void Select(TextPointer anchorPosition, TextPointer movingPosition)
    parameters:
    - id: anchorPosition
      type: System.Windows.Documents.TextPointer
      description: "\nA fixed anchor position that marks one end of the updated selection.\n"
    - id: movingPosition
      type: System.Windows.Documents.TextPointer
      description: "\nA movable position that marks the other end of the updated selection.\n"
    content.vb: Public Sub Select(anchorPosition As TextPointer, movingPosition As TextPointer)
  overload: System.Windows.Documents.TextSelection.Select*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nanchorPosition or movingPosition is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nPosition specifies a position from a different <xref href=\"System.Windows.Controls.RichTextBox\" data-throw-if-not-resolved=\"false\"></xref>\nassociated with the current position.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Controls.RichTextBox
  commentId: T:System.Windows.Controls.RichTextBox
  parent: System.Windows.Controls
  name: RichTextBox
  nameWithType: RichTextBox
  fullName: System.Windows.Controls.RichTextBox
- uid: System.Windows.Documents
  commentId: N:System.Windows.Documents
  name: System.Windows.Documents
  nameWithType: System.Windows.Documents
  fullName: System.Windows.Documents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Documents.TextPointer
  commentId: T:System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextSelection.End*
  commentId: Overload:System.Windows.Documents.TextSelection.End
  name: End
  nameWithType: TextSelection.End
  fullName: System.Windows.Documents.TextSelection.End
- uid: System.Windows.Documents.TextSelection.Start*
  commentId: Overload:System.Windows.Documents.TextSelection.Start
  name: Start
  nameWithType: TextSelection.Start
  fullName: System.Windows.Documents.TextSelection.Start
- uid: System.Windows.Documents.TextSelection.Text*
  commentId: Overload:System.Windows.Documents.TextSelection.Text
  name: Text
  nameWithType: TextSelection.Text
  fullName: System.Windows.Documents.TextSelection.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextSelection.Xaml*
  commentId: Overload:System.Windows.Documents.TextSelection.Xaml
  name: Xaml
  nameWithType: TextSelection.Xaml
  fullName: System.Windows.Documents.TextSelection.Xaml
- uid: System.Windows.Documents.TextSelection.ApplyPropertyValue*
  commentId: Overload:System.Windows.Documents.TextSelection.ApplyPropertyValue
  name: ApplyPropertyValue
  nameWithType: TextSelection.ApplyPropertyValue
  fullName: System.Windows.Documents.TextSelection.ApplyPropertyValue
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Documents.TextSelection.GetPropertyValue*
  commentId: Overload:System.Windows.Documents.TextSelection.GetPropertyValue
  name: GetPropertyValue
  nameWithType: TextSelection.GetPropertyValue
  fullName: System.Windows.Documents.TextSelection.GetPropertyValue
- uid: System.Windows.Documents.TextElement
  commentId: T:System.Windows.Documents.TextElement
  parent: System.Windows.Documents
  name: TextElement
  nameWithType: TextElement
  fullName: System.Windows.Documents.TextElement
- uid: System.Windows.Documents.TextSelection.Insert*
  commentId: Overload:System.Windows.Documents.TextSelection.Insert
  name: Insert
  nameWithType: TextSelection.Insert
  fullName: System.Windows.Documents.TextSelection.Insert
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Documents.TextSelection.Select*
  commentId: Overload:System.Windows.Documents.TextSelection.Select
  name: Select
  nameWithType: TextSelection.Select
  fullName: System.Windows.Documents.TextSelection.Select
