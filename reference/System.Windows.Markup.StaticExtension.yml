### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.StaticExtension
  commentId: T:System.Windows.Markup.StaticExtension
  id: StaticExtension
  parent: System.Windows.Markup
  children:
  - System.Windows.Markup.StaticExtension.#ctor
  - System.Windows.Markup.StaticExtension.#ctor(System.String)
  - System.Windows.Markup.StaticExtension.Member
  - System.Windows.Markup.StaticExtension.MemberType
  - System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: StaticExtension
  nameWithType: StaticExtension
  fullName: System.Windows.Markup.StaticExtension
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StaticExtension
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 14
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nImplements a markup extension that returns static field and property references.\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(StaticExtensionConverter))]

      public class StaticExtension : MarkupExtension, IMarkupExtension<object>
    content.vb: >-
      <TypeConverter(GetType(StaticExtensionConverter))>

      Public Class StaticExtension
          Inherits MarkupExtension
          Implements IMarkupExtension(Of Object)
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  implements:
  - System.Xaml.IMarkupExtension{System.Object}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Markup.StaticExtension.#ctor
  commentId: M:System.Windows.Markup.StaticExtension.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.StaticExtension
  langs:
  - csharp
  - vb
  name: StaticExtension()
  nameWithType: StaticExtension.StaticExtension()
  fullName: System.Windows.Markup.StaticExtension.StaticExtension()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public StaticExtension()
    content.vb: Public Sub New
  overload: System.Windows.Markup.StaticExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Markup.StaticExtension.#ctor(System.String)
  commentId: M:System.Windows.Markup.StaticExtension.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Markup.StaticExtension
  langs:
  - csharp
  - vb
  name: StaticExtension(String)
  nameWithType: StaticExtension.StaticExtension(String)
  fullName: System.Windows.Markup.StaticExtension.StaticExtension(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Markup.StaticExtension\" data-throw-if-not-resolved=\"false\"></xref> class using the provided member string.\n"
  example: []
  syntax:
    content: public StaticExtension(string member)
    parameters:
    - id: member
      type: System.String
      description: "\nA string that identifies the member to make a reference to. This string uses the format prefix:typeName.fieldOrPropertyName.\nprefix is the mapping prefix for a XAML namespace, and is only required to reference static values that \nare not mapped to the default XAML namespace.\n"
    content.vb: Public Sub New(member As String)
  overload: System.Windows.Markup.StaticExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Markup.StaticExtension.Member
  commentId: P:System.Windows.Markup.StaticExtension.Member
  id: Member
  parent: System.Windows.Markup.StaticExtension
  langs:
  - csharp
  - vb
  name: Member
  nameWithType: StaticExtension.Member
  fullName: System.Windows.Markup.StaticExtension.Member
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Member
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 51
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nGets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.\n"
  example: []
  syntax:
    content: public string Member { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA string that identifies the member to make a reference to.\n"
    content.vb: Public Property Member As String
  overload: System.Windows.Markup.StaticExtension.Member*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nAttempted to set <xref href=\"System.Windows.Markup.StaticExtension.Member\" data-throw-if-not-resolved=\"false\"></xref> to null.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Markup.StaticExtension.MemberType
  commentId: P:System.Windows.Markup.StaticExtension.MemberType
  id: MemberType
  parent: System.Windows.Markup.StaticExtension
  langs:
  - csharp
  - vb
  name: MemberType
  nameWithType: StaticExtension.MemberType
  fullName: System.Windows.Markup.StaticExtension.MemberType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MemberType
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 67
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nGets or sets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that defines the static member to return.\n"
  example: []
  syntax:
    content: public Type MemberType { get; set; }
    parameters: []
    return:
      type: System.Type
      description: "\nThe <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that defines the static member to return.\n"
    content.vb: Public Property MemberType As Type
  overload: System.Windows.Markup.StaticExtension.MemberType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nAttempted to set <xref href=\"System.Windows.Markup.StaticExtension.MemberType\" data-throw-if-not-resolved=\"false\"></xref> to null.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.StaticExtension
  langs:
  - csharp
  - vb
  name: ProvideValue(IServiceProvider)
  nameWithType: StaticExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProvideValue
    path: ../../opensilver/src/Runtime/OpenSilver.Xaml/System.Xaml.Markup/StaticExtension.cs
    startLine: 95
  assemblies:
  - OpenSilver
  namespace: System.Windows.Markup
  summary: "\nReturns an object value to set on the property where you apply this extension. For <xref href=\"System.Windows.Markup.StaticExtension\" data-throw-if-not-resolved=\"false\"></xref>,\nthe return value is the static value that is evaluated for the requested static member.\n"
  example: []
  syntax:
    content: public override object ProvideValue(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "\nAn object that can provide services for the markup extension. The service provider is expected to provide a \nservice that implements a type resolver (<xref href=\"System.Windows.Markup.IXamlTypeResolver\" data-throw-if-not-resolved=\"false\"></xref>).\n"
    return:
      type: System.Object
      description: "\nThe static value to set on the property where the extension is applied.\n"
    content.vb: Public Overrides Function ProvideValue(serviceProvider As IServiceProvider) As Object
  overridden: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  overload: System.Windows.Markup.StaticExtension.ProvideValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe member value for the extension is null at the time of evaluation.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nSome part of the member string did not parse properly -or- serviceProvider did not provide a service for \n<xref href=\"System.Windows.Markup.IXamlTypeResolver\" data-throw-if-not-resolved=\"false\"></xref> -or- member value did not resolve to a static member.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nserviceProvider is null.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Xaml.IMarkupExtension{System.Object}
  commentId: T:System.Xaml.IMarkupExtension{System.Object}
  parent: System.Xaml
  definition: System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<Object>
  nameWithType: IMarkupExtension<Object>
  fullName: System.Xaml.IMarkupExtension<System.Object>
  nameWithType.vb: IMarkupExtension(Of Object)
  fullName.vb: System.Xaml.IMarkupExtension(Of System.Object)
  name.vb: IMarkupExtension(Of Object)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xaml.IMarkupExtension`1
  commentId: T:System.Xaml.IMarkupExtension`1
  name: IMarkupExtension<T>
  nameWithType: IMarkupExtension<T>
  fullName: System.Xaml.IMarkupExtension<T>
  nameWithType.vb: IMarkupExtension(Of T)
  fullName.vb: System.Xaml.IMarkupExtension(Of T)
  name.vb: IMarkupExtension(Of T)
  spec.csharp:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.IMarkupExtension`1
    name: IMarkupExtension
    nameWithType: IMarkupExtension
    fullName: System.Xaml.IMarkupExtension
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Windows.Markup.StaticExtension
  commentId: T:System.Windows.Markup.StaticExtension
  name: StaticExtension
  nameWithType: StaticExtension
  fullName: System.Windows.Markup.StaticExtension
- uid: System.Windows.Markup.StaticExtension.#ctor*
  commentId: Overload:System.Windows.Markup.StaticExtension.#ctor
  name: StaticExtension
  nameWithType: StaticExtension.StaticExtension
  fullName: System.Windows.Markup.StaticExtension.StaticExtension
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.StaticExtension.Member
  commentId: P:System.Windows.Markup.StaticExtension.Member
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Markup.StaticExtension.Member*
  commentId: Overload:System.Windows.Markup.StaticExtension.Member
  name: Member
  nameWithType: StaticExtension.Member
  fullName: System.Windows.Markup.StaticExtension.Member
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.StaticExtension.MemberType
  commentId: P:System.Windows.Markup.StaticExtension.MemberType
  isExternal: true
- uid: System.Windows.Markup.StaticExtension.MemberType*
  commentId: Overload:System.Windows.Markup.StaticExtension.MemberType
  name: MemberType
  nameWithType: StaticExtension.MemberType
  fullName: System.Windows.Markup.StaticExtension.MemberType
- uid: System.Windows.Markup.IXamlTypeResolver
  commentId: T:System.Windows.Markup.IXamlTypeResolver
  name: IXamlTypeResolver
  nameWithType: IXamlTypeResolver
  fullName: System.Windows.Markup.IXamlTypeResolver
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Markup.StaticExtension.ProvideValue*
  commentId: Overload:System.Windows.Markup.StaticExtension.ProvideValue
  name: ProvideValue
  nameWithType: StaticExtension.ProvideValue
  fullName: System.Windows.Markup.StaticExtension.ProvideValue
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
