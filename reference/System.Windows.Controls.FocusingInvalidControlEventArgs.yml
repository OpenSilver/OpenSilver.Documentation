### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs
  commentId: T:System.Windows.Controls.FocusingInvalidControlEventArgs
  id: FocusingInvalidControlEventArgs
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)
  - System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
  - System.Windows.Controls.FocusingInvalidControlEventArgs.Item
  - System.Windows.Controls.FocusingInvalidControlEventArgs.Target
  langs:
  - csharp
  - vb
  name: FocusingInvalidControlEventArgs
  nameWithType: FocusingInvalidControlEventArgs
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FocusingInvalidControlEventArgs
    path: ../OpenSilverGit/src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
    startLine: 21
  assemblies:
  - Controls.Data.Input.OpenSilver
  namespace: System.Windows.Controls
  summary: "\nProvides data for the ErrorClicked event.\n"
  example: []
  syntax:
    content: 'public class FocusingInvalidControlEventArgs : EventArgs'
    content.vb: >-
      Public Class FocusingInvalidControlEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)
  commentId: M:System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)
  id: '#ctor(System.Windows.Controls.ValidationSummaryItem,System.Windows.Controls.ValidationSummaryItemSource)'
  parent: System.Windows.Controls.FocusingInvalidControlEventArgs
  langs:
  - csharp
  - vb
  name: FocusingInvalidControlEventArgs(ValidationSummaryItem, ValidationSummaryItemSource)
  nameWithType: FocusingInvalidControlEventArgs.FocusingInvalidControlEventArgs(ValidationSummaryItem, ValidationSummaryItemSource)
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.FocusingInvalidControlEventArgs(System.Windows.Controls.ValidationSummaryItem, System.Windows.Controls.ValidationSummaryItemSource)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
    startLine: 28
  assemblies:
  - Controls.Data.Input.OpenSilver
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the ValidationSummaryItemEventArgs class.\n"
  example: []
  syntax:
    content: public FocusingInvalidControlEventArgs(ValidationSummaryItem item, ValidationSummaryItemSource target)
    parameters:
    - id: item
      type: System.Windows.Controls.ValidationSummaryItem
      description: The selected ValidationSummaryItem
    - id: target
      type: System.Windows.Controls.ValidationSummaryItemSource
      description: The target is the ValidationSummaryItemSource that will be focused.
    content.vb: Public Sub New(item As ValidationSummaryItem, target As ValidationSummaryItemSource)
  overload: System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
  commentId: P:System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
  id: Handled
  parent: System.Windows.Controls.FocusingInvalidControlEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: FocusingInvalidControlEventArgs.Handled
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Handled
    path: ../OpenSilverGit/src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
    startLine: 38
  assemblies:
  - Controls.Data.Input.OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets a value indicating whether the focusing was handled.\n"
  example: []
  syntax:
    content: public bool Handled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Handled As Boolean
  overload: System.Windows.Controls.FocusingInvalidControlEventArgs.Handled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Item
  commentId: P:System.Windows.Controls.FocusingInvalidControlEventArgs.Item
  id: Item
  parent: System.Windows.Controls.FocusingInvalidControlEventArgs
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: FocusingInvalidControlEventArgs.Item
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Item
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Item
    path: ../OpenSilverGit/src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
    startLine: 47
  assemblies:
  - Controls.Data.Input.OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the error message string\n"
  example: []
  syntax:
    content: public ValidationSummaryItem Item { get; }
    parameters: []
    return:
      type: System.Windows.Controls.ValidationSummaryItem
    content.vb: Public ReadOnly Property Item As ValidationSummaryItem
  overload: System.Windows.Controls.FocusingInvalidControlEventArgs.Item*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Target
  commentId: P:System.Windows.Controls.FocusingInvalidControlEventArgs.Target
  id: Target
  parent: System.Windows.Controls.FocusingInvalidControlEventArgs
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: FocusingInvalidControlEventArgs.Target
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Target
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Target
    path: ../OpenSilverGit/src/Runtime/Controls.Data.Input/Validation/FocusingInvalidControlEventArgs.cs
    startLine: 57
  assemblies:
  - Controls.Data.Input.OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets the target ValidationSummaryItemSource.  If this value is changed, it will be the new current source \nand will be focused.\n"
  example: []
  syntax:
    content: public ValidationSummaryItemSource Target { get; set; }
    parameters: []
    return:
      type: System.Windows.Controls.ValidationSummaryItemSource
    content.vb: Public Property Target As ValidationSummaryItemSource
  overload: System.Windows.Controls.FocusingInvalidControlEventArgs.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor*
  commentId: Overload:System.Windows.Controls.FocusingInvalidControlEventArgs.#ctor
  name: FocusingInvalidControlEventArgs
  nameWithType: FocusingInvalidControlEventArgs.FocusingInvalidControlEventArgs
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.FocusingInvalidControlEventArgs
- uid: System.Windows.Controls.ValidationSummaryItem
  commentId: T:System.Windows.Controls.ValidationSummaryItem
  parent: System.Windows.Controls
  name: ValidationSummaryItem
  nameWithType: ValidationSummaryItem
  fullName: System.Windows.Controls.ValidationSummaryItem
- uid: System.Windows.Controls.ValidationSummaryItemSource
  commentId: T:System.Windows.Controls.ValidationSummaryItemSource
  parent: System.Windows.Controls
  name: ValidationSummaryItemSource
  nameWithType: ValidationSummaryItemSource
  fullName: System.Windows.Controls.ValidationSummaryItemSource
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Handled*
  commentId: Overload:System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
  name: Handled
  nameWithType: FocusingInvalidControlEventArgs.Handled
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Handled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Item*
  commentId: Overload:System.Windows.Controls.FocusingInvalidControlEventArgs.Item
  name: Item
  nameWithType: FocusingInvalidControlEventArgs.Item
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Item
- uid: System.Windows.Controls.FocusingInvalidControlEventArgs.Target*
  commentId: Overload:System.Windows.Controls.FocusingInvalidControlEventArgs.Target
  name: Target
  nameWithType: FocusingInvalidControlEventArgs.Target
  fullName: System.Windows.Controls.FocusingInvalidControlEventArgs.Target
