### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs
  commentId: T:System.Windows.Controls.DataGridRowClipboardEventArgs
  id: DataGridRowClipboardEventArgs
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
  - System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
  - System.Windows.Controls.DataGridRowClipboardEventArgs.Item
  langs:
  - csharp
  - vb
  name: DataGridRowClipboardEventArgs
  nameWithType: DataGridRowClipboardEventArgs
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataGridRowClipboardEventArgs
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
    startLine: 12
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nThis class encapsulates a selected row&apos;s information necessary for the CopyingRowClipboardContent event.\n"
  example: []
  syntax:
    content: 'public class DataGridRowClipboardEventArgs : EventArgs'
    content.vb: >-
      Public Class DataGridRowClipboardEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
  commentId: P:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
  id: ClipboardRowContent
  parent: System.Windows.Controls.DataGridRowClipboardEventArgs
  langs:
  - csharp
  - vb
  name: ClipboardRowContent
  nameWithType: DataGridRowClipboardEventArgs.ClipboardRowContent
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClipboardRowContent
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
    startLine: 42
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nThis list should be used to modify, add ot remove a cell content before it gets stored into the clipboard.\n"
  example: []
  syntax:
    content: public List<DataGridClipboardCellContent> ClipboardRowContent { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Windows.Controls.DataGridClipboardCellContent}
    content.vb: Public ReadOnly Property ClipboardRowContent As List(Of DataGridClipboardCellContent)
  overload: System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
  commentId: P:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
  id: IsColumnHeadersRow
  parent: System.Windows.Controls.DataGridRowClipboardEventArgs
  langs:
  - csharp
  - vb
  name: IsColumnHeadersRow
  nameWithType: DataGridRowClipboardEventArgs.IsColumnHeadersRow
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsColumnHeadersRow
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
    startLine: 57
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nThis property is true when the ClipboardRowContent represents column headers, in which case the Item is null.\n"
  example: []
  syntax:
    content: public bool IsColumnHeadersRow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsColumnHeadersRow As Boolean
  overload: System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.Item
  commentId: P:System.Windows.Controls.DataGridRowClipboardEventArgs.Item
  id: Item
  parent: System.Windows.Controls.DataGridRowClipboardEventArgs
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: DataGridRowClipboardEventArgs.Item
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.Item
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Item
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridRowClipboardEventArgs.cs
    startLine: 68
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nDataGrid row item used for proparing the ClipboardRowContent.\n"
  example: []
  syntax:
    content: public object Item { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Item As Object
  overload: System.Windows.Controls.DataGridRowClipboardEventArgs.Item*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent*
  commentId: Overload:System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
  name: ClipboardRowContent
  nameWithType: DataGridRowClipboardEventArgs.ClipboardRowContent
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.ClipboardRowContent
- uid: System.Collections.Generic.List{System.Windows.Controls.DataGridClipboardCellContent}
  commentId: T:System.Collections.Generic.List{System.Windows.Controls.DataGridClipboardCellContent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataGridClipboardCellContent>
  nameWithType: List<DataGridClipboardCellContent>
  fullName: System.Collections.Generic.List<System.Windows.Controls.DataGridClipboardCellContent>
  nameWithType.vb: List(Of DataGridClipboardCellContent)
  fullName.vb: System.Collections.Generic.List(Of System.Windows.Controls.DataGridClipboardCellContent)
  name.vb: List(Of DataGridClipboardCellContent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.DataGridClipboardCellContent
    name: DataGridClipboardCellContent
    nameWithType: DataGridClipboardCellContent
    fullName: System.Windows.Controls.DataGridClipboardCellContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Controls.DataGridClipboardCellContent
    name: DataGridClipboardCellContent
    nameWithType: DataGridClipboardCellContent
    fullName: System.Windows.Controls.DataGridClipboardCellContent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow*
  commentId: Overload:System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
  name: IsColumnHeadersRow
  nameWithType: DataGridRowClipboardEventArgs.IsColumnHeadersRow
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.IsColumnHeadersRow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataGridRowClipboardEventArgs.Item*
  commentId: Overload:System.Windows.Controls.DataGridRowClipboardEventArgs.Item
  name: Item
  nameWithType: DataGridRowClipboardEventArgs.Item
  fullName: System.Windows.Controls.DataGridRowClipboardEventArgs.Item
