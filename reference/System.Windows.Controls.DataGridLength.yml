### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataGridLength
  commentId: T:System.Windows.Controls.DataGridLength
  id: DataGridLength
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.DataGridLength.#ctor(System.Double)
  - System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)
  - System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)
  - System.Windows.Controls.DataGridLength.Auto
  - System.Windows.Controls.DataGridLength.DesiredValue
  - System.Windows.Controls.DataGridLength.DisplayValue
  - System.Windows.Controls.DataGridLength.Equals(System.Object)
  - System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)
  - System.Windows.Controls.DataGridLength.GetHashCode
  - System.Windows.Controls.DataGridLength.IsAbsolute
  - System.Windows.Controls.DataGridLength.IsAuto
  - System.Windows.Controls.DataGridLength.IsSizeToCells
  - System.Windows.Controls.DataGridLength.IsSizeToHeader
  - System.Windows.Controls.DataGridLength.IsStar
  - System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  - System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  - System.Windows.Controls.DataGridLength.SizeToCells
  - System.Windows.Controls.DataGridLength.SizeToHeader
  - System.Windows.Controls.DataGridLength.UnitType
  - System.Windows.Controls.DataGridLength.Value
  langs:
  - csharp
  - vb
  name: DataGridLength
  nameWithType: DataGridLength
  fullName: System.Windows.Controls.DataGridLength
  type: Struct
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataGridLength
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 31
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nRepresents the lengths of elements within the <xref href=\"System.Windows.Controls.DataGrid\" data-throw-if-not-resolved=\"false\"></xref> control.\n"
  example: []
  syntax:
    content: >-
      [TypeConverter(typeof(DataGridLengthConverter))]

      public struct DataGridLength : IEquatable<DataGridLength>
    content.vb: >-
      <TypeConverter(GetType(DataGridLengthConverter))>

      Public Structure DataGridLength
          Implements IEquatable(Of DataGridLength)
  implements:
  - System.IEquatable{System.Windows.Controls.DataGridLength}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Windows.Controls.DataGridLengthConverter
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Controls.DataGridLength.#ctor(System.Double)
  commentId: M:System.Windows.Controls.DataGridLength.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: DataGridLength(Double)
  nameWithType: DataGridLength.DataGridLength(Double)
  fullName: System.Windows.Controls.DataGridLength.DataGridLength(System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 58
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> class. \n"
  example: []
  syntax:
    content: public DataGridLength(double value)
    parameters:
    - id: value
      type: System.Double
      description: ''
    content.vb: Public Sub New(value As Double)
  overload: System.Windows.Controls.DataGridLength.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)
  commentId: M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)
  id: '#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType)'
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: DataGridLength(Double, DataGridLengthUnitType)
  nameWithType: DataGridLength.DataGridLength(Double, DataGridLengthUnitType)
  fullName: System.Windows.Controls.DataGridLength.DataGridLength(System.Double, System.Windows.Controls.DataGridLengthUnitType)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 77
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nInitializes to a specified value and unit.\n"
  remarks: "\n<code>value</code> is ignored unless <code>type</code> is\n<code>DataGridLengthUnitType.Pixel</code> or\n<code>DataGridLengthUnitType.Star</code>\n"
  example: []
  syntax:
    content: public DataGridLength(double value, DataGridLengthUnitType type)
    parameters:
    - id: value
      type: System.Double
      description: The value to hold.
    - id: type
      type: System.Windows.Controls.DataGridLengthUnitType
      description: The unit of <code>value</code>.
    content.vb: Public Sub New(value As Double, type As DataGridLengthUnitType)
  overload: System.Windows.Controls.DataGridLength.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <code>value</code> parameter is <code>double.NaN</code>\nor <code>value</code> parameter is <code>double.NegativeInfinity</code>\nor <code>value</code> parameter is <code>double.PositiveInfinity</code>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)
  commentId: M:System.Windows.Controls.DataGridLength.#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)
  id: '#ctor(System.Double,System.Windows.Controls.DataGridLengthUnitType,System.Double,System.Double)'
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: DataGridLength(Double, DataGridLengthUnitType, Double, Double)
  nameWithType: DataGridLength.DataGridLength(Double, DataGridLengthUnitType, Double, Double)
  fullName: System.Windows.Controls.DataGridLength.DataGridLength(System.Double, System.Windows.Controls.DataGridLengthUnitType, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 99
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nInitializes to a specified value and unit.\n"
  remarks: "\n<code>value</code> is ignored unless <code>type</code> is\n<code>DataGridLengthUnitType.Pixel</code> or\n<code>DataGridLengthUnitType.Star</code>\n"
  example: []
  syntax:
    content: public DataGridLength(double value, DataGridLengthUnitType type, double desiredValue, double displayValue)
    parameters:
    - id: value
      type: System.Double
      description: The value to hold.
    - id: type
      type: System.Windows.Controls.DataGridLengthUnitType
      description: The unit of <code>value</code>.
    - id: desiredValue
      type: System.Double
      description: ''
    - id: displayValue
      type: System.Double
      description: ''
    content.vb: Public Sub New(value As Double, type As DataGridLengthUnitType, desiredValue As Double, displayValue As Double)
  overload: System.Windows.Controls.DataGridLength.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIf <code>value</code> parameter is <code>double.NaN</code>\nor <code>value</code> parameter is <code>double.NegativeInfinity</code>\nor <code>value</code> parameter is <code>double.PositiveInfinity</code>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridLength.Auto
  commentId: P:System.Windows.Controls.DataGridLength.Auto
  id: Auto
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Auto
  nameWithType: DataGridLength.Auto
  fullName: System.Windows.Controls.DataGridLength.Auto
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Auto
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 155
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets a <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the standard automatic sizing mode.\n"
  example: []
  syntax:
    content: public static readonly DataGridLength Auto { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridLength
      description: "\nA <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the standard automatic sizing mode.\n"
    content.vb: Public Shared ReadOnly Property Auto As DataGridLength
  overload: System.Windows.Controls.DataGridLength.Auto*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.DesiredValue
  commentId: P:System.Windows.Controls.DataGridLength.DesiredValue
  id: DesiredValue
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: DesiredValue
  nameWithType: DataGridLength.DesiredValue
  fullName: System.Windows.Controls.DataGridLength.DesiredValue
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DesiredValue
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 166
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns the desired value of this instance.\n"
  example: []
  syntax:
    content: public readonly double DesiredValue { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property DesiredValue As Double
  overload: System.Windows.Controls.DataGridLength.DesiredValue*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.DisplayValue
  commentId: P:System.Windows.Controls.DataGridLength.DisplayValue
  id: DisplayValue
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: DisplayValue
  nameWithType: DataGridLength.DisplayValue
  fullName: System.Windows.Controls.DataGridLength.DisplayValue
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DisplayValue
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 177
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns the display value of this instance.\n"
  example: []
  syntax:
    content: public readonly double DisplayValue { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property DisplayValue As Double
  overload: System.Windows.Controls.DataGridLength.DisplayValue*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.IsAbsolute
  commentId: P:System.Windows.Controls.DataGridLength.IsAbsolute
  id: IsAbsolute
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: IsAbsolute
  nameWithType: DataGridLength.IsAbsolute
  fullName: System.Windows.Controls.DataGridLength.IsAbsolute
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAbsolute
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 189
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns <code>true</code> if this DataGridLength instance holds \nan absolute (pixel) value.\n"
  example: []
  syntax:
    content: public readonly bool IsAbsolute { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAbsolute As Boolean
  overload: System.Windows.Controls.DataGridLength.IsAbsolute*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.IsAuto
  commentId: P:System.Windows.Controls.DataGridLength.IsAuto
  id: IsAuto
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: IsAuto
  nameWithType: DataGridLength.IsAuto
  fullName: System.Windows.Controls.DataGridLength.IsAuto
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAuto
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 201
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns <code>true</code> if this DataGridLength instance is \nautomatic (not specified).\n"
  example: []
  syntax:
    content: public readonly bool IsAuto { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAuto As Boolean
  overload: System.Windows.Controls.DataGridLength.IsAuto*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.IsSizeToCells
  commentId: P:System.Windows.Controls.DataGridLength.IsSizeToCells
  id: IsSizeToCells
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: IsSizeToCells
  nameWithType: DataGridLength.IsSizeToCells
  fullName: System.Windows.Controls.DataGridLength.IsSizeToCells
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsSizeToCells
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 212
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns <code>true</code> if this instance is to size to the cells of a column or row.\n"
  example: []
  syntax:
    content: public readonly bool IsSizeToCells { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSizeToCells As Boolean
  overload: System.Windows.Controls.DataGridLength.IsSizeToCells*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.IsSizeToHeader
  commentId: P:System.Windows.Controls.DataGridLength.IsSizeToHeader
  id: IsSizeToHeader
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: IsSizeToHeader
  nameWithType: DataGridLength.IsSizeToHeader
  fullName: System.Windows.Controls.DataGridLength.IsSizeToHeader
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsSizeToHeader
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 223
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns <code>true</code> if this instance is to size to the header of a column or row.\n"
  example: []
  syntax:
    content: public readonly bool IsSizeToHeader { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSizeToHeader As Boolean
  overload: System.Windows.Controls.DataGridLength.IsSizeToHeader*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.IsStar
  commentId: P:System.Windows.Controls.DataGridLength.IsStar
  id: IsStar
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: IsStar
  nameWithType: DataGridLength.IsStar
  fullName: System.Windows.Controls.DataGridLength.IsStar
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsStar
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 235
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns <code>true</code> if this DataGridLength instance holds a weighted proportion\nof available space.\n"
  example: []
  syntax:
    content: public readonly bool IsStar { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStar As Boolean
  overload: System.Windows.Controls.DataGridLength.IsStar*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.SizeToCells
  commentId: P:System.Windows.Controls.DataGridLength.SizeToCells
  id: SizeToCells
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: SizeToCells
  nameWithType: DataGridLength.SizeToCells
  fullName: System.Windows.Controls.DataGridLength.SizeToCells
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SizeToCells
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 249
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets a <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the cell-based automatic sizing mode.\n"
  example: []
  syntax:
    content: public static readonly DataGridLength SizeToCells { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridLength
      description: "\nA <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the cell-based automatic sizing mode.\n"
    content.vb: Public Shared ReadOnly Property SizeToCells As DataGridLength
  overload: System.Windows.Controls.DataGridLength.SizeToCells*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.SizeToHeader
  commentId: P:System.Windows.Controls.DataGridLength.SizeToHeader
  id: SizeToHeader
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: SizeToHeader
  nameWithType: DataGridLength.SizeToHeader
  fullName: System.Windows.Controls.DataGridLength.SizeToHeader
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SizeToHeader
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 263
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets a <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the header-based automatic sizing mode.\n"
  example: []
  syntax:
    content: public static readonly DataGridLength SizeToHeader { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridLength
      description: "\nA <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the header-based automatic sizing mode.\n"
    content.vb: Public Shared ReadOnly Property SizeToHeader As DataGridLength
  overload: System.Windows.Controls.DataGridLength.SizeToHeader*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.UnitType
  commentId: P:System.Windows.Controls.DataGridLength.UnitType
  id: UnitType
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: UnitType
  nameWithType: DataGridLength.UnitType
  fullName: System.Windows.Controls.DataGridLength.UnitType
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UnitType
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 274
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets the <xref href=\"System.Windows.Controls.DataGridLengthUnitType\" data-throw-if-not-resolved=\"false\"></xref> that represents the current sizing mode.\n"
  example: []
  syntax:
    content: public readonly DataGridLengthUnitType UnitType { get; }
    parameters: []
    return:
      type: System.Windows.Controls.DataGridLengthUnitType
    content.vb: Public ReadOnly Property UnitType As DataGridLengthUnitType
  overload: System.Windows.Controls.DataGridLength.UnitType*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.Value
  commentId: P:System.Windows.Controls.DataGridLength.Value
  id: Value
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DataGridLength.Value
  fullName: System.Windows.Controls.DataGridLength.Value
  type: Property
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Value
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 288
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nGets the absolute value of the <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> in pixels.\n"
  example: []
  syntax:
    content: public readonly double Value { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe absolute value of the <xref href=\"System.Windows.Controls.DataGridLength\" data-throw-if-not-resolved=\"false\"></xref> in pixels.\n"
    content.vb: Public ReadOnly Property Value As Double
  overload: System.Windows.Controls.DataGridLength.Value*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  commentId: M:System.Windows.Controls.DataGridLength.op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  id: op_Equality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Equality(DataGridLength, DataGridLength)
  nameWithType: DataGridLength.Equality(DataGridLength, DataGridLength)
  fullName: System.Windows.Controls.DataGridLength.Equality(System.Windows.Controls.DataGridLength, System.Windows.Controls.DataGridLength)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 307
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nOverloaded operator, compares 2 DataGridLength&apos;s.\n"
  example: []
  syntax:
    content: public static bool operator ==(DataGridLength gl1, DataGridLength gl2)
    parameters:
    - id: gl1
      type: System.Windows.Controls.DataGridLength
      description: first DataGridLength to compare.
    - id: gl2
      type: System.Windows.Controls.DataGridLength
      description: second DataGridLength to compare.
    return:
      type: System.Boolean
      description: "true if specified DataGridLength have same value, \nunit type, desired value, and display value."
    content.vb: Public Shared Operator =(gl1 As DataGridLength, gl2 As DataGridLength) As Boolean
  overload: System.Windows.Controls.DataGridLength.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  commentId: M:System.Windows.Controls.DataGridLength.op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  id: op_Inequality(System.Windows.Controls.DataGridLength,System.Windows.Controls.DataGridLength)
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Inequality(DataGridLength, DataGridLength)
  nameWithType: DataGridLength.Inequality(DataGridLength, DataGridLength)
  fullName: System.Windows.Controls.DataGridLength.Inequality(System.Windows.Controls.DataGridLength, System.Windows.Controls.DataGridLength)
  type: Operator
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 322
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nOverloaded operator, compares 2 DataGridLength&apos;s.\n"
  example: []
  syntax:
    content: public static bool operator !=(DataGridLength gl1, DataGridLength gl2)
    parameters:
    - id: gl1
      type: System.Windows.Controls.DataGridLength
      description: first DataGridLength to compare.
    - id: gl2
      type: System.Windows.Controls.DataGridLength
      description: second DataGridLength to compare.
    return:
      type: System.Boolean
      description: "true if specified DataGridLength have either different value, \nunit type, desired value, or display value."
    content.vb: Public Shared Operator <>(gl1 As DataGridLength, gl2 As DataGridLength) As Boolean
  overload: System.Windows.Controls.DataGridLength.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)
  commentId: M:System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)
  id: Equals(System.Windows.Controls.DataGridLength)
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Equals(DataGridLength)
  nameWithType: DataGridLength.Equals(DataGridLength)
  fullName: System.Windows.Controls.DataGridLength.Equals(System.Windows.Controls.DataGridLength)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 336
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCompares this instance of DataGridLength with another instance.\n"
  example: []
  syntax:
    content: public bool Equals(DataGridLength other)
    parameters:
    - id: other
      type: System.Windows.Controls.DataGridLength
      description: DataGridLength length instance to compare.
    return:
      type: System.Boolean
      description: "<code>true</code> if this DataGridLength instance has the same value \n    and unit type as gridLength."
    content.vb: Public Function Equals(other As DataGridLength) As Boolean
  overload: System.Windows.Controls.DataGridLength.Equals*
  implements:
  - System.IEquatable{System.Windows.Controls.DataGridLength}.Equals(System.Windows.Controls.DataGridLength)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.DataGridLength.Equals(System.Object)
  commentId: M:System.Windows.Controls.DataGridLength.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DataGridLength.Equals(Object)
  fullName: System.Windows.Controls.DataGridLength.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 347
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nCompares this instance of DataGridLength with another object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Reference to an object for comparison.
    return:
      type: System.Boolean
      description: "<code>true</code> if this DataGridLength instance has the same value \n    and unit type as oCompare."
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Controls.DataGridLength.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Controls.DataGridLength.GetHashCode
  commentId: M:System.Windows.Controls.DataGridLength.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.DataGridLength
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DataGridLength.GetHashCode()
  fullName: System.Windows.Controls.DataGridLength.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Controls.Data/DataGrid/DataGridLength.cs
    startLine: 361
  assemblies:
  - OpenSilver.Controls.Data
  namespace: System.Windows.Controls
  summary: "\nReturns a unique hash code for this DataGridLength\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: hash code
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.Controls.DataGridLength.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Controls.DataGrid
  commentId: T:System.Windows.Controls.DataGrid
  parent: System.Windows.Controls
  name: DataGrid
  nameWithType: DataGrid
  fullName: System.Windows.Controls.DataGrid
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.IEquatable{System.Windows.Controls.DataGridLength}
  commentId: T:System.IEquatable{System.Windows.Controls.DataGridLength}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DataGridLength>
  nameWithType: IEquatable<DataGridLength>
  fullName: System.IEquatable<System.Windows.Controls.DataGridLength>
  nameWithType.vb: IEquatable(Of DataGridLength)
  fullName.vb: System.IEquatable(Of System.Windows.Controls.DataGridLength)
  name.vb: IEquatable(Of DataGridLength)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.DataGridLength
    name: DataGridLength
    nameWithType: DataGridLength
    fullName: System.Windows.Controls.DataGridLength
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Controls.DataGridLength
    name: DataGridLength
    nameWithType: DataGridLength
    fullName: System.Windows.Controls.DataGridLength
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.DataGridLength
  commentId: T:System.Windows.Controls.DataGridLength
  parent: System.Windows.Controls
  name: DataGridLength
  nameWithType: DataGridLength
  fullName: System.Windows.Controls.DataGridLength
- uid: System.Windows.Controls.DataGridLength.#ctor*
  commentId: Overload:System.Windows.Controls.DataGridLength.#ctor
  name: DataGridLength
  nameWithType: DataGridLength.DataGridLength
  fullName: System.Windows.Controls.DataGridLength.DataGridLength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Controls.DataGridLengthUnitType
  commentId: T:System.Windows.Controls.DataGridLengthUnitType
  parent: System.Windows.Controls
  name: DataGridLengthUnitType
  nameWithType: DataGridLengthUnitType
  fullName: System.Windows.Controls.DataGridLengthUnitType
- uid: System.Windows.Controls.DataGridLength.Auto*
  commentId: Overload:System.Windows.Controls.DataGridLength.Auto
  name: Auto
  nameWithType: DataGridLength.Auto
  fullName: System.Windows.Controls.DataGridLength.Auto
- uid: System.Windows.Controls.DataGridLength.DesiredValue*
  commentId: Overload:System.Windows.Controls.DataGridLength.DesiredValue
  name: DesiredValue
  nameWithType: DataGridLength.DesiredValue
  fullName: System.Windows.Controls.DataGridLength.DesiredValue
- uid: System.Windows.Controls.DataGridLength.DisplayValue*
  commentId: Overload:System.Windows.Controls.DataGridLength.DisplayValue
  name: DisplayValue
  nameWithType: DataGridLength.DisplayValue
  fullName: System.Windows.Controls.DataGridLength.DisplayValue
- uid: System.Windows.Controls.DataGridLength.IsAbsolute*
  commentId: Overload:System.Windows.Controls.DataGridLength.IsAbsolute
  name: IsAbsolute
  nameWithType: DataGridLength.IsAbsolute
  fullName: System.Windows.Controls.DataGridLength.IsAbsolute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataGridLength.IsAuto*
  commentId: Overload:System.Windows.Controls.DataGridLength.IsAuto
  name: IsAuto
  nameWithType: DataGridLength.IsAuto
  fullName: System.Windows.Controls.DataGridLength.IsAuto
- uid: System.Windows.Controls.DataGridLength.IsSizeToCells*
  commentId: Overload:System.Windows.Controls.DataGridLength.IsSizeToCells
  name: IsSizeToCells
  nameWithType: DataGridLength.IsSizeToCells
  fullName: System.Windows.Controls.DataGridLength.IsSizeToCells
- uid: System.Windows.Controls.DataGridLength.IsSizeToHeader*
  commentId: Overload:System.Windows.Controls.DataGridLength.IsSizeToHeader
  name: IsSizeToHeader
  nameWithType: DataGridLength.IsSizeToHeader
  fullName: System.Windows.Controls.DataGridLength.IsSizeToHeader
- uid: System.Windows.Controls.DataGridLength.IsStar*
  commentId: Overload:System.Windows.Controls.DataGridLength.IsStar
  name: IsStar
  nameWithType: DataGridLength.IsStar
  fullName: System.Windows.Controls.DataGridLength.IsStar
- uid: System.Windows.Controls.DataGridLength.SizeToCells*
  commentId: Overload:System.Windows.Controls.DataGridLength.SizeToCells
  name: SizeToCells
  nameWithType: DataGridLength.SizeToCells
  fullName: System.Windows.Controls.DataGridLength.SizeToCells
- uid: System.Windows.Controls.DataGridLength.SizeToHeader*
  commentId: Overload:System.Windows.Controls.DataGridLength.SizeToHeader
  name: SizeToHeader
  nameWithType: DataGridLength.SizeToHeader
  fullName: System.Windows.Controls.DataGridLength.SizeToHeader
- uid: System.Windows.Controls.DataGridLength.UnitType*
  commentId: Overload:System.Windows.Controls.DataGridLength.UnitType
  name: UnitType
  nameWithType: DataGridLength.UnitType
  fullName: System.Windows.Controls.DataGridLength.UnitType
- uid: System.Windows.Controls.DataGridLength.Value*
  commentId: Overload:System.Windows.Controls.DataGridLength.Value
  name: Value
  nameWithType: DataGridLength.Value
  fullName: System.Windows.Controls.DataGridLength.Value
- uid: System.Windows.Controls.DataGridLength.op_Equality*
  commentId: Overload:System.Windows.Controls.DataGridLength.op_Equality
  name: Equality
  nameWithType: DataGridLength.Equality
  fullName: System.Windows.Controls.DataGridLength.Equality
- uid: System.Windows.Controls.DataGridLength.op_Inequality*
  commentId: Overload:System.Windows.Controls.DataGridLength.op_Inequality
  name: Inequality
  nameWithType: DataGridLength.Inequality
  fullName: System.Windows.Controls.DataGridLength.Inequality
- uid: System.Windows.Controls.DataGridLength.Equals*
  commentId: Overload:System.Windows.Controls.DataGridLength.Equals
  name: Equals
  nameWithType: DataGridLength.Equals
  fullName: System.Windows.Controls.DataGridLength.Equals
- uid: System.IEquatable{System.Windows.Controls.DataGridLength}.Equals(System.Windows.Controls.DataGridLength)
  commentId: M:System.IEquatable{System.Windows.Controls.DataGridLength}.Equals(System.Windows.Controls.DataGridLength)
  parent: System.IEquatable{System.Windows.Controls.DataGridLength}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DataGridLength)
  nameWithType: IEquatable<DataGridLength>.Equals(DataGridLength)
  fullName: System.IEquatable<System.Windows.Controls.DataGridLength>.Equals(System.Windows.Controls.DataGridLength)
  nameWithType.vb: IEquatable(Of DataGridLength).Equals(DataGridLength)
  fullName.vb: System.IEquatable(Of System.Windows.Controls.DataGridLength).Equals(System.Windows.Controls.DataGridLength)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DataGridLength>.Equals
    fullName: System.IEquatable<System.Windows.Controls.DataGridLength>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Controls.DataGridLength
    name: DataGridLength
    nameWithType: DataGridLength
    fullName: System.Windows.Controls.DataGridLength
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DataGridLength).Equals
    fullName: System.IEquatable(Of System.Windows.Controls.DataGridLength).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Controls.DataGridLength
    name: DataGridLength
    nameWithType: DataGridLength
    fullName: System.Windows.Controls.DataGridLength
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.DataGridLength.GetHashCode*
  commentId: Overload:System.Windows.Controls.DataGridLength.GetHashCode
  name: GetHashCode
  nameWithType: DataGridLength.GetHashCode
  fullName: System.Windows.Controls.DataGridLength.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
