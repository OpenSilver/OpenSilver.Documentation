### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.FontFamily
  commentId: T:System.Windows.Media.FontFamily
  id: FontFamily
  parent: System.Windows.Media
  children:
  - System.Windows.Media.FontFamily.#ctor(System.String)
  - System.Windows.Media.FontFamily.Equals(System.Object)
  - System.Windows.Media.FontFamily.GetHashCode
  - System.Windows.Media.FontFamily.LoadFontAsync(System.String)
  - System.Windows.Media.FontFamily.LoadFontAsync(System.Windows.Media.FontFamily)
  - System.Windows.Media.FontFamily.Source
  - System.Windows.Media.FontFamily.ToString
  langs:
  - csharp
  - vb
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: FontFamily
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nRepresents a family of related fonts.\n"
  example: []
  syntax:
    content: public class FontFamily
    content.vb: Public Class FontFamily
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Media.FontFamily.#ctor(System.String)
  commentId: M:System.Windows.Media.FontFamily.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: FontFamily(String)
  nameWithType: FontFamily.FontFamily(String)
  fullName: System.Windows.Media.FontFamily.FontFamily(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref> class from\nthe specified font family string.\n"
  example: []
  syntax:
    content: public FontFamily(string familyName)
    parameters:
    - id: familyName
      type: System.String
      description: "\nThe family name or names that comprise the new <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Sub New(familyName As String)
  overload: System.Windows.Media.FontFamily.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.FontFamily.Source
  commentId: P:System.Windows.Media.FontFamily.Source
  id: Source
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: FontFamily.Source
  fullName: System.Windows.Media.FontFamily.Source
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Source
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets the font family name that is used to construct the <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public string Source { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Source As String
  overload: System.Windows.Media.FontFamily.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.FontFamily.Equals(System.Object)
  commentId: M:System.Windows.Media.FontFamily.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FontFamily.Equals(Object)
  fullName: System.Windows.Media.FontFamily.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 54
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nGets a value that indicates whether the current font family object and the specified\nfont family object are the same.\n"
  example: []
  syntax:
    content: public override bool Equals(object o)
    parameters:
    - id: o
      type: System.Object
      description: "\nThe object to compare.\n"
    return:
      type: System.Boolean
      description: "\ntrue if o is equal to the current <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise,\nfalse. If o is not a <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref> object, false is returned.\n"
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: System.Windows.Media.FontFamily.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.FontFamily.GetHashCode
  commentId: M:System.Windows.Media.FontFamily.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FontFamily.GetHashCode()
  fullName: System.Windows.Media.FontFamily.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nServes as a hash function for <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nAn integer hash value.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: System.Windows.Media.FontFamily.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.FontFamily.ToString
  commentId: M:System.Windows.Media.FontFamily.ToString
  id: ToString
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FontFamily.ToString()
  fullName: System.Windows.Media.FontFamily.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 80
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  summary: "\nReturns a string representation of this <xref href=\"System.Windows.Media.FontFamily\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nThe input font family string.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Windows.Media.FontFamily.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.FontFamily.LoadFontAsync(System.Windows.Media.FontFamily)
  commentId: M:System.Windows.Media.FontFamily.LoadFontAsync(System.Windows.Media.FontFamily)
  id: LoadFontAsync(System.Windows.Media.FontFamily)
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: LoadFontAsync(FontFamily)
  nameWithType: FontFamily.LoadFontAsync(FontFamily)
  fullName: System.Windows.Media.FontFamily.LoadFontAsync(System.Windows.Media.FontFamily)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LoadFontAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 82
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  syntax:
    content: public static Task<bool> LoadFontAsync(FontFamily font)
    parameters:
    - id: font
      type: System.Windows.Media.FontFamily
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function LoadFontAsync(font As FontFamily) As Task(Of Boolean)
  overload: System.Windows.Media.FontFamily.LoadFontAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.FontFamily.LoadFontAsync(System.String)
  commentId: M:System.Windows.Media.FontFamily.LoadFontAsync(System.String)
  id: LoadFontAsync(System.String)
  parent: System.Windows.Media.FontFamily
  langs:
  - csharp
  - vb
  name: LoadFontAsync(String)
  nameWithType: FontFamily.LoadFontAsync(String)
  fullName: System.Windows.Media.FontFamily.LoadFontAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LoadFontAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media/FontFamily.cs
    startLine: 93
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media
  syntax:
    content: public static Task<bool> LoadFontAsync(string fontSource)
    parameters:
    - id: fontSource
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function LoadFontAsync(fontSource As String) As Task(Of Boolean)
  overload: System.Windows.Media.FontFamily.LoadFontAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Media.FontFamily
  commentId: T:System.Windows.Media.FontFamily
  parent: System.Windows.Media
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Windows.Media.FontFamily
- uid: System.Windows.Media.FontFamily.#ctor*
  commentId: Overload:System.Windows.Media.FontFamily.#ctor
  name: FontFamily
  nameWithType: FontFamily.FontFamily
  fullName: System.Windows.Media.FontFamily.FontFamily
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.FontFamily.Source*
  commentId: Overload:System.Windows.Media.FontFamily.Source
  name: Source
  nameWithType: FontFamily.Source
  fullName: System.Windows.Media.FontFamily.Source
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.FontFamily.Equals*
  commentId: Overload:System.Windows.Media.FontFamily.Equals
  name: Equals
  nameWithType: FontFamily.Equals
  fullName: System.Windows.Media.FontFamily.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.FontFamily.GetHashCode*
  commentId: Overload:System.Windows.Media.FontFamily.GetHashCode
  name: GetHashCode
  nameWithType: FontFamily.GetHashCode
  fullName: System.Windows.Media.FontFamily.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.FontFamily.ToString*
  commentId: Overload:System.Windows.Media.FontFamily.ToString
  name: ToString
  nameWithType: FontFamily.ToString
  fullName: System.Windows.Media.FontFamily.ToString
- uid: System.Windows.Media.FontFamily.LoadFontAsync*
  commentId: Overload:System.Windows.Media.FontFamily.LoadFontAsync
  name: LoadFontAsync
  nameWithType: FontFamily.LoadFontAsync
  fullName: System.Windows.Media.FontFamily.LoadFontAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
