### YamlMime:ManagedReference
items:
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities
  commentId: T:Microsoft.Expression.Interactivity.VisualStateUtilities
  id: VisualStateUtilities
  parent: Microsoft.Expression.Interactivity
  children:
  - Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups(System.Windows.FrameworkElement)
  - Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  - Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement,System.Windows.FrameworkElement@)
  langs:
  - csharp
  - vb
  name: VisualStateUtilities
  nameWithType: VisualStateUtilities
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities
  type: Class
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: VisualStateUtilities
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
    startLine: 16
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity
  summary: "\nThis class provides various platform agnostic standard operations for working with VisualStateManager.\n"
  example: []
  syntax:
    content: public static class VisualStateUtilities
    content.vb: Public Module VisualStateUtilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  commentId: M:Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)
  parent: Microsoft.Expression.Interactivity.VisualStateUtilities
  langs:
  - csharp
  - vb
  name: GoToState(FrameworkElement, String, Boolean)
  nameWithType: VisualStateUtilities.GoToState(FrameworkElement, String, Boolean)
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState(System.Windows.FrameworkElement, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GoToState
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
    startLine: 27
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity
  summary: "\nTransitions the control between two states.\n"
  example: []
  syntax:
    content: public static bool GoToState(FrameworkElement element, string stateName, bool useTransitions)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: The element to transition between states.
    - id: stateName
      type: System.String
      description: The state to transition to.
    - id: useTransitions
      type: System.Boolean
      description: True to use a System.Windows.VisualTransition to transition between states; otherwise, false.
    return:
      type: System.Boolean
      description: True if the control successfully transitioned to the new state; otherwise, false.
    content.vb: Public Shared Function GoToState(element As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean
  overload: Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Control is null.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: StateName is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups(System.Windows.FrameworkElement)
  commentId: M:Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups(System.Windows.FrameworkElement)
  id: GetVisualStateGroups(System.Windows.FrameworkElement)
  parent: Microsoft.Expression.Interactivity.VisualStateUtilities
  langs:
  - csharp
  - vb
  name: GetVisualStateGroups(FrameworkElement)
  nameWithType: VisualStateUtilities.GetVisualStateGroups(FrameworkElement)
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetVisualStateGroups
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
    startLine: 52
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity
  summary: "\nGets the value of the VisualStateManager.VisualStateGroups attached property.\n"
  example: []
  syntax:
    content: public static IList GetVisualStateGroups(FrameworkElement targetObject)
    parameters:
    - id: targetObject
      type: System.Windows.FrameworkElement
      description: The element from which to get the VisualStateManager.VisualStateGroups.
    return:
      type: System.Collections.IList
      description: ''
    content.vb: Public Shared Function GetVisualStateGroups(targetObject As FrameworkElement) As IList
  overload: Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement,System.Windows.FrameworkElement@)
  commentId: M:Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement,System.Windows.FrameworkElement@)
  id: TryFindNearestStatefulControl(System.Windows.FrameworkElement,System.Windows.FrameworkElement@)
  parent: Microsoft.Expression.Interactivity.VisualStateUtilities
  langs:
  - csharp
  - vb
  name: TryFindNearestStatefulControl(FrameworkElement, out FrameworkElement)
  nameWithType: VisualStateUtilities.TryFindNearestStatefulControl(FrameworkElement, out FrameworkElement)
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement, out System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryFindNearestStatefulControl
    path: ../OpenSilverGit/src/Runtime/Blend/Interactions/Interactivity/VisualStateUtilities.cs
    startLine: 96
  assemblies:
  - OpenSilver.Expression.Interactions
  namespace: Microsoft.Expression.Interactivity
  summary: "\nFind the nearest parent which contains visual states.\n"
  example: []
  syntax:
    content: public static bool TryFindNearestStatefulControl(FrameworkElement contextElement, out FrameworkElement resolvedControl)
    parameters:
    - id: contextElement
      type: System.Windows.FrameworkElement
      description: The element from which to find the nearest stateful control.
    - id: resolvedControl
      type: System.Windows.FrameworkElement
      description: The nearest stateful control if True; else null.
    return:
      type: System.Boolean
      description: True if a parent contains visual states; else False.
    content.vb: Public Shared Function TryFindNearestStatefulControl(contextElement As FrameworkElement, ByRef resolvedControl As FrameworkElement) As Boolean
  overload: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl*
  nameWithType.vb: VisualStateUtilities.TryFindNearestStatefulControl(FrameworkElement, ByRef FrameworkElement)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl(System.Windows.FrameworkElement, ByRef System.Windows.FrameworkElement)
  name.vb: TryFindNearestStatefulControl(FrameworkElement, ByRef FrameworkElement)
references:
- uid: Microsoft.Expression.Interactivity
  commentId: N:Microsoft.Expression.Interactivity
  name: Microsoft.Expression.Interactivity
  nameWithType: Microsoft.Expression.Interactivity
  fullName: Microsoft.Expression.Interactivity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState*
  commentId: Overload:Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState
  name: GoToState
  nameWithType: VisualStateUtilities.GoToState
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.GoToState
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups*
  commentId: Overload:Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups
  name: GetVisualStateGroups
  nameWithType: VisualStateUtilities.GetVisualStateGroups
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.GetVisualStateGroups
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl*
  commentId: Overload:Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl
  name: TryFindNearestStatefulControl
  nameWithType: VisualStateUtilities.TryFindNearestStatefulControl
  fullName: Microsoft.Expression.Interactivity.VisualStateUtilities.TryFindNearestStatefulControl
