### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeInvoker
  commentId: T:System.Xaml.Schema.XamlTypeInvoker
  id: XamlTypeInvoker
  parent: System.Xaml.Schema
  children:
  - System.Xaml.Schema.XamlTypeInvoker.#ctor
  - System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  - System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  - System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  - System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  - System.Xaml.Schema.XamlTypeInvoker.ToImmutable(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.ToMutable(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.Type
  - System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  langs:
  - csharp
  - vb
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlTypeInvoker
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 35
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public class XamlTypeInvoker
    content.vb: Public Class XamlTypeInvoker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UnknownInvoker
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 38
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static XamlTypeInvoker UnknownInvoker { get; }
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
    content.vb: Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker
  overload: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 40
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: protected XamlTypeInvoker()
    content.vb: Protected Sub New
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker(System.Xaml.XamlType)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 44
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlTypeInvoker(XamlType type)
    parameters:
    - id: type
      type: System.Xaml.XamlType
    content.vb: Public Sub New(type As XamlType)
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeInvoker.Type
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.Type
  id: Type
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: XamlTypeInvoker.Type
  fullName: System.Xaml.Schema.XamlTypeInvoker.Type
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Type
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 72
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: protected XamlType Type { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Protected ReadOnly Property Type As XamlType
  overload: System.Xaml.Schema.XamlTypeInvoker.Type*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  id: SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetMarkupExtensionHandler
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 81
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public EventHandler<XamlSetMarkupExtensionEventArgs> SetMarkupExtensionHandler { get; }
    parameters: []
    return:
      type: System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
    content.vb: Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)
  overload: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  id: SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetTypeConverterHandler
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 83
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public EventHandler<XamlSetTypeConverterEventArgs> SetTypeConverterHandler { get; }
    parameters: []
    return:
      type: System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
    content.vb: Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)
  overload: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: AddToCollection(Object, Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object, Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddToCollection
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 86
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual void AddToCollection(object instance, object item)
    parameters:
    - id: instance
      type: System.Object
    - id: item
      type: System.Object
    content.vb: Public Overridable Sub AddToCollection(instance As Object, item As Object)
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  id: AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: AddToDictionary(Object, Object, Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object, Object, Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddToDictionary
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 194
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual void AddToDictionary(object instance, object key, object item)
    parameters:
    - id: instance
      type: System.Object
    - id: key
      type: System.Object
    - id: item
      type: System.Object
    content.vb: Public Overridable Sub AddToDictionary(instance As Object, key As Object, item As Object)
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateInstance
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 271
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual object CreateInstance(object[] arguments)
    parameters:
    - id: arguments
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Overridable Function CreateInstance(arguments As Object()) As Object
  overload: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  nameWithType.vb: XamlTypeInvoker.CreateInstance(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object())
  name.vb: CreateInstance(Object())
- uid: System.Xaml.Schema.XamlTypeInvoker.ToMutable(System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.ToMutable(System.Object)
  id: ToMutable(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: ToMutable(Object)
  nameWithType: XamlTypeInvoker.ToMutable(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.ToMutable(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToMutable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 280
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual object ToMutable(object instance)
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overridable Function ToMutable(instance As Object) As Object
  overload: System.Xaml.Schema.XamlTypeInvoker.ToMutable*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.ToImmutable(System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.ToImmutable(System.Object)
  id: ToImmutable(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: ToImmutable(Object)
  nameWithType: XamlTypeInvoker.ToImmutable(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.ToImmutable(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToImmutable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 301
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual object ToImmutable(object instance)
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overridable Function ToImmutable(instance As Object) As Object
  overload: System.Xaml.Schema.XamlTypeInvoker.ToImmutable*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  id: GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAddMethod
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 323
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual MethodInfo GetAddMethod(XamlType contentType)
    parameters:
    - id: contentType
      type: System.Xaml.XamlType
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Overridable Function GetAddMethod(contentType As XamlType) As MethodInfo
  overload: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  id: GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEnumeratorMethod
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 330
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual MethodInfo GetEnumeratorMethod()
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Overridable Function GetEnumeratorMethod As MethodInfo
  overload: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  id: GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  - vb
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetItems
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeInvoker.cs
    startLine: 337
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public virtual IEnumerator GetItems(object instance)
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function GetItems(instance As Object) As IEnumerator
  overload: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Xaml.Schema
  commentId: N:System.Xaml.Schema
  name: System.Xaml.Schema
  nameWithType: System.Xaml.Schema
  fullName: System.Xaml.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker
  commentId: T:System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.#ctor
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker.XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker.XamlTypeInvoker
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  parent: System.Xaml
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Xaml.Schema.XamlTypeInvoker.Type*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.Type
  name: Type
  nameWithType: XamlTypeInvoker.Type
  fullName: System.Xaml.Schema.XamlTypeInvoker.Type
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
  commentId: T:System.EventHandler{System.Xaml.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Xaml.Markup.XamlSetMarkupExtensionEventArgs>
  nameWithType.vb: EventHandler(Of XamlSetMarkupExtensionEventArgs)
  fullName.vb: System.EventHandler(Of System.Xaml.Markup.XamlSetMarkupExtensionEventArgs)
  name.vb: EventHandler(Of XamlSetMarkupExtensionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: System.Xaml.Markup.XamlSetMarkupExtensionEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
- uid: System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
  commentId: T:System.EventHandler{System.Xaml.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Xaml.Markup.XamlSetTypeConverterEventArgs>
  nameWithType.vb: EventHandler(Of XamlSetTypeConverterEventArgs)
  fullName.vb: System.EventHandler(Of System.Xaml.Markup.XamlSetTypeConverterEventArgs)
  name.vb: EventHandler(Of XamlSetTypeConverterEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: System.Xaml.Markup.XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: System.Xaml.Markup.XamlSetTypeConverterEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.AddToCollection
  name: AddToCollection
  nameWithType: XamlTypeInvoker.AddToCollection
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToCollection
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary
  name: AddToDictionary
  nameWithType: XamlTypeInvoker.AddToDictionary
  fullName: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.CreateInstance
  name: CreateInstance
  nameWithType: XamlTypeInvoker.CreateInstance
  fullName: System.Xaml.Schema.XamlTypeInvoker.CreateInstance
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xaml.Schema.XamlTypeInvoker.ToMutable*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.ToMutable
  name: ToMutable
  nameWithType: XamlTypeInvoker.ToMutable
  fullName: System.Xaml.Schema.XamlTypeInvoker.ToMutable
- uid: System.Xaml.Schema.XamlTypeInvoker.ToImmutable*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.ToImmutable
  name: ToImmutable
  nameWithType: XamlTypeInvoker.ToImmutable
  fullName: System.Xaml.Schema.XamlTypeInvoker.ToImmutable
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod
  name: GetAddMethod
  nameWithType: XamlTypeInvoker.GetAddMethod
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  name: GetEnumeratorMethod
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  commentId: Overload:System.Xaml.Schema.XamlTypeInvoker.GetItems
  name: GetItems
  nameWithType: XamlTypeInvoker.GetItems
  fullName: System.Xaml.Schema.XamlTypeInvoker.GetItems
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
