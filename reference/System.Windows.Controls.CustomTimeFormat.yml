### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.CustomTimeFormat
  commentId: T:System.Windows.Controls.CustomTimeFormat
  id: CustomTimeFormat
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.CustomTimeFormat.#ctor
  - System.Windows.Controls.CustomTimeFormat.#ctor(System.String)
  - System.Windows.Controls.CustomTimeFormat.Format
  - System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  - System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: CustomTimeFormat
  nameWithType: CustomTimeFormat
  fullName: System.Windows.Controls.CustomTimeFormat
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CustomTimeFormat
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nRepresents a single time format used for parsing and formatting.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public sealed class CustomTimeFormat : ITimeFormat
    content.vb: >-
      <NotImplemented>

      Public NotInheritable Class CustomTimeFormat

          Implements ITimeFormat
  inheritance:
  - System.Object
  implements:
  - System.Windows.Controls.ITimeFormat
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Controls.CustomTimeFormat.Format
  commentId: P:System.Windows.Controls.CustomTimeFormat.Format
  id: Format
  parent: System.Windows.Controls.CustomTimeFormat
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: CustomTimeFormat.Format
  fullName: System.Windows.Controls.CustomTimeFormat.Format
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Format
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 33
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets or sets the custom format that is used to parse or display\na String or DateTime.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string Format { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <NotImplemented>

      Public Property Format As String
  overload: System.Windows.Controls.CustomTimeFormat.Format*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.CustomTimeFormat.#ctor(System.String)
  commentId: M:System.Windows.Controls.CustomTimeFormat.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Controls.CustomTimeFormat
  langs:
  - csharp
  - vb
  name: CustomTimeFormat(String)
  nameWithType: CustomTimeFormat.CustomTimeFormat(String)
  fullName: System.Windows.Controls.CustomTimeFormat.CustomTimeFormat(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Controls.CustomTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public CustomTimeFormat(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format that is used to parse or display

        a String or DateTime.
    content.vb: >-
      <NotImplemented>

      Public Sub New(format As String)
  overload: System.Windows.Controls.CustomTimeFormat.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.CustomTimeFormat.#ctor
  commentId: M:System.Windows.Controls.CustomTimeFormat.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.CustomTimeFormat
  langs:
  - csharp
  - vb
  name: CustomTimeFormat()
  nameWithType: CustomTimeFormat.CustomTimeFormat()
  fullName: System.Windows.Controls.CustomTimeFormat.CustomTimeFormat()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Controls.CustomTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public CustomTimeFormat()
    content.vb: >-
      <NotImplemented>

      Public Sub New
  overload: System.Windows.Controls.CustomTimeFormat.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  id: GetTimeDisplayFormat(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.CustomTimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeDisplayFormat(CultureInfo)
  nameWithType: CustomTimeFormat.GetTimeDisplayFormat(CultureInfo)
  fullName: System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeDisplayFormat
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the format to use to display a DateTime as a time value.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string GetTimeDisplayFormat(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture.
    return:
      type: System.String
      description: "\nA format to use during display of a DateTime.\n"
    content.vb: >-
      <NotImplemented>

      Public Function GetTimeDisplayFormat(culture As CultureInfo) As String
  overload: System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat*
  implements:
  - System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  id: GetTimeParseFormats(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.CustomTimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeParseFormats(CultureInfo)
  nameWithType: CustomTimeFormat.GetTimeParseFormats(CultureInfo)
  fullName: System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeParseFormats
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/WORKINPROGRESS/CustomTimeFormat.cs
    startLine: 75
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls
  summary: "\nGets the format to use to parse a string to a DateTime.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public string[] GetTimeParseFormats(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture used to determine formats.
    return:
      type: System.String[]
      description: "\nAn array of formats to be used during parsing.\n"
    content.vb: >-
      <NotImplemented>

      Public Function GetTimeParseFormats(culture As CultureInfo) As String()
  overload: System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats*
  implements:
  - System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.ITimeFormat
  commentId: T:System.Windows.Controls.ITimeFormat
  parent: System.Windows.Controls
  name: ITimeFormat
  nameWithType: ITimeFormat
  fullName: System.Windows.Controls.ITimeFormat
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Controls.CustomTimeFormat.Format*
  commentId: Overload:System.Windows.Controls.CustomTimeFormat.Format
  name: Format
  nameWithType: CustomTimeFormat.Format
  fullName: System.Windows.Controls.CustomTimeFormat.Format
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.CustomTimeFormat
  commentId: T:System.Windows.Controls.CustomTimeFormat
  name: CustomTimeFormat
  nameWithType: CustomTimeFormat
  fullName: System.Windows.Controls.CustomTimeFormat
- uid: System.Windows.Controls.CustomTimeFormat.#ctor*
  commentId: Overload:System.Windows.Controls.CustomTimeFormat.#ctor
  name: CustomTimeFormat
  nameWithType: CustomTimeFormat.CustomTimeFormat
  fullName: System.Windows.Controls.CustomTimeFormat.CustomTimeFormat
- uid: System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat*
  commentId: Overload:System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat
  name: GetTimeDisplayFormat
  nameWithType: CustomTimeFormat.GetTimeDisplayFormat
  fullName: System.Windows.Controls.CustomTimeFormat.GetTimeDisplayFormat
- uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  isExternal: true
  name: GetTimeDisplayFormat(CultureInfo)
  nameWithType: ITimeFormat.GetTimeDisplayFormat(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
    name: GetTimeDisplayFormat
    nameWithType: ITimeFormat.GetTimeDisplayFormat
    fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
    name: GetTimeDisplayFormat
    nameWithType: ITimeFormat.GetTimeDisplayFormat
    fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats*
  commentId: Overload:System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats
  name: GetTimeParseFormats
  nameWithType: CustomTimeFormat.GetTimeParseFormats
  fullName: System.Windows.Controls.CustomTimeFormat.GetTimeParseFormats
- uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  isExternal: true
  name: GetTimeParseFormats(CultureInfo)
  nameWithType: ITimeFormat.GetTimeParseFormats(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
    name: GetTimeParseFormats
    nameWithType: ITimeFormat.GetTimeParseFormats
    fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
    name: GetTimeParseFormats
    nameWithType: ITimeFormat.GetTimeParseFormats
    fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
