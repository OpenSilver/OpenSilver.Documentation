### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  commentId: T:System.Windows.Data.BindingExpression
  id: BindingExpression
  parent: System.Windows.Data
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.TargetProperty
  - System.Windows.Data.BindingExpression.UpdateSource
  langs:
  - csharp
  - vb
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BindingExpression
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nContains information about a single instance of a <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class BindingExpression : BindingExpressionBase'
    content.vb: >-
      Public NotInheritable Class BindingExpression
          Inherits BindingExpressionBase
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Data.BindingExpression.TargetProperty
  commentId: P:System.Windows.Data.BindingExpression.TargetProperty
  id: TargetProperty
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  - vb
  name: TargetProperty
  nameWithType: BindingExpression.TargetProperty
  fullName: System.Windows.Data.BindingExpression.TargetProperty
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TargetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
    startLine: 83
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe binding target property of this binding expression.\n"
  example: []
  syntax:
    content: public DependencyProperty TargetProperty { get; }
    parameters: []
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public ReadOnly Property TargetProperty As DependencyProperty
  overload: System.Windows.Data.BindingExpression.TargetProperty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.BindingExpression.ParentBinding
  commentId: P:System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  - vb
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ParentBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Binding ParentBinding { get; }
    parameters: []
    return:
      type: System.Windows.Data.Binding
    content.vb: Public ReadOnly Property ParentBinding As Binding
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.BindingExpression.DataItem
  commentId: P:System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  - vb
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DataItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
    startLine: 93
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nGets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> uses.\n"
  example: []
  syntax:
    content: public object DataItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property DataItem As Object
  overload: System.Windows.Data.BindingExpression.DataItem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.BindingExpression.UpdateSource
  commentId: M:System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  - vb
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UpdateSource
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingExpression.cs
    startLine: 102
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nSends the current binding target value to the binding source property in\n<xref href=\"System.Windows.Data.BindingMode.TwoWay\" data-throw-if-not-resolved=\"false\"></xref> bindings.\n"
  example: []
  syntax:
    content: public void UpdateSource()
    content.vb: Public Sub UpdateSource
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> is detached from the binding target.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Expression
  commentId: T:System.Windows.Expression
  parent: System.Windows
  name: Expression
  nameWithType: Expression
  fullName: System.Windows.Expression
- uid: System.Windows.Data.BindingExpressionBase
  commentId: T:System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Data.BindingExpression.TargetProperty*
  commentId: Overload:System.Windows.Data.BindingExpression.TargetProperty
  name: TargetProperty
  nameWithType: BindingExpression.TargetProperty
  fullName: System.Windows.Data.BindingExpression.TargetProperty
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.BindingExpression
  commentId: T:System.Windows.Data.BindingExpression
  parent: System.Windows.Data
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  commentId: Overload:System.Windows.Data.BindingExpression.ParentBinding
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.DataItem*
  commentId: Overload:System.Windows.Data.BindingExpression.DataItem
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Windows.Data.BindingMode.TwoWay
  commentId: F:System.Windows.Data.BindingMode.TwoWay
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  commentId: Overload:System.Windows.Data.BindingExpression.UpdateSource
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
  fullName: System.Windows.Data.BindingExpression.UpdateSource
