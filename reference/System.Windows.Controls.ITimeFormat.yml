### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ITimeFormat
  commentId: T:System.Windows.Controls.ITimeFormat
  id: ITimeFormat
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  - System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: ITimeFormat
  nameWithType: ITimeFormat
  fullName: System.Windows.Controls.ITimeFormat
  type: Interface
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ITimeFormat
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
    startLine: 12
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nDefines time formats used for formatting and parsing DateTime values.\n"
  example: []
  syntax:
    content: public interface ITimeFormat
    content.vb: Public Interface ITimeFormat
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  id: GetTimeDisplayFormat(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeDisplayFormat(CultureInfo)
  nameWithType: ITimeFormat.GetTimeDisplayFormat(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeDisplayFormat
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
    startLine: 19
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the format to use to display a DateTime as a time value.\n"
  example: []
  syntax:
    content: string GetTimeDisplayFormat(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture.
    return:
      type: System.String
      description: A format to use during display of a DateTime.
    content.vb: Function GetTimeDisplayFormat(culture As CultureInfo) As String
  overload: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat*
- uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  id: GetTimeParseFormats(System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ITimeFormat
  langs:
  - csharp
  - vb
  name: GetTimeParseFormats(CultureInfo)
  nameWithType: ITimeFormat.GetTimeParseFormats(CultureInfo)
  fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetTimeParseFormats
    path: ../OpenSilverGit/src/Runtime/Controls.Input.Toolkit/TimeInput/TimeFormat/ITimeFormat.cs
    startLine: 26
  assemblies:
  - OpenSilver.Controls.Input.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the formats to use to parse a string to a DateTime.\n"
  example: []
  syntax:
    content: string[] GetTimeParseFormats(CultureInfo culture)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture used to determine formats.
    return:
      type: System.String[]
      description: An array of formats to be used during parsing.
    content.vb: Function GetTimeParseFormats(culture As CultureInfo) As String()
  overload: System.Windows.Controls.ITimeFormat.GetTimeParseFormats*
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat*
  commentId: Overload:System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
  name: GetTimeDisplayFormat
  nameWithType: ITimeFormat.GetTimeDisplayFormat
  fullName: System.Windows.Controls.ITimeFormat.GetTimeDisplayFormat
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.ITimeFormat.GetTimeParseFormats*
  commentId: Overload:System.Windows.Controls.ITimeFormat.GetTimeParseFormats
  name: GetTimeParseFormats
  nameWithType: ITimeFormat.GetTimeParseFormats
  fullName: System.Windows.Controls.ITimeFormat.GetTimeParseFormats
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
