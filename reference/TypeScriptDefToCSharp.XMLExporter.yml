### YamlMime:ManagedReference
items:
- uid: TypeScriptDefToCSharp.XMLExporter
  commentId: T:TypeScriptDefToCSharp.XMLExporter
  id: XMLExporter
  parent: TypeScriptDefToCSharp
  children:
  - TypeScriptDefToCSharp.XMLExporter.#ctor(System.String)
  - TypeScriptDefToCSharp.XMLExporter.ClearParseNode(TinyPG.ParseNode)
  - TypeScriptDefToCSharp.XMLExporter.OutputFile
  - TypeScriptDefToCSharp.XMLExporter.PrintBasicTree(TinyPG.ParseTree)
  - TypeScriptDefToCSharp.XMLExporter.PrintXMLTree(TinyPG.ParseTree)
  - TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar(System.String)
  langs:
  - csharp
  - vb
  name: XMLExporter
  nameWithType: XMLExporter
  fullName: TypeScriptDefToCSharp.XMLExporter
  type: Class
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XMLExporter
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 28
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public class XMLExporter
    content.vb: Public Class XMLExporter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TypeScriptDefToCSharp.XMLExporter.OutputFile
  commentId: P:TypeScriptDefToCSharp.XMLExporter.OutputFile
  id: OutputFile
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: OutputFile
  nameWithType: XMLExporter.OutputFile
  fullName: TypeScriptDefToCSharp.XMLExporter.OutputFile
  type: Property
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OutputFile
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 33
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public string OutputFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OutputFile As String
  overload: TypeScriptDefToCSharp.XMLExporter.OutputFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TypeScriptDefToCSharp.XMLExporter.#ctor(System.String)
  commentId: M:TypeScriptDefToCSharp.XMLExporter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: XMLExporter(String)
  nameWithType: XMLExporter.XMLExporter(String)
  fullName: TypeScriptDefToCSharp.XMLExporter.XMLExporter(System.String)
  type: Constructor
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 48
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public XMLExporter(string Output)
    parameters:
    - id: Output
      type: System.String
    content.vb: Public Sub New(Output As String)
  overload: TypeScriptDefToCSharp.XMLExporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TypeScriptDefToCSharp.XMLExporter.ClearParseNode(TinyPG.ParseNode)
  commentId: M:TypeScriptDefToCSharp.XMLExporter.ClearParseNode(TinyPG.ParseNode)
  id: ClearParseNode(TinyPG.ParseNode)
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: ClearParseNode(ParseNode)
  nameWithType: XMLExporter.ClearParseNode(ParseNode)
  fullName: TypeScriptDefToCSharp.XMLExporter.ClearParseNode(TinyPG.ParseNode)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ClearParseNode
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 61
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public static void ClearParseNode(ParseNode Node)
    parameters:
    - id: Node
      type: TinyPG.ParseNode
    content.vb: Public Shared Sub ClearParseNode(Node As ParseNode)
  overload: TypeScriptDefToCSharp.XMLExporter.ClearParseNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TypeScriptDefToCSharp.XMLExporter.PrintBasicTree(TinyPG.ParseTree)
  commentId: M:TypeScriptDefToCSharp.XMLExporter.PrintBasicTree(TinyPG.ParseTree)
  id: PrintBasicTree(TinyPG.ParseTree)
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: PrintBasicTree(ParseTree)
  nameWithType: XMLExporter.PrintBasicTree(ParseTree)
  fullName: TypeScriptDefToCSharp.XMLExporter.PrintBasicTree(TinyPG.ParseTree)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PrintBasicTree
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 142
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public void PrintBasicTree(ParseTree Tree)
    parameters:
    - id: Tree
      type: TinyPG.ParseTree
    content.vb: Public Sub PrintBasicTree(Tree As ParseTree)
  overload: TypeScriptDefToCSharp.XMLExporter.PrintBasicTree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TypeScriptDefToCSharp.XMLExporter.PrintXMLTree(TinyPG.ParseTree)
  commentId: M:TypeScriptDefToCSharp.XMLExporter.PrintXMLTree(TinyPG.ParseTree)
  id: PrintXMLTree(TinyPG.ParseTree)
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: PrintXMLTree(ParseTree)
  nameWithType: XMLExporter.PrintXMLTree(ParseTree)
  fullName: TypeScriptDefToCSharp.XMLExporter.PrintXMLTree(TinyPG.ParseTree)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PrintXMLTree
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 189
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public void PrintXMLTree(ParseTree Tree)
    parameters:
    - id: Tree
      type: TinyPG.ParseTree
    content.vb: Public Sub PrintXMLTree(Tree As ParseTree)
  overload: TypeScriptDefToCSharp.XMLExporter.PrintXMLTree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar(System.String)
  commentId: M:TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar(System.String)
  id: ReplaceSpecialChar(System.String)
  parent: TypeScriptDefToCSharp.XMLExporter
  langs:
  - csharp
  - vb
  name: ReplaceSpecialChar(String)
  nameWithType: XMLExporter.ReplaceSpecialChar(String)
  fullName: TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar(System.String)
  type: Method
  source:
    remote:
      path: src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReplaceSpecialChar
    path: ../OpenSilverGit/src/Compiler/Compiler.TypeScriptDefToCSharp/XMLExporter.cs
    startLine: 203
  assemblies:
  - OpenSilver.Compiler.TypeScriptDefToCSharp
  namespace: TypeScriptDefToCSharp
  syntax:
    content: public string ReplaceSpecialChar(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ReplaceSpecialChar(s As String) As String
  overload: TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TypeScriptDefToCSharp
  commentId: N:TypeScriptDefToCSharp
  name: TypeScriptDefToCSharp
  nameWithType: TypeScriptDefToCSharp
  fullName: TypeScriptDefToCSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefToCSharp.XMLExporter.OutputFile*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.OutputFile
  name: OutputFile
  nameWithType: XMLExporter.OutputFile
  fullName: TypeScriptDefToCSharp.XMLExporter.OutputFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TypeScriptDefToCSharp.XMLExporter.#ctor*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.#ctor
  name: XMLExporter
  nameWithType: XMLExporter.XMLExporter
  fullName: TypeScriptDefToCSharp.XMLExporter.XMLExporter
- uid: TypeScriptDefToCSharp.XMLExporter.ClearParseNode*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.ClearParseNode
  name: ClearParseNode
  nameWithType: XMLExporter.ClearParseNode
  fullName: TypeScriptDefToCSharp.XMLExporter.ClearParseNode
- uid: TinyPG.ParseNode
  commentId: T:TinyPG.ParseNode
  parent: TinyPG
  name: ParseNode
  nameWithType: ParseNode
  fullName: TinyPG.ParseNode
- uid: TinyPG
  commentId: N:TinyPG
  name: TinyPG
  nameWithType: TinyPG
  fullName: TinyPG
- uid: TypeScriptDefToCSharp.XMLExporter.PrintBasicTree*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.PrintBasicTree
  name: PrintBasicTree
  nameWithType: XMLExporter.PrintBasicTree
  fullName: TypeScriptDefToCSharp.XMLExporter.PrintBasicTree
- uid: TinyPG.ParseTree
  commentId: T:TinyPG.ParseTree
  parent: TinyPG
  name: ParseTree
  nameWithType: ParseTree
  fullName: TinyPG.ParseTree
- uid: TypeScriptDefToCSharp.XMLExporter.PrintXMLTree*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.PrintXMLTree
  name: PrintXMLTree
  nameWithType: XMLExporter.PrintXMLTree
  fullName: TypeScriptDefToCSharp.XMLExporter.PrintXMLTree
- uid: TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar*
  commentId: Overload:TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar
  name: ReplaceSpecialChar
  nameWithType: XMLExporter.ReplaceSpecialChar
  fullName: TypeScriptDefToCSharp.XMLExporter.ReplaceSpecialChar
