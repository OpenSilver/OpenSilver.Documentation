### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.CollectionViewGroup
  commentId: T:System.Windows.Data.CollectionViewGroup
  id: CollectionViewGroup
  parent: System.Windows.Data
  children:
  - System.Windows.Data.CollectionViewGroup.#ctor(System.Object)
  - System.Windows.Data.CollectionViewGroup.IsBottomLevel
  - System.Windows.Data.CollectionViewGroup.ItemCount
  - System.Windows.Data.CollectionViewGroup.Items
  - System.Windows.Data.CollectionViewGroup.Name
  - System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.CollectionViewGroup.PropertyChanged
  - System.Windows.Data.CollectionViewGroup.ProtectedItemCount
  - System.Windows.Data.CollectionViewGroup.ProtectedItems
  - System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  langs:
  - csharp
  - vb
  name: CollectionViewGroup
  nameWithType: CollectionViewGroup
  fullName: System.Windows.Data.CollectionViewGroup
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CollectionViewGroup
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 13
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nA CollectionViewGroup, as created by a CollectionView according to a GroupDescription.\n"
  example: []
  syntax:
    content: 'public abstract class CollectionViewGroup : INotifyPropertyChanged'
    content.vb: >-
      Public MustInherit Class CollectionViewGroup
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Data.CollectionViewGroup.#ctor(System.Object)
  commentId: M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: CollectionViewGroup(Object)
  nameWithType: CollectionViewGroup.CollectionViewGroup(Object)
  fullName: System.Windows.Data.CollectionViewGroup.CollectionViewGroup(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nInitializes a new instance of CollectionViewGroup.\n"
  example: []
  syntax:
    content: protected CollectionViewGroup(object name)
    parameters:
    - id: name
      type: System.Object
    content.vb: Protected Sub New(name As Object)
  overload: System.Windows.Data.CollectionViewGroup.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Data.CollectionViewGroup.Name
  commentId: P:System.Windows.Data.CollectionViewGroup.Name
  id: Name
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CollectionViewGroup.Name
  fullName: System.Windows.Data.CollectionViewGroup.Name
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe name of the group, i.e. the common value of the\nproperty used to divide data items into groups.\n"
  example: []
  syntax:
    content: public object Name { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Name As Object
  overload: System.Windows.Data.CollectionViewGroup.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.CollectionViewGroup.Items
  commentId: P:System.Windows.Data.CollectionViewGroup.Items
  id: Items
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: CollectionViewGroup.Items
  fullName: System.Windows.Data.CollectionViewGroup.Items
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Items
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe immediate children of the group.\nThese may be data items (leaves) or subgroups.\n"
  example: []
  syntax:
    content: public ReadOnlyObservableCollection<object> Items { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
    content.vb: Public ReadOnly Property Items As ReadOnlyObservableCollection(Of Object)
  overload: System.Windows.Data.CollectionViewGroup.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.CollectionViewGroup.ItemCount
  commentId: P:System.Windows.Data.CollectionViewGroup.ItemCount
  id: ItemCount
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: ItemCount
  nameWithType: CollectionViewGroup.ItemCount
  fullName: System.Windows.Data.CollectionViewGroup.ItemCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ItemCount
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 64
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe number of data items (leaves) in the subtree under this group.\n"
  example: []
  syntax:
    content: public int ItemCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ItemCount As Integer
  overload: System.Windows.Data.CollectionViewGroup.ItemCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Data.CollectionViewGroup.IsBottomLevel
  commentId: P:System.Windows.Data.CollectionViewGroup.IsBottomLevel
  id: IsBottomLevel
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: IsBottomLevel
  nameWithType: CollectionViewGroup.IsBottomLevel
  fullName: System.Windows.Data.CollectionViewGroup.IsBottomLevel
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsBottomLevel
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 72
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nIs this group at the bottom level (not further subgrouped).\n"
  example: []
  syntax:
    content: public abstract bool IsBottomLevel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsBottomLevel As Boolean
  overload: System.Windows.Data.CollectionViewGroup.IsBottomLevel*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  id: System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  isEii: true
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: CollectionViewGroup.INotifyPropertyChanged.PropertyChanged
  fullName: System.Windows.Data.CollectionViewGroup.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 84
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nPropertyChanged event (per <xref href=\"System.ComponentModel.INotifyPropertyChanged\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Event System.ComponentModel.INotifyPropertyChanged.PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: CollectionViewGroup.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.Windows.Data.CollectionViewGroup.PropertyChanged
  commentId: E:System.Windows.Data.CollectionViewGroup.PropertyChanged
  id: PropertyChanged
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: CollectionViewGroup.PropertyChanged
  fullName: System.Windows.Data.CollectionViewGroup.PropertyChanged
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PropertyChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 93
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nPropertyChanged event (per <xref href=\"System.ComponentModel.INotifyPropertyChanged\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: protected virtual event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Protected Overridable Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: CollectionViewGroup.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnPropertyChanged
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nRaises a PropertyChanged event (per <xref href=\"System.ComponentModel.INotifyPropertyChanged\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
    content.vb: Protected Overridable Sub OnPropertyChanged(e As PropertyChangedEventArgs)
  overload: System.Windows.Data.CollectionViewGroup.OnPropertyChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Data.CollectionViewGroup.ProtectedItems
  commentId: P:System.Windows.Data.CollectionViewGroup.ProtectedItems
  id: ProtectedItems
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: ProtectedItems
  nameWithType: CollectionViewGroup.ProtectedItems
  fullName: System.Windows.Data.CollectionViewGroup.ProtectedItems
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProtectedItems
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 121
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe items of the group.\nDerived classes can add or remove items using this property;\nthe changes will be reflected in the public Items property.\n"
  example: []
  syntax:
    content: protected ObservableCollection<object> ProtectedItems { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.Object}
    content.vb: Protected ReadOnly Property ProtectedItems As ObservableCollection(Of Object)
  overload: System.Windows.Data.CollectionViewGroup.ProtectedItems*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Windows.Data.CollectionViewGroup.ProtectedItemCount
  commentId: P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount
  id: ProtectedItemCount
  parent: System.Windows.Data.CollectionViewGroup
  langs:
  - csharp
  - vb
  name: ProtectedItemCount
  nameWithType: CollectionViewGroup.ProtectedItemCount
  fullName: System.Windows.Data.CollectionViewGroup.ProtectedItemCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ProtectedItemCount
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/CollectionViewGroup.cs
    startLine: 131
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nThe number of data items (leaves) in the subtree under this group.\nDerived classes can change the count using this property;\nthe changes will be reflected in the public ItemCount property.\n"
  example: []
  syntax:
    content: protected int ProtectedItemCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Property ProtectedItemCount As Integer
  overload: System.Windows.Data.CollectionViewGroup.ProtectedItemCount*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
references:
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Data.CollectionViewGroup.#ctor*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.#ctor
  name: CollectionViewGroup
  nameWithType: CollectionViewGroup.CollectionViewGroup
  fullName: System.Windows.Data.CollectionViewGroup.CollectionViewGroup
- uid: System.Windows.Data.CollectionViewGroup.Name*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.Name
  name: Name
  nameWithType: CollectionViewGroup.Name
  fullName: System.Windows.Data.CollectionViewGroup.Name
- uid: System.Windows.Data.CollectionViewGroup.Items*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.Items
  name: Items
  nameWithType: CollectionViewGroup.Items
  fullName: System.Windows.Data.CollectionViewGroup.Items
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
  commentId: T:System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  name: ReadOnlyObservableCollection<Object>
  nameWithType: ReadOnlyObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Object>
  nameWithType.vb: ReadOnlyObservableCollection(Of Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of System.Object)
  name.vb: ReadOnlyObservableCollection(Of Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  isExternal: true
  name: ReadOnlyObservableCollection<T>
  nameWithType: ReadOnlyObservableCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>
  nameWithType.vb: ReadOnlyObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T)
  name.vb: ReadOnlyObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
    name: ReadOnlyObservableCollection
    nameWithType: ReadOnlyObservableCollection
    fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Windows.Data.CollectionViewGroup.ItemCount*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.ItemCount
  name: ItemCount
  nameWithType: CollectionViewGroup.ItemCount
  fullName: System.Windows.Data.CollectionViewGroup.ItemCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.CollectionViewGroup.IsBottomLevel*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.IsBottomLevel
  name: IsBottomLevel
  nameWithType: CollectionViewGroup.IsBottomLevel
  fullName: System.Windows.Data.CollectionViewGroup.IsBottomLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Windows.Data.CollectionViewGroup.OnPropertyChanged*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.OnPropertyChanged
  name: OnPropertyChanged
  nameWithType: CollectionViewGroup.OnPropertyChanged
  fullName: System.Windows.Data.CollectionViewGroup.OnPropertyChanged
- uid: System.ComponentModel.PropertyChangedEventArgs
  commentId: T:System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Windows.Data.CollectionViewGroup.ProtectedItems*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.ProtectedItems
  name: ProtectedItems
  nameWithType: CollectionViewGroup.ProtectedItems
  fullName: System.Windows.Data.CollectionViewGroup.ProtectedItems
- uid: System.Collections.ObjectModel.ObservableCollection{System.Object}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<Object>
  nameWithType: ObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.Object>
  nameWithType.vb: ObservableCollection(Of Object)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of System.Object)
  name.vb: ObservableCollection(Of Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.CollectionViewGroup.ProtectedItemCount*
  commentId: Overload:System.Windows.Data.CollectionViewGroup.ProtectedItemCount
  name: ProtectedItemCount
  nameWithType: CollectionViewGroup.ProtectedItemCount
  fullName: System.Windows.Data.CollectionViewGroup.ProtectedItemCount
