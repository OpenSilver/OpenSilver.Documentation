### YamlMime:ManagedReference
items:
- uid: System.Windows.ValidateValueCallback
  commentId: T:System.Windows.ValidateValueCallback
  id: ValidateValueCallback
  parent: System.Windows
  children: []
  langs:
  - csharp
  - vb
  name: ValidateValueCallback
  nameWithType: ValidateValueCallback
  fullName: System.Windows.ValidateValueCallback
  type: Delegate
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/ValidateValueCallback.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValidateValueCallback
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/ValidateValueCallback.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents a method used as a callback that validates the effective value of a\n<xref href=\"System.Windows.DependencyProperty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public delegate bool ValidateValueCallback(object value);
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Delegate Function ValidateValueCallback(value As Object) As Boolean
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
