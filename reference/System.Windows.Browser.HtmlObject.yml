### YamlMime:ManagedReference
items:
- uid: System.Windows.Browser.HtmlObject
  commentId: T:System.Windows.Browser.HtmlObject
  id: HtmlObject
  parent: System.Windows.Browser
  children:
  - System.Windows.Browser.HtmlObject.#ctor
  - System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler)
  - System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  - System.Windows.Browser.HtmlObject.ConvertTo(System.Type,System.Boolean)
  - System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler)
  - System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  langs:
  - csharp
  - vb
  name: HtmlObject
  nameWithType: HtmlObject
  fullName: System.Windows.Browser.HtmlObject
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HtmlObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nProvides methods for browser elements that are explicitly supplied by the HTML\nfeatures exposed by Silverlight.\n"
  example: []
  syntax:
    content: 'public abstract class HtmlObject : ScriptObject, IDynamicMetaObjectProvider'
    content.vb: >-
      Public MustInherit Class HtmlObject

          Inherits ScriptObject

          Implements IDynamicMetaObjectProvider
  inheritance:
  - System.Object
  - System.Windows.Browser.ScriptObject
  derivedClasses:
  - System.Windows.Browser.HtmlDocument
  - System.Windows.Browser.HtmlElement
  - System.Windows.Browser.HtmlWindow
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  inheritedMembers:
  - System.Windows.Browser.ScriptObject.Dispatcher
  - System.Windows.Browser.ScriptObject.ManagedObject
  - System.Windows.Browser.ScriptObject.ConvertTo``1
  - System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  - System.Windows.Browser.ScriptObject.GetProperty(System.String)
  - System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  - System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  - System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  - System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  - System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Windows.Browser.HtmlObject.#ctor
  commentId: M:System.Windows.Browser.HtmlObject.#ctor
  id: '#ctor'
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: HtmlObject()
  nameWithType: HtmlObject.HtmlObject()
  fullName: System.Windows.Browser.HtmlObject.HtmlObject()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 24
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Browser.HtmlObject\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      protected HtmlObject()
    content.vb: >-
      <NotImplemented>

      Protected Sub New
  overload: System.Windows.Browser.HtmlObject.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler)
  commentId: M:System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler)
  id: AttachEvent(System.String,System.EventHandler)
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: AttachEvent(String, EventHandler)
  nameWithType: HtmlObject.AttachEvent(String, EventHandler)
  fullName: System.Windows.Browser.HtmlObject.AttachEvent(System.String, System.EventHandler)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AttachEvent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nAttaches the specified .NET Framework event handler (<xref href=\"System.EventHandler\" data-throw-if-not-resolved=\"false\"></xref>) to\nthe specified event on the current Document Object Model (DOM) object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool AttachEvent(string eventName, EventHandler handler)
    parameters:
    - id: eventName
      type: System.String
      description: "\nA named event on the DOM object.\n"
    - id: handler
      type: System.EventHandler
      description: "\nThe method that handles the event.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the event was successfully attached; otherwise, false.\n"
    content.vb: >-
      <NotImplemented>

      Public Function AttachEvent(eventName As String, handler As EventHandler) As Boolean
  overload: System.Windows.Browser.HtmlObject.AttachEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\neventName is an empty string.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\neventName is null.-or-handler is null.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  commentId: M:System.Windows.Browser.HtmlObject.AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  id: AttachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: AttachEvent(String, EventHandler<HtmlEventArgs>)
  nameWithType: HtmlObject.AttachEvent(String, EventHandler<HtmlEventArgs>)
  fullName: System.Windows.Browser.HtmlObject.AttachEvent(System.String, System.EventHandler<System.Windows.Browser.HtmlEventArgs>)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AttachEvent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nAttaches the specified .NET Framework event handler (<xref href=\"System.EventHandler%601\" data-throw-if-not-resolved=\"false\"></xref>) to\nthe specified event on the current Document Object Model (DOM) object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public bool AttachEvent(string eventName, EventHandler<HtmlEventArgs> handler)
    parameters:
    - id: eventName
      type: System.String
      description: "\nA named event on the DOM object.\n"
    - id: handler
      type: System.EventHandler{System.Windows.Browser.HtmlEventArgs}
      description: "\nThe method that handles the event.\n"
    return:
      type: System.Boolean
      description: "\ntrue if the event was successfully attached; otherwise, false.\n"
    content.vb: >-
      <NotImplemented>

      Public Function AttachEvent(eventName As String, handler As EventHandler(Of HtmlEventArgs)) As Boolean
  overload: System.Windows.Browser.HtmlObject.AttachEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\neventName is an empty string.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\neventName is null.-or-handler is null.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: HtmlObject.AttachEvent(String, EventHandler(Of HtmlEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Browser.HtmlObject.AttachEvent(System.String, System.EventHandler(Of System.Windows.Browser.HtmlEventArgs))
  name.vb: AttachEvent(String, EventHandler(Of HtmlEventArgs))
- uid: System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler)
  commentId: M:System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler)
  id: DetachEvent(System.String,System.EventHandler)
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: DetachEvent(String, EventHandler)
  nameWithType: HtmlObject.DetachEvent(String, EventHandler)
  fullName: System.Windows.Browser.HtmlObject.DetachEvent(System.String, System.EventHandler)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DetachEvent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 95
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nDetaches the specified.NET Framework event handler (<xref href=\"System.EventHandler\" data-throw-if-not-resolved=\"false\"></xref>) from\nthe specified event on the current Document Object Model (DOM) object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void DetachEvent(string eventName, EventHandler handler)
    parameters:
    - id: eventName
      type: System.String
      description: "\nA named event on the DOM object. \n"
    - id: handler
      type: System.EventHandler
      description: "\nThe method that handles the event.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub DetachEvent(eventName As String, handler As EventHandler)
  overload: System.Windows.Browser.HtmlObject.DetachEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\neventName is an empty string.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\neventName is null.-or-handler is null.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  commentId: M:System.Windows.Browser.HtmlObject.DetachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  id: DetachEvent(System.String,System.EventHandler{System.Windows.Browser.HtmlEventArgs})
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: DetachEvent(String, EventHandler<HtmlEventArgs>)
  nameWithType: HtmlObject.DetachEvent(String, EventHandler<HtmlEventArgs>)
  fullName: System.Windows.Browser.HtmlObject.DetachEvent(System.String, System.EventHandler<System.Windows.Browser.HtmlEventArgs>)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DetachEvent
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 116
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nDetaches the specified .NET Framework event handler (<xref href=\"System.EventHandler%601\" data-throw-if-not-resolved=\"false\"></xref>) from\nthe specified event on the current Document Object Model (DOM) object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void DetachEvent(string eventName, EventHandler<HtmlEventArgs> handler)
    parameters:
    - id: eventName
      type: System.String
      description: "\nA named event on the DOM object.\n"
    - id: handler
      type: System.EventHandler{System.Windows.Browser.HtmlEventArgs}
      description: "\nThe method that handles the event.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub DetachEvent(eventName As String, handler As EventHandler(Of HtmlEventArgs))
  overload: System.Windows.Browser.HtmlObject.DetachEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\neventName is an empty string.\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\neventName is null.-or-handler is null.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: HtmlObject.DetachEvent(String, EventHandler(Of HtmlEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Browser.HtmlObject.DetachEvent(System.String, System.EventHandler(Of System.Windows.Browser.HtmlEventArgs))
  name.vb: DetachEvent(String, EventHandler(Of HtmlEventArgs))
- uid: System.Windows.Browser.HtmlObject.ConvertTo(System.Type,System.Boolean)
  commentId: M:System.Windows.Browser.HtmlObject.ConvertTo(System.Type,System.Boolean)
  id: ConvertTo(System.Type,System.Boolean)
  parent: System.Windows.Browser.HtmlObject
  langs:
  - csharp
  - vb
  name: ConvertTo(Type, Boolean)
  nameWithType: HtmlObject.ConvertTo(Type, Boolean)
  fullName: System.Windows.Browser.HtmlObject.ConvertTo(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertTo
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/HtmlObject.cs
    startLine: 136
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nConverts the current object to a specified type. This method is not supported.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      protected override object ConvertTo(Type targetType, bool allowSerialization)
    parameters:
    - id: targetType
      type: System.Type
      description: "\nThe conversion type.\n"
    - id: allowSerialization
      type: System.Boolean
      description: "\ntrue to allow JavaScript Object Notation (JSON) serialization; otherwise, false.\n"
    return:
      type: System.Object
      description: "\nNone.\n"
    content.vb: >-
      <NotImplemented>

      Protected Overrides Function ConvertTo(targetType As Type, allowSerialization As Boolean) As Object
  overridden: System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  overload: System.Windows.Browser.HtmlObject.ConvertTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nIn all cases.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Windows.Browser
  commentId: N:System.Windows.Browser
  name: System.Windows.Browser
  nameWithType: System.Windows.Browser
  fullName: System.Windows.Browser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Browser.ScriptObject
  commentId: T:System.Windows.Browser.ScriptObject
  parent: System.Windows.Browser
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: System.Windows.Browser.ScriptObject
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Windows.Browser.ScriptObject.Dispatcher
  commentId: P:System.Windows.Browser.ScriptObject.Dispatcher
  parent: System.Windows.Browser.ScriptObject
  name: Dispatcher
  nameWithType: ScriptObject.Dispatcher
  fullName: System.Windows.Browser.ScriptObject.Dispatcher
- uid: System.Windows.Browser.ScriptObject.ManagedObject
  commentId: P:System.Windows.Browser.ScriptObject.ManagedObject
  parent: System.Windows.Browser.ScriptObject
  name: ManagedObject
  nameWithType: ScriptObject.ManagedObject
  fullName: System.Windows.Browser.ScriptObject.ManagedObject
- uid: System.Windows.Browser.ScriptObject.ConvertTo``1
  commentId: M:System.Windows.Browser.ScriptObject.ConvertTo``1
  parent: System.Windows.Browser.ScriptObject
  name: ConvertTo<T>()
  nameWithType: ScriptObject.ConvertTo<T>()
  fullName: System.Windows.Browser.ScriptObject.ConvertTo<T>()
  nameWithType.vb: ScriptObject.ConvertTo(Of T)()
  fullName.vb: System.Windows.Browser.ScriptObject.ConvertTo(Of T)()
  name.vb: ConvertTo(Of T)()
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.ConvertTo``1
    name: ConvertTo<T>
    nameWithType: ScriptObject.ConvertTo<T>
    fullName: System.Windows.Browser.ScriptObject.ConvertTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.ConvertTo``1
    name: ConvertTo(Of T)
    nameWithType: ScriptObject.ConvertTo(Of T)
    fullName: System.Windows.Browser.ScriptObject.ConvertTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  commentId: M:System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: GetProperty(Int32)
  nameWithType: ScriptObject.GetProperty(Int32)
  fullName: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
    name: GetProperty
    nameWithType: ScriptObject.GetProperty
    fullName: System.Windows.Browser.ScriptObject.GetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
    name: GetProperty
    nameWithType: ScriptObject.GetProperty
    fullName: System.Windows.Browser.ScriptObject.GetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.GetProperty(System.String)
  commentId: M:System.Windows.Browser.ScriptObject.GetProperty(System.String)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: GetProperty(String)
  nameWithType: ScriptObject.GetProperty(String)
  fullName: System.Windows.Browser.ScriptObject.GetProperty(System.String)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.GetProperty(System.String)
    name: GetProperty
    nameWithType: ScriptObject.GetProperty
    fullName: System.Windows.Browser.ScriptObject.GetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.GetProperty(System.String)
    name: GetProperty
    nameWithType: ScriptObject.GetProperty
    fullName: System.Windows.Browser.ScriptObject.GetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  commentId: M:System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: Invoke(String, Object[])
  nameWithType: ScriptObject.Invoke(String, Object[])
  fullName: System.Windows.Browser.ScriptObject.Invoke(System.String, System.Object[])
  nameWithType.vb: ScriptObject.Invoke(String, Object())
  fullName.vb: System.Windows.Browser.ScriptObject.Invoke(System.String, System.Object())
  name.vb: Invoke(String, Object())
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
    name: Invoke
    nameWithType: ScriptObject.Invoke
    fullName: System.Windows.Browser.ScriptObject.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
    name: Invoke
    nameWithType: ScriptObject.Invoke
    fullName: System.Windows.Browser.ScriptObject.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  commentId: M:System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: InvokeSelf(Object[])
  nameWithType: ScriptObject.InvokeSelf(Object[])
  fullName: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  nameWithType.vb: ScriptObject.InvokeSelf(Object())
  fullName.vb: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object())
  name.vb: InvokeSelf(Object())
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
    name: InvokeSelf
    nameWithType: ScriptObject.InvokeSelf
    fullName: System.Windows.Browser.ScriptObject.InvokeSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
    name: InvokeSelf
    nameWithType: ScriptObject.InvokeSelf
    fullName: System.Windows.Browser.ScriptObject.InvokeSelf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  commentId: M:System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: SetProperty(Int32, Object)
  nameWithType: ScriptObject.SetProperty(Int32, Object)
  fullName: System.Windows.Browser.ScriptObject.SetProperty(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
    name: SetProperty
    nameWithType: ScriptObject.SetProperty
    fullName: System.Windows.Browser.ScriptObject.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
    name: SetProperty
    nameWithType: ScriptObject.SetProperty
    fullName: System.Windows.Browser.ScriptObject.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  commentId: M:System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: SetProperty(String, Object)
  nameWithType: ScriptObject.SetProperty(String, Object)
  fullName: System.Windows.Browser.ScriptObject.SetProperty(System.String, System.Object)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: ScriptObject.SetProperty
    fullName: System.Windows.Browser.ScriptObject.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
    name: SetProperty
    nameWithType: ScriptObject.SetProperty
    fullName: System.Windows.Browser.ScriptObject.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: ScriptObject.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Windows.Browser.ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: ScriptObject.IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Windows.Browser.ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Windows.Browser.ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Browser.HtmlObject
  commentId: T:System.Windows.Browser.HtmlObject
  parent: System.Windows.Browser
  name: HtmlObject
  nameWithType: HtmlObject
  fullName: System.Windows.Browser.HtmlObject
- uid: System.Windows.Browser.HtmlObject.#ctor*
  commentId: Overload:System.Windows.Browser.HtmlObject.#ctor
  name: HtmlObject
  nameWithType: HtmlObject.HtmlObject
  fullName: System.Windows.Browser.HtmlObject.HtmlObject
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Browser.HtmlObject.AttachEvent*
  commentId: Overload:System.Windows.Browser.HtmlObject.AttachEvent
  name: AttachEvent
  nameWithType: HtmlObject.AttachEvent
  fullName: System.Windows.Browser.HtmlObject.AttachEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Windows.Browser.HtmlEventArgs}
  commentId: T:System.EventHandler{System.Windows.Browser.HtmlEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<HtmlEventArgs>
  nameWithType: EventHandler<HtmlEventArgs>
  fullName: System.EventHandler<System.Windows.Browser.HtmlEventArgs>
  nameWithType.vb: EventHandler(Of HtmlEventArgs)
  fullName.vb: System.EventHandler(Of System.Windows.Browser.HtmlEventArgs)
  name.vb: EventHandler(Of HtmlEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Browser.HtmlEventArgs
    name: HtmlEventArgs
    nameWithType: HtmlEventArgs
    fullName: System.Windows.Browser.HtmlEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Browser.HtmlEventArgs
    name: HtmlEventArgs
    nameWithType: HtmlEventArgs
    fullName: System.Windows.Browser.HtmlEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.HtmlObject.DetachEvent*
  commentId: Overload:System.Windows.Browser.HtmlObject.DetachEvent
  name: DetachEvent
  nameWithType: HtmlObject.DetachEvent
  fullName: System.Windows.Browser.HtmlObject.DetachEvent
- uid: System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  commentId: M:System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  parent: System.Windows.Browser.ScriptObject
  isExternal: true
  name: ConvertTo(Type, Boolean)
  nameWithType: ScriptObject.ConvertTo(Type, Boolean)
  fullName: System.Windows.Browser.ScriptObject.ConvertTo(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
    name: ConvertTo
    nameWithType: ScriptObject.ConvertTo
    fullName: System.Windows.Browser.ScriptObject.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
    name: ConvertTo
    nameWithType: ScriptObject.ConvertTo
    fullName: System.Windows.Browser.ScriptObject.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Browser.HtmlObject.ConvertTo*
  commentId: Overload:System.Windows.Browser.HtmlObject.ConvertTo
  name: ConvertTo
  nameWithType: HtmlObject.ConvertTo
  fullName: System.Windows.Browser.HtmlObject.ConvertTo
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
