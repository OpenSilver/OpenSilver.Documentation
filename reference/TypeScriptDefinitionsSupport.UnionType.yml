### YamlMime:ManagedReference
items:
- uid: TypeScriptDefinitionsSupport.UnionType
  commentId: T:TypeScriptDefinitionsSupport.UnionType
  id: UnionType
  parent: TypeScriptDefinitionsSupport
  children:
  - TypeScriptDefinitionsSupport.UnionType._Type
  - TypeScriptDefinitionsSupport.UnionType.CreateInstance``1
  - TypeScriptDefinitionsSupport.UnionType.instanceof(System.String)
  langs:
  - csharp
  - vb
  name: UnionType
  nameWithType: UnionType
  fullName: TypeScriptDefinitionsSupport.UnionType
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UnionType
    path: ../OpenSilverGit/src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: TypeScriptDefinitionsSupport
  syntax:
    content: 'public abstract class UnionType : JSObject, IJSObject'
    content.vb: >-
      Public MustInherit Class UnionType
          Inherits JSObject
          Implements IJSObject
  inheritance:
  - System.Object
  - TypeScriptDefinitionsSupport.JSObject
  derivedClasses:
  - TypeScriptDefinitionsSupport.UnionType`2
  - TypeScriptDefinitionsSupport.UnionType`3
  - TypeScriptDefinitionsSupport.UnionType`4
  - TypeScriptDefinitionsSupport.UnionType`5
  implements:
  - TypeScriptDefinitionsSupport.IJSObject
  inheritedMembers:
  - TypeScriptDefinitionsSupport.JSObject.Undefined
  - TypeScriptDefinitionsSupport.JSObject.Null
  - TypeScriptDefinitionsSupport.JSObject.UnderlyingJSInstance
  - TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance``1(System.Object)
  - TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
  - TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
  - TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType``1
  - TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo``1(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - TypeScriptDefinitionsSupport.IJSObject.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TypeScriptDefinitionsSupport.UnionType._Type
  commentId: P:TypeScriptDefinitionsSupport.UnionType._Type
  id: _Type
  parent: TypeScriptDefinitionsSupport.UnionType
  langs:
  - csharp
  - vb
  name: _Type
  nameWithType: UnionType._Type
  fullName: TypeScriptDefinitionsSupport.UnionType._Type
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: _Type
    path: ../OpenSilverGit/src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: TypeScriptDefinitionsSupport
  syntax:
    content: protected Type _Type { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected Property _Type As Type
  overload: TypeScriptDefinitionsSupport.UnionType._Type*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: TypeScriptDefinitionsSupport.UnionType.instanceof(System.String)
  commentId: M:TypeScriptDefinitionsSupport.UnionType.instanceof(System.String)
  id: instanceof(System.String)
  parent: TypeScriptDefinitionsSupport.UnionType
  langs:
  - csharp
  - vb
  name: instanceof(String)
  nameWithType: UnionType.instanceof(String)
  fullName: TypeScriptDefinitionsSupport.UnionType.instanceof(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: instanceof
    path: ../OpenSilverGit/src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
    startLine: 24
  assemblies:
  - OpenSilver
  namespace: TypeScriptDefinitionsSupport
  syntax:
    content: public bool instanceof(string type)
    parameters:
    - id: type
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function instanceof(type As String) As Boolean
  overload: TypeScriptDefinitionsSupport.UnionType.instanceof*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TypeScriptDefinitionsSupport.UnionType.CreateInstance``1
  commentId: M:TypeScriptDefinitionsSupport.UnionType.CreateInstance``1
  id: CreateInstance``1
  parent: TypeScriptDefinitionsSupport.UnionType
  langs:
  - csharp
  - vb
  name: CreateInstance<T>()
  nameWithType: UnionType.CreateInstance<T>()
  fullName: TypeScriptDefinitionsSupport.UnionType.CreateInstance<T>()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateInstance
    path: ../OpenSilverGit/src/Runtime/Runtime/TypeScriptDefinitionsSupportFiles/UnionType.cs
    startLine: 29
  assemblies:
  - OpenSilver
  namespace: TypeScriptDefinitionsSupport
  syntax:
    content: public T CreateInstance<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function CreateInstance(Of T) As T
  overload: TypeScriptDefinitionsSupport.UnionType.CreateInstance*
  nameWithType.vb: UnionType.CreateInstance(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TypeScriptDefinitionsSupport.UnionType.CreateInstance(Of T)()
  name.vb: CreateInstance(Of T)()
references:
- uid: TypeScriptDefinitionsSupport
  commentId: N:TypeScriptDefinitionsSupport
  name: TypeScriptDefinitionsSupport
  nameWithType: TypeScriptDefinitionsSupport
  fullName: TypeScriptDefinitionsSupport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TypeScriptDefinitionsSupport.JSObject
  commentId: T:TypeScriptDefinitionsSupport.JSObject
  parent: TypeScriptDefinitionsSupport
  name: JSObject
  nameWithType: JSObject
  fullName: TypeScriptDefinitionsSupport.JSObject
- uid: TypeScriptDefinitionsSupport.IJSObject
  commentId: T:TypeScriptDefinitionsSupport.IJSObject
  parent: TypeScriptDefinitionsSupport
  name: IJSObject
  nameWithType: IJSObject
  fullName: TypeScriptDefinitionsSupport.IJSObject
- uid: TypeScriptDefinitionsSupport.JSObject.Undefined
  commentId: F:TypeScriptDefinitionsSupport.JSObject.Undefined
  parent: TypeScriptDefinitionsSupport.JSObject
  name: Undefined
  nameWithType: JSObject.Undefined
  fullName: TypeScriptDefinitionsSupport.JSObject.Undefined
- uid: TypeScriptDefinitionsSupport.JSObject.Null
  commentId: F:TypeScriptDefinitionsSupport.JSObject.Null
  parent: TypeScriptDefinitionsSupport.JSObject
  name: "Null"
  nameWithType: JSObject.Null
  fullName: TypeScriptDefinitionsSupport.JSObject.Null
- uid: TypeScriptDefinitionsSupport.JSObject.UnderlyingJSInstance
  commentId: P:TypeScriptDefinitionsSupport.JSObject.UnderlyingJSInstance
  parent: TypeScriptDefinitionsSupport.JSObject
  name: UnderlyingJSInstance
  nameWithType: JSObject.UnderlyingJSInstance
  fullName: TypeScriptDefinitionsSupport.JSObject.UnderlyingJSInstance
- uid: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance``1(System.Object)
  commentId: M:TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance``1(System.Object)
  parent: TypeScriptDefinitionsSupport.JSObject
  isExternal: true
  name: FromJavaScriptInstance<T>(Object)
  nameWithType: JSObject.FromJavaScriptInstance<T>(Object)
  fullName: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance<T>(System.Object)
  nameWithType.vb: JSObject.FromJavaScriptInstance(Of T)(Object)
  fullName.vb: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance(Of T)(System.Object)
  name.vb: FromJavaScriptInstance(Of T)(Object)
  spec.csharp:
  - uid: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance``1(System.Object)
    name: FromJavaScriptInstance<T>
    nameWithType: JSObject.FromJavaScriptInstance<T>
    fullName: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance``1(System.Object)
    name: FromJavaScriptInstance(Of T)
    nameWithType: JSObject.FromJavaScriptInstance(Of T)
    fullName: TypeScriptDefinitionsSupport.JSObject.FromJavaScriptInstance(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
  commentId: M:TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
  parent: TypeScriptDefinitionsSupport.JSObject
  isExternal: true
  name: CreateFrom(Object)
  nameWithType: JSObject.CreateFrom(Object)
  fullName: TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
  spec.csharp:
  - uid: TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
    name: CreateFrom
    nameWithType: JSObject.CreateFrom
    fullName: TypeScriptDefinitionsSupport.JSObject.CreateFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefinitionsSupport.JSObject.CreateFrom(System.Object)
    name: CreateFrom
    nameWithType: JSObject.CreateFrom
    fullName: TypeScriptDefinitionsSupport.JSObject.CreateFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
  commentId: M:TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
  parent: TypeScriptDefinitionsSupport.JSObject
  isExternal: true
  name: Equals(Object)
  nameWithType: JSObject.Equals(Object)
  fullName: TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
  spec.csharp:
  - uid: TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
    name: Equals
    nameWithType: JSObject.Equals
    fullName: TypeScriptDefinitionsSupport.JSObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefinitionsSupport.JSObject.Equals(System.Object)
    name: Equals
    nameWithType: JSObject.Equals
    fullName: TypeScriptDefinitionsSupport.JSObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType``1
  commentId: M:TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType``1
  parent: TypeScriptDefinitionsSupport.JSObject
  name: Helper_IsBuiltInType<T>()
  nameWithType: JSObject.Helper_IsBuiltInType<T>()
  fullName: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType<T>()
  nameWithType.vb: JSObject.Helper_IsBuiltInType(Of T)()
  fullName.vb: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType(Of T)()
  name.vb: Helper_IsBuiltInType(Of T)()
  spec.csharp:
  - uid: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType``1
    name: Helper_IsBuiltInType<T>
    nameWithType: JSObject.Helper_IsBuiltInType<T>
    fullName: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType``1
    name: Helper_IsBuiltInType(Of T)
    nameWithType: JSObject.Helper_IsBuiltInType(Of T)
    fullName: TypeScriptDefinitionsSupport.JSObject.Helper_IsBuiltInType(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo``1(System.Object)
  commentId: M:TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo``1(System.Object)
  parent: TypeScriptDefinitionsSupport.JSObject
  isExternal: true
  name: Helper_ConvertTo<T>(Object)
  nameWithType: JSObject.Helper_ConvertTo<T>(Object)
  fullName: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo<T>(System.Object)
  nameWithType.vb: JSObject.Helper_ConvertTo(Of T)(Object)
  fullName.vb: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo(Of T)(System.Object)
  name.vb: Helper_ConvertTo(Of T)(Object)
  spec.csharp:
  - uid: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo``1(System.Object)
    name: Helper_ConvertTo<T>
    nameWithType: JSObject.Helper_ConvertTo<T>
    fullName: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo``1(System.Object)
    name: Helper_ConvertTo(Of T)
    nameWithType: JSObject.Helper_ConvertTo(Of T)
    fullName: TypeScriptDefinitionsSupport.JSObject.Helper_ConvertTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TypeScriptDefinitionsSupport.IJSObject.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
  name: ToJavaScriptObject(IJSObject)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(IJSObject)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefinitionsSupport.IJSObject
    name: IJSObject
    nameWithType: IJSObject
    fullName: TypeScriptDefinitionsSupport.IJSObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(TypeScriptDefinitionsSupport.IJSObject)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: TypeScriptDefinitionsSupport.IJSObject
    name: IJSObject
    nameWithType: IJSObject
    fullName: TypeScriptDefinitionsSupport.IJSObject
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: TypeScriptDefinitionsSupport.UnionType._Type*
  commentId: Overload:TypeScriptDefinitionsSupport.UnionType._Type
  name: _Type
  nameWithType: UnionType._Type
  fullName: TypeScriptDefinitionsSupport.UnionType._Type
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TypeScriptDefinitionsSupport.UnionType.instanceof*
  commentId: Overload:TypeScriptDefinitionsSupport.UnionType.instanceof
  name: instanceof
  nameWithType: UnionType.instanceof
  fullName: TypeScriptDefinitionsSupport.UnionType.instanceof
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TypeScriptDefinitionsSupport.UnionType.CreateInstance*
  commentId: Overload:TypeScriptDefinitionsSupport.UnionType.CreateInstance
  name: CreateInstance
  nameWithType: UnionType.CreateInstance
  fullName: TypeScriptDefinitionsSupport.UnionType.CreateInstance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
