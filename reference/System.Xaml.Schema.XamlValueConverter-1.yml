### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlValueConverter`1
  commentId: T:System.Xaml.Schema.XamlValueConverter`1
  id: XamlValueConverter`1
  parent: System.Xaml.Schema
  children:
  - System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)
  - System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)
  - System.Xaml.Schema.XamlValueConverter`1.ConverterInstance
  - System.Xaml.Schema.XamlValueConverter`1.ConverterType
  - System.Xaml.Schema.XamlValueConverter`1.CreateInstance
  - System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)
  - System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})
  - System.Xaml.Schema.XamlValueConverter`1.GetHashCode
  - System.Xaml.Schema.XamlValueConverter`1.Name
  - System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  - System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  - System.Xaml.Schema.XamlValueConverter`1.TargetType
  - System.Xaml.Schema.XamlValueConverter`1.ToString
  langs:
  - csharp
  - vb
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlValueConverter
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 31
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: 'public class XamlValueConverter<TConverterBase> : IEquatable<XamlValueConverter<TConverterBase>> where TConverterBase : class'
    typeParameters:
    - id: TConverterBase
    content.vb: >-
      Public Class XamlValueConverter(Of TConverterBase As Class)
          Implements IEquatable(Of XamlValueConverter(Of TConverterBase))
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: XamlValueConverter(Of TConverterBase)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase)
  name.vb: XamlValueConverter(Of TConverterBase)
- uid: System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)
  id: '#ctor(System.Type,System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: XamlValueConverter(Type, XamlType)
  nameWithType: XamlValueConverter<TConverterBase>.XamlValueConverter(Type, XamlType)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.XamlValueConverter(System.Type, System.Xaml.XamlType)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 34
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlValueConverter(Type converterType, XamlType targetType)
    parameters:
    - id: converterType
      type: System.Type
    - id: targetType
      type: System.Xaml.XamlType
    content.vb: Public Sub New(converterType As Type, targetType As XamlType)
  overload: System.Xaml.Schema.XamlValueConverter`1.#ctor*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).XamlValueConverter(Type, XamlType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).XamlValueConverter(System.Type, System.Xaml.XamlType)
- uid: System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)
  id: '#ctor(System.Type,System.Xaml.XamlType,System.String)'
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: XamlValueConverter(Type, XamlType, String)
  nameWithType: XamlValueConverter<TConverterBase>.XamlValueConverter(Type, XamlType, String)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.XamlValueConverter(System.Type, System.Xaml.XamlType, System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 39
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlValueConverter(Type converterType, XamlType targetType, string name)
    parameters:
    - id: converterType
      type: System.Type
    - id: targetType
      type: System.Xaml.XamlType
    - id: name
      type: System.String
    content.vb: Public Sub New(converterType As Type, targetType As XamlType, name As String)
  overload: System.Xaml.Schema.XamlValueConverter`1.#ctor*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).XamlValueConverter(Type, XamlType, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).XamlValueConverter(System.Type, System.Xaml.XamlType, System.String)
- uid: System.Xaml.Schema.XamlValueConverter`1.ConverterInstance
  commentId: P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance
  id: ConverterInstance
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: ConverterInstance
  nameWithType: XamlValueConverter<TConverterBase>.ConverterInstance
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ConverterInstance
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterInstance
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 49
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public TConverterBase ConverterInstance { get; }
    parameters: []
    return:
      type: '{TConverterBase}'
    content.vb: Public ReadOnly Property ConverterInstance As TConverterBase
  overload: System.Xaml.Schema.XamlValueConverter`1.ConverterInstance*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ConverterInstance
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ConverterInstance
- uid: System.Xaml.Schema.XamlValueConverter`1.ConverterType
  commentId: P:System.Xaml.Schema.XamlValueConverter`1.ConverterType
  id: ConverterType
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: ConverterType
  nameWithType: XamlValueConverter<TConverterBase>.ConverterType
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ConverterType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConverterType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 62
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public Type ConverterType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ConverterType As Type
  overload: System.Xaml.Schema.XamlValueConverter`1.ConverterType*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ConverterType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ConverterType
- uid: System.Xaml.Schema.XamlValueConverter`1.Name
  commentId: P:System.Xaml.Schema.XamlValueConverter`1.Name
  id: Name
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XamlValueConverter<TConverterBase>.Name
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Name
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 63
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: System.Xaml.Schema.XamlValueConverter`1.Name*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Name
- uid: System.Xaml.Schema.XamlValueConverter`1.TargetType
  commentId: P:System.Xaml.Schema.XamlValueConverter`1.TargetType
  id: TargetType
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: TargetType
  nameWithType: XamlValueConverter<TConverterBase>.TargetType
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.TargetType
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TargetType
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 64
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlType TargetType { get; }
    parameters: []
    return:
      type: System.Xaml.XamlType
    content.vb: Public ReadOnly Property TargetType As XamlType
  overload: System.Xaml.Schema.XamlValueConverter`1.TargetType*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).TargetType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).TargetType
- uid: System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  id: op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: Equality(XamlValueConverter<TConverterBase>, XamlValueConverter<TConverterBase>)
  nameWithType: XamlValueConverter<TConverterBase>.Equality(XamlValueConverter<TConverterBase>, XamlValueConverter<TConverterBase>)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Equality(System.Xaml.Schema.XamlValueConverter<TConverterBase>, System.Xaml.Schema.XamlValueConverter<TConverterBase>)
  type: Operator
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 67
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static bool operator ==(XamlValueConverter<TConverterBase> left, XamlValueConverter<TConverterBase> right)
    parameters:
    - id: left
      type: System.Xaml.Schema.XamlValueConverter`1
    - id: right
      type: System.Xaml.Schema.XamlValueConverter`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As XamlValueConverter(Of TConverterBase), right As XamlValueConverter(Of TConverterBase)) As Boolean
  overload: System.Xaml.Schema.XamlValueConverter`1.op_Equality*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Equality(XamlValueConverter(Of TConverterBase), XamlValueConverter(Of TConverterBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Equality(System.Xaml.Schema.XamlValueConverter(Of TConverterBase), System.Xaml.Schema.XamlValueConverter(Of TConverterBase))
  name.vb: Equality(XamlValueConverter(Of TConverterBase), XamlValueConverter(Of TConverterBase))
- uid: System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  id: op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: Inequality(XamlValueConverter<TConverterBase>, XamlValueConverter<TConverterBase>)
  nameWithType: XamlValueConverter<TConverterBase>.Inequality(XamlValueConverter<TConverterBase>, XamlValueConverter<TConverterBase>)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Inequality(System.Xaml.Schema.XamlValueConverter<TConverterBase>, System.Xaml.Schema.XamlValueConverter<TConverterBase>)
  type: Operator
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 72
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static bool operator !=(XamlValueConverter<TConverterBase> left, XamlValueConverter<TConverterBase> right)
    parameters:
    - id: left
      type: System.Xaml.Schema.XamlValueConverter`1
    - id: right
      type: System.Xaml.Schema.XamlValueConverter`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As XamlValueConverter(Of TConverterBase), right As XamlValueConverter(Of TConverterBase)) As Boolean
  overload: System.Xaml.Schema.XamlValueConverter`1.op_Inequality*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Inequality(XamlValueConverter(Of TConverterBase), XamlValueConverter(Of TConverterBase))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Inequality(System.Xaml.Schema.XamlValueConverter(Of TConverterBase), System.Xaml.Schema.XamlValueConverter(Of TConverterBase))
  name.vb: Inequality(XamlValueConverter(Of TConverterBase), XamlValueConverter(Of TConverterBase))
- uid: System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})
  id: Equals(System.Xaml.Schema.XamlValueConverter{`0})
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: Equals(XamlValueConverter<TConverterBase>)
  nameWithType: XamlValueConverter<TConverterBase>.Equals(XamlValueConverter<TConverterBase>)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Equals(System.Xaml.Schema.XamlValueConverter<TConverterBase>)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 77
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public bool Equals(XamlValueConverter<TConverterBase> other)
    parameters:
    - id: other
      type: System.Xaml.Schema.XamlValueConverter`1
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As XamlValueConverter(Of TConverterBase)) As Boolean
  overload: System.Xaml.Schema.XamlValueConverter`1.Equals*
  implements:
  - System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}.Equals(System.Xaml.Schema.XamlValueConverter{{TConverterBase}})
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Equals(XamlValueConverter(Of TConverterBase))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Equals(System.Xaml.Schema.XamlValueConverter(Of TConverterBase))
  name.vb: Equals(XamlValueConverter(Of TConverterBase))
- uid: System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: XamlValueConverter<TConverterBase>.Equals(Object)
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 82
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: System.Xaml.Schema.XamlValueConverter`1.Equals*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Equals(System.Object)
- uid: System.Xaml.Schema.XamlValueConverter`1.CreateInstance
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance
  id: CreateInstance
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: XamlValueConverter<TConverterBase>.CreateInstance()
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.CreateInstance()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateInstance
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 88
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: protected virtual TConverterBase CreateInstance()
    return:
      type: '{TConverterBase}'
    content.vb: Protected Overridable Function CreateInstance As TConverterBase
  overload: System.Xaml.Schema.XamlValueConverter`1.CreateInstance*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).CreateInstance()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).CreateInstance()
- uid: System.Xaml.Schema.XamlValueConverter`1.GetHashCode
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode
  id: GetHashCode
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: XamlValueConverter<TConverterBase>.GetHashCode()
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 104
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: System.Xaml.Schema.XamlValueConverter`1.GetHashCode*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).GetHashCode()
- uid: System.Xaml.Schema.XamlValueConverter`1.ToString
  commentId: M:System.Xaml.Schema.XamlValueConverter`1.ToString
  id: ToString
  parent: System.Xaml.Schema.XamlValueConverter`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XamlValueConverter<TConverterBase>.ToString()
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlValueConverter.cs
    startLine: 116
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Xaml.Schema.XamlValueConverter`1.ToString*
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ToString()
references:
- uid: System.Xaml.Schema
  commentId: N:System.Xaml.Schema
  name: System.Xaml.Schema
  nameWithType: System.Xaml.Schema
  fullName: System.Xaml.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}
  commentId: T:System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<XamlValueConverter<TConverterBase>>
  nameWithType: IEquatable<XamlValueConverter<TConverterBase>>
  fullName: System.IEquatable<System.Xaml.Schema.XamlValueConverter<TConverterBase>>
  nameWithType.vb: IEquatable(Of XamlValueConverter(Of TConverterBase))
  fullName.vb: System.IEquatable(Of System.Xaml.Schema.XamlValueConverter(Of TConverterBase))
  name.vb: IEquatable(Of XamlValueConverter(Of TConverterBase))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.Schema.XamlValueConverter`1.#ctor*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.#ctor
  name: XamlValueConverter
  nameWithType: XamlValueConverter<TConverterBase>.XamlValueConverter
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.XamlValueConverter
  nameWithType.vb: XamlValueConverter(Of TConverterBase).XamlValueConverter
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).XamlValueConverter
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  parent: System.Xaml
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.Schema.XamlValueConverter`1.ConverterInstance*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance
  name: ConverterInstance
  nameWithType: XamlValueConverter<TConverterBase>.ConverterInstance
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ConverterInstance
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ConverterInstance
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ConverterInstance
- uid: '{TConverterBase}'
  commentId: '!:TConverterBase'
  definition: TConverterBase
  name: TConverterBase
  nameWithType: TConverterBase
  fullName: TConverterBase
- uid: TConverterBase
  name: TConverterBase
  nameWithType: TConverterBase
  fullName: TConverterBase
- uid: System.Xaml.Schema.XamlValueConverter`1.ConverterType*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.ConverterType
  name: ConverterType
  nameWithType: XamlValueConverter<TConverterBase>.ConverterType
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ConverterType
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ConverterType
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ConverterType
- uid: System.Xaml.Schema.XamlValueConverter`1.Name*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.Name
  name: Name
  nameWithType: XamlValueConverter<TConverterBase>.Name
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Name
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Name
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Name
- uid: System.Xaml.Schema.XamlValueConverter`1.TargetType*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.TargetType
  name: TargetType
  nameWithType: XamlValueConverter<TConverterBase>.TargetType
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.TargetType
  nameWithType.vb: XamlValueConverter(Of TConverterBase).TargetType
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).TargetType
- uid: System.Xaml.Schema.XamlValueConverter`1.op_Equality*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.op_Equality
  name: Equality
  nameWithType: XamlValueConverter<TConverterBase>.Equality
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Equality
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Equality
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Equality
- uid: System.Xaml.Schema.XamlValueConverter`1
  commentId: T:System.Xaml.Schema.XamlValueConverter`1
  parent: System.Xaml.Schema
  name: XamlValueConverter<TConverterBase>
  nameWithType: XamlValueConverter<TConverterBase>
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>
  nameWithType.vb: XamlValueConverter(Of TConverterBase)
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase)
  name.vb: XamlValueConverter(Of TConverterBase)
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Schema.XamlValueConverter`1.op_Inequality*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.op_Inequality
  name: Inequality
  nameWithType: XamlValueConverter<TConverterBase>.Inequality
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Inequality
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Inequality
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Inequality
- uid: System.Xaml.Schema.XamlValueConverter`1.Equals*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.Equals
  name: Equals
  nameWithType: XamlValueConverter<TConverterBase>.Equals
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.Equals
  nameWithType.vb: XamlValueConverter(Of TConverterBase).Equals
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).Equals
- uid: System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}.Equals(System.Xaml.Schema.XamlValueConverter{{TConverterBase}})
  commentId: M:System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}.Equals(System.Xaml.Schema.XamlValueConverter{`0})
  parent: System.IEquatable{System.Xaml.Schema.XamlValueConverter`1}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(XamlValueConverter<TConverterBase>)
  nameWithType: IEquatable<XamlValueConverter<TConverterBase>>.Equals(XamlValueConverter<TConverterBase>)
  fullName: System.IEquatable<System.Xaml.Schema.XamlValueConverter<TConverterBase>>.Equals(System.Xaml.Schema.XamlValueConverter<TConverterBase>)
  nameWithType.vb: IEquatable(Of XamlValueConverter(Of TConverterBase)).Equals(XamlValueConverter(Of TConverterBase))
  fullName.vb: System.IEquatable(Of System.Xaml.Schema.XamlValueConverter(Of TConverterBase)).Equals(System.Xaml.Schema.XamlValueConverter(Of TConverterBase))
  name.vb: Equals(XamlValueConverter(Of TConverterBase))
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<XamlValueConverter<TConverterBase>>.Equals
    fullName: System.IEquatable<System.Xaml.Schema.XamlValueConverter<TConverterBase>>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of XamlValueConverter(Of TConverterBase)).Equals
    fullName: System.IEquatable(Of System.Xaml.Schema.XamlValueConverter(Of TConverterBase)).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: System.Xaml.Schema.XamlValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConverterBase
    nameWithType: TConverterBase
    fullName: TConverterBase
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlValueConverter`1.CreateInstance*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.CreateInstance
  name: CreateInstance
  nameWithType: XamlValueConverter<TConverterBase>.CreateInstance
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.CreateInstance
  nameWithType.vb: XamlValueConverter(Of TConverterBase).CreateInstance
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).CreateInstance
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlValueConverter`1.GetHashCode*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.GetHashCode
  name: GetHashCode
  nameWithType: XamlValueConverter<TConverterBase>.GetHashCode
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.GetHashCode
  nameWithType.vb: XamlValueConverter(Of TConverterBase).GetHashCode
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlValueConverter`1.ToString*
  commentId: Overload:System.Xaml.Schema.XamlValueConverter`1.ToString
  name: ToString
  nameWithType: XamlValueConverter<TConverterBase>.ToString
  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>.ToString
  nameWithType.vb: XamlValueConverter(Of TConverterBase).ToString
  fullName.vb: System.Xaml.Schema.XamlValueConverter(Of TConverterBase).ToString
