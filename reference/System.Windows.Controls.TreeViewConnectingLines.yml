### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.TreeViewConnectingLines
  commentId: T:System.Windows.Controls.TreeViewConnectingLines
  id: TreeViewConnectingLines
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)
  - System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)
  - System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)
  - System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)
  - System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty
  - System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty
  - System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty
  - System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty
  - System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)
  - System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)
  - System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  - System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  langs:
  - csharp
  - vb
  name: TreeViewConnectingLines
  nameWithType: TreeViewConnectingLines
  fullName: System.Windows.Controls.TreeViewConnectingLines
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TreeViewConnectingLines
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 17
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nProvides the necessary infrastructure to enable drawing connecting\nlines between the TreeViewItems in a TreeView.\n"
  example: []
  syntax:
    content: public static class TreeViewConnectingLines
    content.vb: Public Module TreeViewConnectingLines
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)
  id: GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: GetIsVerticalConnectingLineOf(Line)
  nameWithType: TreeViewConnectingLines.GetIsVerticalConnectingLineOf(Line)
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf(System.Windows.Shapes.Line)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetIsVerticalConnectingLineOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 66
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the value of the IsVerticalConnectingLineOf attached property\nfor a specified Line.\n"
  example: []
  syntax:
    content: public static TreeViewItem GetIsVerticalConnectingLineOf(Line element)
    parameters:
    - id: element
      type: System.Windows.Shapes.Line
      description: The Line from which the property value is read.
    return:
      type: System.Windows.Controls.TreeViewItem
      description: The IsVerticalConnectingLineOf property value for the Line.
    content.vb: Public Shared Function GetIsVerticalConnectingLineOf(element As Line) As TreeViewItem
  overload: System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  id: SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: SetIsVerticalConnectingLineOf(Line, TreeViewItem)
  nameWithType: TreeViewConnectingLines.SetIsVerticalConnectingLineOf(Line, TreeViewItem)
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf(System.Windows.Shapes.Line, System.Windows.Controls.TreeViewItem)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetIsVerticalConnectingLineOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 81
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nSets the value of the IsVerticalConnectingLineOf attached property to a specified Line.\n"
  example: []
  syntax:
    content: public static void SetIsVerticalConnectingLineOf(Line element, TreeViewItem value)
    parameters:
    - id: element
      type: System.Windows.Shapes.Line
      description: The Line to which the attached property is written.
    - id: value
      type: System.Windows.Controls.TreeViewItem
      description: The needed IsVerticalConnectingLineOf value.
    content.vb: Public Shared Sub SetIsVerticalConnectingLineOf(element As Line, value As TreeViewItem)
  overload: System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty
  commentId: F:System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty
  id: IsVerticalConnectingLineOfProperty
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: IsVerticalConnectingLineOfProperty
  nameWithType: TreeViewConnectingLines.IsVerticalConnectingLineOfProperty
  fullName: System.Windows.Controls.TreeViewConnectingLines.IsVerticalConnectingLineOfProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsVerticalConnectingLineOfProperty
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 94
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nIdentifies the IsVerticalConnectingLineOf dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsVerticalConnectingLineOfProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsVerticalConnectingLineOfProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)
  id: GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: GetIsHorizontalConnectingLineOf(Line)
  nameWithType: TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(Line)
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetIsHorizontalConnectingLineOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 141
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the value of the IsHorizontalConnectingLineOf attached property\nfor a specified Line.\n"
  example: []
  syntax:
    content: public static TreeViewItem GetIsHorizontalConnectingLineOf(Line element)
    parameters:
    - id: element
      type: System.Windows.Shapes.Line
      description: "\nThe Line from which the property value is read.\n"
    return:
      type: System.Windows.Controls.TreeViewItem
      description: "\nThe IsHorizontalConnectingLineOf property value for the Line.\n"
    content.vb: Public Shared Function GetIsHorizontalConnectingLineOf(element As Line) As TreeViewItem
  overload: System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  id: SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line,System.Windows.Controls.TreeViewItem)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: SetIsHorizontalConnectingLineOf(Line, TreeViewItem)
  nameWithType: TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(Line, TreeViewItem)
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf(System.Windows.Shapes.Line, System.Windows.Controls.TreeViewItem)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetIsHorizontalConnectingLineOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 161
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nSets the value of the IsHorizontalConnectingLineOf attached property\nto a specified Line.\n"
  example: []
  syntax:
    content: public static void SetIsHorizontalConnectingLineOf(Line element, TreeViewItem value)
    parameters:
    - id: element
      type: System.Windows.Shapes.Line
      description: "\nThe Line to which the attached property is written.\n"
    - id: value
      type: System.Windows.Controls.TreeViewItem
      description: "\nThe needed IsHorizontalConnectingLineOf value.\n"
    content.vb: Public Shared Sub SetIsHorizontalConnectingLineOf(element As Line, value As TreeViewItem)
  overload: System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty
  commentId: F:System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty
  id: IsHorizontalConnectingLineOfProperty
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: IsHorizontalConnectingLineOfProperty
  nameWithType: TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty
  fullName: System.Windows.Controls.TreeViewConnectingLines.IsHorizontalConnectingLineOfProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsHorizontalConnectingLineOfProperty
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 174
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nIdentifies the IsHorizontalConnectingLineOf dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsHorizontalConnectingLineOfProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsHorizontalConnectingLineOfProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)
  id: GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: GetIsExpanderButtonOf(ToggleButton)
  nameWithType: TreeViewConnectingLines.GetIsExpanderButtonOf(ToggleButton)
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetIsExpanderButtonOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 221
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the value of the IsExpanderButtonOf attached property for a\nspecified ToggleButton.\n"
  example: []
  syntax:
    content: public static TreeViewItem GetIsExpanderButtonOf(ToggleButton element)
    parameters:
    - id: element
      type: System.Windows.Controls.Primitives.ToggleButton
      description: "\nThe ToggleButton from which the property value is read.\n"
    return:
      type: System.Windows.Controls.TreeViewItem
      description: "\nThe IsExpanderButtonOf property value for the ToggleButton.\n"
    content.vb: Public Shared Function GetIsExpanderButtonOf(element As ToggleButton) As TreeViewItem
  overload: System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)
  id: SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton,System.Windows.Controls.TreeViewItem)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: SetIsExpanderButtonOf(ToggleButton, TreeViewItem)
  nameWithType: TreeViewConnectingLines.SetIsExpanderButtonOf(ToggleButton, TreeViewItem)
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf(System.Windows.Controls.Primitives.ToggleButton, System.Windows.Controls.TreeViewItem)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetIsExpanderButtonOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 239
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nSets the value of the IsExpanderButtonOf attached property to a\nspecified ToggleButton.\n"
  example: []
  syntax:
    content: public static void SetIsExpanderButtonOf(ToggleButton element, TreeViewItem value)
    parameters:
    - id: element
      type: System.Windows.Controls.Primitives.ToggleButton
      description: "\nThe ToggleButton to which the attached property is written.\n"
    - id: value
      type: System.Windows.Controls.TreeViewItem
      description: The needed IsExpanderButtonOf value.
    content.vb: Public Shared Sub SetIsExpanderButtonOf(element As ToggleButton, value As TreeViewItem)
  overload: System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty
  commentId: F:System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty
  id: IsExpanderButtonOfProperty
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: IsExpanderButtonOfProperty
  nameWithType: TreeViewConnectingLines.IsExpanderButtonOfProperty
  fullName: System.Windows.Controls.TreeViewConnectingLines.IsExpanderButtonOfProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsExpanderButtonOfProperty
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 252
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nIdentifies the IsExpanderButtonOf dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsExpanderButtonOfProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsExpanderButtonOfProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)
  id: GetIsHeaderOf(System.Windows.FrameworkElement)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: GetIsHeaderOf(FrameworkElement)
  nameWithType: TreeViewConnectingLines.GetIsHeaderOf(FrameworkElement)
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf(System.Windows.FrameworkElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetIsHeaderOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 299
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the value of the IsHeaderOf attached property for a specified\nFrameworkElement.\n"
  example: []
  syntax:
    content: public static TreeViewItem GetIsHeaderOf(FrameworkElement element)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: "\nThe FrameworkElement from which the property value is read.\n"
    return:
      type: System.Windows.Controls.TreeViewItem
      description: "\nThe IsHeaderOf property value for the FrameworkElement.\n"
    content.vb: Public Shared Function GetIsHeaderOf(element As FrameworkElement) As TreeViewItem
  overload: System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)
  commentId: M:System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)
  id: SetIsHeaderOf(System.Windows.FrameworkElement,System.Windows.Controls.TreeViewItem)
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: SetIsHeaderOf(FrameworkElement, TreeViewItem)
  nameWithType: TreeViewConnectingLines.SetIsHeaderOf(FrameworkElement, TreeViewItem)
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf(System.Windows.FrameworkElement, System.Windows.Controls.TreeViewItem)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetIsHeaderOf
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 317
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nSets the value of the IsHeaderOf attached property to a specified\nFrameworkElement.\n"
  example: []
  syntax:
    content: public static void SetIsHeaderOf(FrameworkElement element, TreeViewItem value)
    parameters:
    - id: element
      type: System.Windows.FrameworkElement
      description: "\nThe FrameworkElement to which the attached property is written.\n"
    - id: value
      type: System.Windows.Controls.TreeViewItem
      description: The needed IsHeaderOf value.
    content.vb: Public Shared Sub SetIsHeaderOf(element As FrameworkElement, value As TreeViewItem)
  overload: System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty
  commentId: F:System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty
  id: IsHeaderOfProperty
  parent: System.Windows.Controls.TreeViewConnectingLines
  langs:
  - csharp
  - vb
  name: IsHeaderOfProperty
  nameWithType: TreeViewConnectingLines.IsHeaderOfProperty
  fullName: System.Windows.Controls.TreeViewConnectingLines.IsHeaderOfProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsHeaderOfProperty
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/TreeView/TreeViewConnectingLines.cs
    startLine: 330
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nIdentifies the IsHeaderOf dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty IsHeaderOfProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly IsHeaderOfProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf
  name: GetIsVerticalConnectingLineOf
  nameWithType: TreeViewConnectingLines.GetIsVerticalConnectingLineOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsVerticalConnectingLineOf
- uid: System.Windows.Shapes.Line
  commentId: T:System.Windows.Shapes.Line
  parent: System.Windows.Shapes
  name: Line
  nameWithType: Line
  fullName: System.Windows.Shapes.Line
- uid: System.Windows.Controls.TreeViewItem
  commentId: T:System.Windows.Controls.TreeViewItem
  parent: System.Windows.Controls
  name: TreeViewItem
  nameWithType: TreeViewItem
  fullName: System.Windows.Controls.TreeViewItem
- uid: System.Windows.Shapes
  commentId: N:System.Windows.Shapes
  name: System.Windows.Shapes
  nameWithType: System.Windows.Shapes
  fullName: System.Windows.Shapes
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf
  name: SetIsVerticalConnectingLineOf
  nameWithType: TreeViewConnectingLines.SetIsVerticalConnectingLineOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsVerticalConnectingLineOf
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf
  name: GetIsHorizontalConnectingLineOf
  nameWithType: TreeViewConnectingLines.GetIsHorizontalConnectingLineOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsHorizontalConnectingLineOf
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf
  name: SetIsHorizontalConnectingLineOf
  nameWithType: TreeViewConnectingLines.SetIsHorizontalConnectingLineOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsHorizontalConnectingLineOf
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf
  name: GetIsExpanderButtonOf
  nameWithType: TreeViewConnectingLines.GetIsExpanderButtonOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsExpanderButtonOf
- uid: System.Windows.Controls.Primitives.ToggleButton
  commentId: T:System.Windows.Controls.Primitives.ToggleButton
  parent: System.Windows.Controls.Primitives
  name: ToggleButton
  nameWithType: ToggleButton
  fullName: System.Windows.Controls.Primitives.ToggleButton
- uid: System.Windows.Controls.Primitives
  commentId: N:System.Windows.Controls.Primitives
  name: System.Windows.Controls.Primitives
  nameWithType: System.Windows.Controls.Primitives
  fullName: System.Windows.Controls.Primitives
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf
  name: SetIsExpanderButtonOf
  nameWithType: TreeViewConnectingLines.SetIsExpanderButtonOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsExpanderButtonOf
- uid: System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf
  name: GetIsHeaderOf
  nameWithType: TreeViewConnectingLines.GetIsHeaderOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.GetIsHeaderOf
- uid: System.Windows.FrameworkElement
  commentId: T:System.Windows.FrameworkElement
  parent: System.Windows
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf*
  commentId: Overload:System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf
  name: SetIsHeaderOf
  nameWithType: TreeViewConnectingLines.SetIsHeaderOf
  fullName: System.Windows.Controls.TreeViewConnectingLines.SetIsHeaderOf
