### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IRangeValueProvider
  commentId: T:System.Windows.Automation.Provider.IRangeValueProvider
  id: IRangeValueProvider
  parent: System.Windows.Automation.Provider
  children:
  - System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  - System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  - System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  - System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  - System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  - System.Windows.Automation.Provider.IRangeValueProvider.Value
  langs:
  - csharp
  - vb
  name: IRangeValueProvider
  nameWithType: IRangeValueProvider
  fullName: System.Windows.Automation.Provider.IRangeValueProvider
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IRangeValueProvider
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nExposes methods and properties to support access by a UI automation client to \ncontrols that can be set to a value within a range.\n"
  example: []
  syntax:
    content: public interface IRangeValueProvider
    content.vb: Public Interface IRangeValueProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: IRangeValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsReadOnly
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 27
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets a value that indicates whether the value of a control is read-only.\n"
  example: []
  syntax:
    content: bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the value is read-only; false if it can be modified.\n"
    content.vb: ReadOnly Property IsReadOnly As Boolean
  overload: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  id: LargeChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LargeChange
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the value that is added to or subtracted from the <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.Value\" data-throw-if-not-resolved=\"false\"></xref> \nproperty when a large change is made, such as with the PAGE DOWN key.\n"
  example: []
  syntax:
    content: double LargeChange { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe large-change value that is supported by the control, or null if the control \ndoes not support <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.LargeChange\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: ReadOnly Property LargeChange As Double
  overload: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  id: Maximum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Maximum
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 46
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the maximum range value that is supported by the control.\n"
  example: []
  syntax:
    content: double Maximum { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe maximum value that is supported by the control, or null if the control does \nnot support <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.Maximum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: ReadOnly Property Maximum As Double
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  id: Minimum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Minimum
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 55
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the minimum range value that is supported by the control.\n"
  example: []
  syntax:
    content: double Minimum { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe minimum value that is supported by the control, or null if the control does \nnot support <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.Minimum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: ReadOnly Property Minimum As Double
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  commentId: M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  id: SetValue(System.Double)
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: SetValue(Double)
  nameWithType: IRangeValueProvider.SetValue(Double)
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetValue
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 63
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nSets the value of the control.\n"
  example: []
  syntax:
    content: void SetValue(double value)
    parameters:
    - id: value
      type: System.Double
      description: "\nThe value to set.\n"
    content.vb: Sub SetValue(value As Double)
  overload: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  id: SmallChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SmallChange
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the value that is added to or subtracted from the <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.Value\" data-throw-if-not-resolved=\"false\"></xref> \nproperty when a small change is made, such as with an arrow key.\n"
  example: []
  syntax:
    content: double SmallChange { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe small-change value supported by the control, or null if the control does \nnot support <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.SmallChange\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: ReadOnly Property SmallChange As Double
  overload: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: IRangeValueProvider.Value
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Value
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation.Provider/IRangeValueProvider.cs
    startLine: 81
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation.Provider
  summary: "\nGets the value of the control.\n"
  example: []
  syntax:
    content: double Value { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe value of the control, or null if the control does not support <xref href=\"System.Windows.Automation.Provider.IRangeValueProvider.Value\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: ReadOnly Property Value As Double
  overload: System.Windows.Automation.Provider.IRangeValueProvider.Value*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Windows.Automation.Provider
  commentId: N:System.Windows.Automation.Provider
  name: System.Windows.Automation.Provider
  nameWithType: System.Windows.Automation.Provider
  fullName: System.Windows.Automation.Provider
- uid: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
  name: IsReadOnly
  nameWithType: IRangeValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Value
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  name: Value
  nameWithType: IRangeValueProvider.Value
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
  name: LargeChange
  nameWithType: IRangeValueProvider.LargeChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.LargeChange
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Automation.Provider.IRangeValueProvider
  commentId: T:System.Windows.Automation.Provider.IRangeValueProvider
  parent: System.Windows.Automation.Provider
  name: IRangeValueProvider
  nameWithType: IRangeValueProvider
  fullName: System.Windows.Automation.Provider.IRangeValueProvider
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Maximum*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.Maximum
  name: Maximum
  nameWithType: IRangeValueProvider.Maximum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Maximum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Minimum*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.Minimum
  name: Minimum
  nameWithType: IRangeValueProvider.Minimum
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Minimum
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SetValue*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.SetValue
  name: SetValue
  nameWithType: IRangeValueProvider.SetValue
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  commentId: P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  parent: System.Windows.Automation.Provider.IRangeValueProvider
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
  name: SmallChange
  nameWithType: IRangeValueProvider.SmallChange
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.SmallChange
- uid: System.Windows.Automation.Provider.IRangeValueProvider.Value*
  commentId: Overload:System.Windows.Automation.Provider.IRangeValueProvider.Value
  name: Value
  nameWithType: IRangeValueProvider.Value
  fullName: System.Windows.Automation.Provider.IRangeValueProvider.Value
