### YamlMime:ManagedReference
items:
- uid: System.Windows.WindowSettings
  commentId: T:System.Windows.WindowSettings
  id: WindowSettings
  parent: System.Windows
  children:
  - System.Windows.WindowSettings.#ctor
  - System.Windows.WindowSettings.Height
  - System.Windows.WindowSettings.HeightProperty
  - System.Windows.WindowSettings.Left
  - System.Windows.WindowSettings.LeftProperty
  - System.Windows.WindowSettings.Title
  - System.Windows.WindowSettings.TitleProperty
  - System.Windows.WindowSettings.Top
  - System.Windows.WindowSettings.TopProperty
  - System.Windows.WindowSettings.Width
  - System.Windows.WindowSettings.WidthProperty
  - System.Windows.WindowSettings.WindowStartupLocation
  - System.Windows.WindowSettings.WindowStartupLocationProperty
  - System.Windows.WindowSettings.WindowStyle
  - System.Windows.WindowSettings.WindowStyleProperty
  langs:
  - csharp
  - vb
  name: WindowSettings
  nameWithType: WindowSettings
  fullName: System.Windows.WindowSettings
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowSettings
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nRepresents information about an out-of-browser application window.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public sealed class WindowSettings : DependencyObject, IDependencyObject
    content.vb: >-
      <NotImplemented>

      Public NotInheritable Class WindowSettings
          Inherits DependencyObject
          Implements IDependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  inheritedMembers:
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.WindowSettings.#ctor
  commentId: M:System.Windows.WindowSettings.#ctor
  id: '#ctor'
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WindowSettings()
  nameWithType: WindowSettings.WindowSettings()
  fullName: System.Windows.WindowSettings.WindowSettings()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 24
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.WindowSettings\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public WindowSettings()
    content.vb: Public Sub New
  overload: System.Windows.WindowSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.WindowSettings.HeightProperty
  commentId: F:System.Windows.WindowSettings.HeightProperty
  id: HeightProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: HeightProperty
  nameWithType: WindowSettings.HeightProperty
  fullName: System.Windows.WindowSettings.HeightProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HeightProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 36
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.Height\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty HeightProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly HeightProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.Height
  commentId: P:System.Windows.WindowSettings.Height
  id: Height
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: WindowSettings.Height
  fullName: System.Windows.WindowSettings.Height
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Height
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 44
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the initial window height of the application.\n"
  example: []
  syntax:
    content: public double Height { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe initial window height of the application.\n"
    content.vb: Public ReadOnly Property Height As Double
  overload: System.Windows.WindowSettings.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.LeftProperty
  commentId: F:System.Windows.WindowSettings.LeftProperty
  id: LeftProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: LeftProperty
  nameWithType: WindowSettings.LeftProperty
  fullName: System.Windows.WindowSettings.LeftProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LeftProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.Left\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty LeftProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly LeftProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.Left
  commentId: P:System.Windows.WindowSettings.Left
  id: Left
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: WindowSettings.Left
  fullName: System.Windows.WindowSettings.Left
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Left
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 65
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the initial position of the left edge of the out-of-browser application\nwindow when <xref href=\"System.Windows.WindowSettings.WindowStartupLocation\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Windows.WindowStartupLocation.Manual\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Left { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe initial position of the left edge of the application window.\n"
    content.vb: Public ReadOnly Property Left As Double
  overload: System.Windows.WindowSettings.Left*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.TitleProperty
  commentId: F:System.Windows.WindowSettings.TitleProperty
  id: TitleProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: TitleProperty
  nameWithType: WindowSettings.TitleProperty
  fullName: System.Windows.WindowSettings.TitleProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TitleProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 77
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.Title\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty TitleProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly TitleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.Title
  commentId: P:System.Windows.WindowSettings.Title
  id: Title
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: WindowSettings.Title
  fullName: System.Windows.WindowSettings.Title
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Title
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 86
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the full title of the out-of-browser application for display in the title\nbar of the application window.\n"
  example: []
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe full title of the application.\n"
    content.vb: Public ReadOnly Property Title As String
  overload: System.Windows.WindowSettings.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.TopProperty
  commentId: F:System.Windows.WindowSettings.TopProperty
  id: TopProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: TopProperty
  nameWithType: WindowSettings.TopProperty
  fullName: System.Windows.WindowSettings.TopProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TopProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.Top\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty TopProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly TopProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.Top
  commentId: P:System.Windows.WindowSettings.Top
  id: Top
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: WindowSettings.Top
  fullName: System.Windows.WindowSettings.Top
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Top
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 107
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the initial position of the top edge of the out-of-browser application window\nwhen <xref href=\"System.Windows.WindowSettings.WindowStartupLocation\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Windows.WindowStartupLocation.Manual\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Top { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe initial position of the top edge of the application window.\n"
    content.vb: Public ReadOnly Property Top As Double
  overload: System.Windows.WindowSettings.Top*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.WidthProperty
  commentId: F:System.Windows.WindowSettings.WidthProperty
  id: WidthProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WidthProperty
  nameWithType: WindowSettings.WidthProperty
  fullName: System.Windows.WindowSettings.WidthProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WidthProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 119
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.Width\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty WidthProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly WidthProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.Width
  commentId: P:System.Windows.WindowSettings.Width
  id: Width
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: WindowSettings.Width
  fullName: System.Windows.WindowSettings.Width
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Width
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 127
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets the initial window width of the application.\n"
  example: []
  syntax:
    content: public double Width { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe initial window width of the application.\n"
    content.vb: Public ReadOnly Property Width As Double
  overload: System.Windows.WindowSettings.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.WindowStartupLocationProperty
  commentId: F:System.Windows.WindowSettings.WindowStartupLocationProperty
  id: WindowStartupLocationProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WindowStartupLocationProperty
  nameWithType: WindowSettings.WindowStartupLocationProperty
  fullName: System.Windows.WindowSettings.WindowStartupLocationProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowStartupLocationProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 139
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.WindowStartupLocation\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty WindowStartupLocationProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly WindowStartupLocationProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.WindowStartupLocation
  commentId: P:System.Windows.WindowSettings.WindowStartupLocation
  id: WindowStartupLocation
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WindowStartupLocation
  nameWithType: WindowSettings.WindowStartupLocation
  fullName: System.Windows.WindowSettings.WindowStartupLocation
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowStartupLocation
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 147
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates how the out-of-browser application window is positioned at startup.\n"
  example: []
  syntax:
    content: public WindowStartupLocation WindowStartupLocation { get; }
    parameters: []
    return:
      type: System.Windows.WindowStartupLocation
      description: "\nA value that indicates how the application window is positioned at startup.\n"
    content.vb: Public ReadOnly Property WindowStartupLocation As WindowStartupLocation
  overload: System.Windows.WindowSettings.WindowStartupLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.WindowSettings.WindowStyleProperty
  commentId: F:System.Windows.WindowSettings.WindowStyleProperty
  id: WindowStyleProperty
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WindowStyleProperty
  nameWithType: WindowSettings.WindowStyleProperty
  fullName: System.Windows.WindowSettings.WindowStyleProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowStyleProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 159
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nIdentifies the <xref href=\"System.Windows.WindowSettings.WindowStyle\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty WindowStyleProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly WindowStyleProperty As DependencyProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.WindowSettings.WindowStyle
  commentId: P:System.Windows.WindowSettings.WindowStyle
  id: WindowStyle
  parent: System.Windows.WindowSettings
  langs:
  - csharp
  - vb
  name: WindowStyle
  nameWithType: WindowSettings.WindowStyle
  fullName: System.Windows.WindowSettings.WindowStyle
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows/WindowSettings.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WindowStyle
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows/WindowSettings.cs
    startLine: 168
  assemblies:
  - OpenSilver
  namespace: System.Windows
  summary: "\nGets a value that indicates the appearance of the title bar and border for the\nout-of-browser application window.\n"
  example: []
  syntax:
    content: public WindowStyle WindowStyle { get; }
    parameters: []
    return:
      type: System.Windows.WindowStyle
      description: "\nA value that indicates how the title bar and border should appear.\n"
    content.vb: Public ReadOnly Property WindowStyle As WindowStyle
  overload: System.Windows.WindowSettings.WindowStyle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  commentId: M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.WindowSettings
  commentId: T:System.Windows.WindowSettings
  parent: System.Windows
  name: WindowSettings
  nameWithType: WindowSettings
  fullName: System.Windows.WindowSettings
- uid: System.Windows.WindowSettings.#ctor*
  commentId: Overload:System.Windows.WindowSettings.#ctor
  name: WindowSettings
  nameWithType: WindowSettings.WindowSettings
  fullName: System.Windows.WindowSettings.WindowSettings
- uid: System.Windows.WindowSettings.Height
  commentId: P:System.Windows.WindowSettings.Height
  isExternal: true
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.WindowSettings.Height*
  commentId: Overload:System.Windows.WindowSettings.Height
  name: Height
  nameWithType: WindowSettings.Height
  fullName: System.Windows.WindowSettings.Height
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.WindowSettings.Left
  commentId: P:System.Windows.WindowSettings.Left
  isExternal: true
- uid: System.Windows.WindowSettings.WindowStartupLocation
  commentId: P:System.Windows.WindowSettings.WindowStartupLocation
  isExternal: true
- uid: System.Windows.WindowStartupLocation.Manual
  commentId: F:System.Windows.WindowStartupLocation.Manual
  isExternal: true
- uid: System.Windows.WindowSettings.Left*
  commentId: Overload:System.Windows.WindowSettings.Left
  name: Left
  nameWithType: WindowSettings.Left
  fullName: System.Windows.WindowSettings.Left
- uid: System.Windows.WindowSettings.Title
  commentId: P:System.Windows.WindowSettings.Title
  isExternal: true
- uid: System.Windows.WindowSettings.Title*
  commentId: Overload:System.Windows.WindowSettings.Title
  name: Title
  nameWithType: WindowSettings.Title
  fullName: System.Windows.WindowSettings.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.WindowSettings.Top
  commentId: P:System.Windows.WindowSettings.Top
  isExternal: true
- uid: System.Windows.WindowSettings.Top*
  commentId: Overload:System.Windows.WindowSettings.Top
  name: Top
  nameWithType: WindowSettings.Top
  fullName: System.Windows.WindowSettings.Top
- uid: System.Windows.WindowSettings.Width
  commentId: P:System.Windows.WindowSettings.Width
  isExternal: true
- uid: System.Windows.WindowSettings.Width*
  commentId: Overload:System.Windows.WindowSettings.Width
  name: Width
  nameWithType: WindowSettings.Width
  fullName: System.Windows.WindowSettings.Width
- uid: System.Windows.WindowSettings.WindowStartupLocation*
  commentId: Overload:System.Windows.WindowSettings.WindowStartupLocation
  name: WindowStartupLocation
  nameWithType: WindowSettings.WindowStartupLocation
  fullName: System.Windows.WindowSettings.WindowStartupLocation
- uid: System.Windows.WindowStartupLocation
  commentId: T:System.Windows.WindowStartupLocation
  parent: System.Windows
  name: WindowStartupLocation
  nameWithType: WindowStartupLocation
  fullName: System.Windows.WindowStartupLocation
- uid: System.Windows.WindowSettings.WindowStyle
  commentId: P:System.Windows.WindowSettings.WindowStyle
  isExternal: true
- uid: System.Windows.WindowSettings.WindowStyle*
  commentId: Overload:System.Windows.WindowSettings.WindowStyle
  name: WindowStyle
  nameWithType: WindowSettings.WindowStyle
  fullName: System.Windows.WindowSettings.WindowStyle
- uid: System.Windows.WindowStyle
  commentId: T:System.Windows.WindowStyle
  parent: System.Windows
  name: WindowStyle
  nameWithType: WindowStyle
  fullName: System.Windows.WindowStyle
