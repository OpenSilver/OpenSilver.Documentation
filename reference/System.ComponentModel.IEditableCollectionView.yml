### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IEditableCollectionView
  commentId: T:System.ComponentModel.IEditableCollectionView
  id: IEditableCollectionView
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IEditableCollectionView.AddNew
  - System.ComponentModel.IEditableCollectionView.CanAddNew
  - System.ComponentModel.IEditableCollectionView.CanCancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelNew
  - System.ComponentModel.IEditableCollectionView.CanRemove
  - System.ComponentModel.IEditableCollectionView.CommitEdit
  - System.ComponentModel.IEditableCollectionView.CommitNew
  - System.ComponentModel.IEditableCollectionView.CurrentAddItem
  - System.ComponentModel.IEditableCollectionView.CurrentEditItem
  - System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  - System.ComponentModel.IEditableCollectionView.IsAddingNew
  - System.ComponentModel.IEditableCollectionView.IsEditingItem
  - System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  - System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  - System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: IEditableCollectionView
  nameWithType: IEditableCollectionView
  fullName: System.ComponentModel.IEditableCollectionView
  type: Interface
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IEditableCollectionView
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 37
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nIEditableCollectionView is an interface that a collection view\ncan implement to enable editing-related functionality.\n"
  example: []
  syntax:
    content: public interface IEditableCollectionView
    content.vb: Public Interface IEditableCollectionView
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  commentId: P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NewItemPlaceholderPosition
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 45
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nIndicates whether to include a placeholder for a new item, and if so,\nwhere to put it.\n"
  example: []
  syntax:
    content: NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    parameters: []
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
    content.vb: Property NewItemPlaceholderPosition As NewItemPlaceholderPosition
  overload: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  modifiers.csharp:
  - get
  - set
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  commentId: P:System.ComponentModel.IEditableCollectionView.CanAddNew
  id: CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanAddNew
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturn true if the view supports <xref href=\"System.ComponentModel.IEditableCollectionView.AddNew\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: bool CanAddNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanAddNew As Boolean
  overload: System.ComponentModel.IEditableCollectionView.CanAddNew*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  commentId: M:System.ComponentModel.IEditableCollectionView.AddNew
  id: AddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AddNew
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 58
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nAdd a new item to the underlying collection.  Returns the new item.\nAfter calling AddNew and changing the new item as desired, either\n<xref href=\"System.ComponentModel.IEditableCollectionView.CommitNew\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ComponentModel.IEditableCollectionView.CancelNew\" data-throw-if-not-resolved=\"false\"></xref> should be\ncalled to complete the transaction.\n"
  example: []
  syntax:
    content: object AddNew()
    return:
      type: System.Object
    content.vb: Function AddNew As Object
  overload: System.ComponentModel.IEditableCollectionView.AddNew*
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitNew
  id: CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CommitNew
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 65
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nComplete the transaction started by <xref href=\"System.ComponentModel.IEditableCollectionView.AddNew\" data-throw-if-not-resolved=\"false\"></xref>.  The new\nitem remains in the collection, and the view&apos;s sort, filter, and grouping\nspecifications (if any) are applied to the new item.\n"
  example: []
  syntax:
    content: void CommitNew()
    content.vb: Sub CommitNew
  overload: System.ComponentModel.IEditableCollectionView.CommitNew*
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelNew
  id: CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CancelNew
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 71
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nComplete the transaction started by <xref href=\"System.ComponentModel.IEditableCollectionView.AddNew\" data-throw-if-not-resolved=\"false\"></xref>.  The new\nitem is removed from the collection.\n"
  example: []
  syntax:
    content: void CancelNew()
    content.vb: Sub CancelNew
  overload: System.ComponentModel.IEditableCollectionView.CancelNew*
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  commentId: P:System.ComponentModel.IEditableCollectionView.IsAddingNew
  id: IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsAddingNew
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 76
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturns true if an <xref href=\"System.ComponentModel.IEditableCollectionView.AddNew\" data-throw-if-not-resolved=\"false\"></xref> transaction is in progress.\n"
  example: []
  syntax:
    content: bool IsAddingNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsAddingNew As Boolean
  overload: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  commentId: P:System.ComponentModel.IEditableCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CurrentAddItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 82
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nWhen an <xref href=\"System.ComponentModel.IEditableCollectionView.AddNew\" data-throw-if-not-resolved=\"false\"></xref> transaction is in progress, this property\nreturns the new item.  Otherwise it returns null.\n"
  example: []
  syntax:
    content: object CurrentAddItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property CurrentAddItem As Object
  overload: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  commentId: P:System.ComponentModel.IEditableCollectionView.CanRemove
  id: CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanRemove
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 92
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturn true if the view supports <xref href=\"System.ComponentModel.IEditableCollectionView.Remove(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: bool CanRemove { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanRemove As Boolean
  overload: System.ComponentModel.IEditableCollectionView.CanRemove*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  commentId: M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RemoveAt
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 99
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nRemove the item at the given index from the underlying collection.\nThe index is interpreted with respect to the view (not with respect to\nthe underlying collection).\n"
  example: []
  syntax:
    content: void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Sub RemoveAt(index As Integer)
  overload: System.ComponentModel.IEditableCollectionView.RemoveAt*
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Remove
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 104
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nRemove the given item from the underlying collection.\n"
  example: []
  syntax:
    content: void Remove(object item)
    parameters:
    - id: item
      type: System.Object
    content.vb: Sub Remove(item As Object)
  overload: System.ComponentModel.IEditableCollectionView.Remove*
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: EditItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 117
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nBegins an editing transaction on the given item.  The transaction is\ncompleted by calling either <xref href=\"System.ComponentModel.IEditableCollectionView.CommitEdit\" data-throw-if-not-resolved=\"false\"></xref> or\n<xref href=\"System.ComponentModel.IEditableCollectionView.CancelEdit\" data-throw-if-not-resolved=\"false\"></xref>.  Any changes made to the item during\nthe transaction are considered &quot;pending&quot;, provided that the view supports\nthe notion of &quot;pending changes&quot; for the given item.\n"
  example: []
  syntax:
    content: void EditItem(object item)
    parameters:
    - id: item
      type: System.Object
    content.vb: Sub EditItem(item As Object)
  overload: System.ComponentModel.IEditableCollectionView.EditItem*
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitEdit
  id: CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CommitEdit
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nComplete the transaction started by <xref href=\"System.ComponentModel.IEditableCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\nThe pending changes (if any) to the item are committed.\n"
  example: []
  syntax:
    content: void CommitEdit()
    content.vb: Sub CommitEdit
  overload: System.ComponentModel.IEditableCollectionView.CommitEdit*
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelEdit
  id: CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CancelEdit
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nComplete the transaction started by <xref href=\"System.ComponentModel.IEditableCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\nThe pending changes (if any) to the item are discarded.\n"
  example: []
  syntax:
    content: void CancelEdit()
    content.vb: Sub CancelEdit
  overload: System.ComponentModel.IEditableCollectionView.CancelEdit*
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  commentId: P:System.ComponentModel.IEditableCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CanCancelEdit
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 139
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturns true if the view supports the notion of &quot;pending changes&quot; on the\ncurrent edit item.  This may vary, depending on the view and the particular\nitem.  For example, a view might return true if the current edit item\nimplements <xref href=\"System.ComponentModel.IEditableObject\" data-throw-if-not-resolved=\"false\"></xref>, or if the view has special\nknowledge about the item that it can use to support rollback of pending\nchanges.\n"
  example: []
  syntax:
    content: bool CanCancelEdit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanCancelEdit As Boolean
  overload: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  commentId: P:System.ComponentModel.IEditableCollectionView.IsEditingItem
  id: IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsEditingItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 144
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nReturns true if an <xref href=\"System.ComponentModel.IEditableCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> transaction is in progress.\n"
  example: []
  syntax:
    content: bool IsEditingItem { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEditingItem As Boolean
  overload: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  commentId: P:System.ComponentModel.IEditableCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  - vb
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CurrentEditItem
    path: ../OpenSilverGit/src/Runtime/Runtime/System.ComponentModel/IEditableCollectionView.cs
    startLine: 150
  assemblies:
  - OpenSilver
  namespace: System.ComponentModel
  summary: "\nWhen an <xref href=\"System.ComponentModel.IEditableCollectionView.EditItem(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> transaction is in progress, this property\nreturns the affected item.  Otherwise it returns null.\n"
  example: []
  syntax:
    content: object CurrentEditItem { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property CurrentEditItem As Object
  overload: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  commentId: T:System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  commentId: M:System.ComponentModel.IEditableCollectionView.AddNew
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CanAddNew
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitNew
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelNew
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.AddNew*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.AddNew
  name: AddNew
  nameWithType: IEditableCollectionView.AddNew
  fullName: System.ComponentModel.IEditableCollectionView.AddNew
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IEditableCollectionView.CommitNew*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CommitNew
  name: CommitNew
  nameWithType: IEditableCollectionView.CommitNew
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew
- uid: System.ComponentModel.IEditableCollectionView.CancelNew*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CancelNew
  name: CancelNew
  nameWithType: IEditableCollectionView.CancelNew
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.IsAddingNew
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CurrentAddItem
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  commentId: M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CanRemove*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CanRemove
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.RemoveAt
  name: RemoveAt
  nameWithType: IEditableCollectionView.RemoveAt
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IEditableCollectionView.Remove*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.Remove
  name: Remove
  nameWithType: IEditableCollectionView.Remove
  fullName: System.ComponentModel.IEditableCollectionView.Remove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CommitEdit
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  commentId: M:System.ComponentModel.IEditableCollectionView.CancelEdit
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.EditItem*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.EditItem
  name: EditItem
  nameWithType: IEditableCollectionView.EditItem
  fullName: System.ComponentModel.IEditableCollectionView.EditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  commentId: M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CommitEdit
  name: CommitEdit
  nameWithType: IEditableCollectionView.CommitEdit
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CancelEdit
  name: CancelEdit
  nameWithType: IEditableCollectionView.CancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit
- uid: System.ComponentModel.IEditableObject
  commentId: T:System.ComponentModel.IEditableObject
  isExternal: true
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CanCancelEdit
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.IsEditingItem
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  commentId: Overload:System.ComponentModel.IEditableCollectionView.CurrentEditItem
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
