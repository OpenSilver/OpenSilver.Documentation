### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.Dispatcher
  commentId: T:System.Windows.Threading.Dispatcher
  id: Dispatcher
  parent: System.Windows.Threading
  children:
  - System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  - System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Threading.Dispatcher.CheckAccess
  - System.Windows.Threading.Dispatcher.CurrentDispatcher
  - System.Windows.Threading.Dispatcher.DisableProcessing
  - System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  langs:
  - csharp
  - vb
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Dispatcher
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nProvides services for managing the queue of work items for a thread.\n"
  example: []
  syntax:
    content: public sealed class Dispatcher
    content.vb: Public NotInheritable Class Dispatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Threading.Dispatcher.CurrentDispatcher
  commentId: P:System.Windows.Threading.Dispatcher.CurrentDispatcher
  id: CurrentDispatcher
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: CurrentDispatcher
  nameWithType: Dispatcher.CurrentDispatcher
  fullName: System.Windows.Threading.Dispatcher.CurrentDispatcher
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CurrentDispatcher
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 56
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nGets the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> for the thread currently executing\nand creates a new <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> if one is not already associated\nwith the thread.\n"
  example: []
  syntax:
    content: public static Dispatcher CurrentDispatcher { get; }
    parameters: []
    return:
      type: System.Windows.Threading.Dispatcher
      description: "\nThe dispatcher associated with the current thread.\n"
    content.vb: Public Shared ReadOnly Property CurrentDispatcher As Dispatcher
  overload: System.Windows.Threading.Dispatcher.CurrentDispatcher*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  commentId: M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  id: BeginInvoke(System.Action)
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: BeginInvoke(Action)
  nameWithType: Dispatcher.BeginInvoke(Action)
  fullName: System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BeginInvoke
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 86
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nExecutes the specified delegate asynchronously on the thread the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>\nis associated with.\n"
  example: []
  syntax:
    content: public DispatcherOperation BeginInvoke(Action a)
    parameters:
    - id: a
      type: System.Action
      description: "\nA delegate to a method that takes no arguments and does not return a value, which\nis pushed onto the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> event queue.\n"
    return:
      type: System.Windows.Threading.DispatcherOperation
      description: "\nAn object, which is returned immediately after <xref href=\"System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)\" data-throw-if-not-resolved=\"false\"></xref> is \ncalled, that represents the operation that has been posted to the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>\nqueue.\n"
    content.vb: Public Function BeginInvoke(a As Action) As DispatcherOperation
  overload: System.Windows.Threading.Dispatcher.BeginInvoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">a</code> is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])
  commentId: M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: BeginInvoke(Delegate, Object[])
  nameWithType: Dispatcher.BeginInvoke(Delegate, Object[])
  fullName: System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate, System.Object[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BeginInvoke
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 112
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nExecutes the specified delegate asynchronously with the specified array of arguments\non the thread the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> is associated with.\n"
  example: []
  syntax:
    content: public DispatcherOperation BeginInvoke(Delegate d, params object[] args)
    parameters:
    - id: d
      type: System.Delegate
      description: "\nA delegate to a method that takes multiple arguments, which is pushed onto the\n<xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> event queue.\n"
    - id: args
      type: System.Object[]
      description: "\nAn array of objects to pass as arguments to the specified method.\n"
    return:
      type: System.Windows.Threading.DispatcherOperation
      description: "\nAn object, which is returned immediately after <xref href=\"System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>\nis called, that represents the operation that has been posted to the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>\nqueue.\n"
    content.vb: Public Function BeginInvoke(d As  Delegate, ParamArray args As Object()) As DispatcherOperation
  overload: System.Windows.Threading.Dispatcher.BeginInvoke*
  nameWithType.vb: Dispatcher.BeginInvoke(Delegate, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate, System.Object())
  name.vb: BeginInvoke(Delegate, Object())
- uid: System.Windows.Threading.Dispatcher.CheckAccess
  commentId: M:System.Windows.Threading.Dispatcher.CheckAccess
  id: CheckAccess
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: CheckAccess()
  nameWithType: Dispatcher.CheckAccess()
  fullName: System.Windows.Threading.Dispatcher.CheckAccess()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CheckAccess
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 120
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nDetermines whether the calling thread is the thread associated with this <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool CheckAccess()
    return:
      type: System.Boolean
      description: "\ntrue if the calling thread is the thread associated with this <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
    content.vb: Public Function CheckAccess As Boolean
  overload: System.Windows.Threading.Dispatcher.CheckAccess*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  id: InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: InvokeAsync(Action, DispatcherPriority)
  nameWithType: Dispatcher.InvokeAsync(Action, DispatcherPriority)
  fullName: System.Windows.Threading.Dispatcher.InvokeAsync(System.Action, System.Windows.Threading.DispatcherPriority)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InvokeAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 137
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nExecutes the specified <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> asynchronously at the specified priority on the thread \nthe <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> is associated with.\n"
  example: []
  syntax:
    content: public DispatcherOperation InvokeAsync(Action a, DispatcherPriority priority = DispatcherPriority.Normal)
    parameters:
    - id: a
      type: System.Action
      description: "\nA delegate to invoke through the dispatcher.\n"
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: "\nThe priority that determines the order in which the specified callback is invoked relative to the \nother pending operations in the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Windows.Threading.DispatcherOperation
      description: "\nAn object, which is returned immediately after <xref href=\"System.Windows.Threading.Dispatcher.InvokeAsync(System.Action%2cSystem.Windows.Threading.DispatcherPriority)\" data-throw-if-not-resolved=\"false\"></xref>\nis called, that can be used to interact with the delegate as it is pending execution in the event queue.\n"
    content.vb: Public Function InvokeAsync(a As Action, priority As DispatcherPriority = DispatcherPriority.Normal) As DispatcherOperation
  overload: System.Windows.Threading.Dispatcher.InvokeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Threading.Dispatcher.DisableProcessing
  commentId: M:System.Windows.Threading.Dispatcher.DisableProcessing
  id: DisableProcessing
  parent: System.Windows.Threading.Dispatcher
  langs:
  - csharp
  - vb
  name: DisableProcessing()
  nameWithType: Dispatcher.DisableProcessing()
  fullName: System.Windows.Threading.Dispatcher.DisableProcessing()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DisableProcessing
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Threading/Dispatcher.cs
    startLine: 164
  assemblies:
  - OpenSilver
  namespace: System.Windows.Threading
  summary: "\nDisables processing of the <xref href=\"System.Windows.Threading.Dispatcher\" data-throw-if-not-resolved=\"false\"></xref> queue.\n"
  example: []
  syntax:
    content: public DispatcherProcessingDisabled DisableProcessing()
    return:
      type: System.Windows.Threading.DispatcherProcessingDisabled
      description: "\nA structure used to re-enable dispatcher processing.\n"
    content.vb: Public Function DisableProcessing As DispatcherProcessingDisabled
  overload: System.Windows.Threading.Dispatcher.DisableProcessing*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Threading.Dispatcher
  commentId: T:System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.Dispatcher.CurrentDispatcher*
  commentId: Overload:System.Windows.Threading.Dispatcher.CurrentDispatcher
  name: CurrentDispatcher
  nameWithType: Dispatcher.CurrentDispatcher
  fullName: System.Windows.Threading.Dispatcher.CurrentDispatcher
- uid: System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  commentId: M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Threading.Dispatcher.BeginInvoke*
  commentId: Overload:System.Windows.Threading.Dispatcher.BeginInvoke
  name: BeginInvoke
  nameWithType: Dispatcher.BeginInvoke
  fullName: System.Windows.Threading.Dispatcher.BeginInvoke
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Windows.Threading.DispatcherOperation
  commentId: T:System.Windows.Threading.DispatcherOperation
  parent: System.Windows.Threading
  name: DispatcherOperation
  nameWithType: DispatcherOperation
  fullName: System.Windows.Threading.DispatcherOperation
- uid: System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])
  commentId: M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])
  isExternal: true
- uid: System.Delegate
  commentId: T:System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Threading.Dispatcher.CheckAccess*
  commentId: Overload:System.Windows.Threading.Dispatcher.CheckAccess
  name: CheckAccess
  nameWithType: Dispatcher.CheckAccess
  fullName: System.Windows.Threading.Dispatcher.CheckAccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  commentId: M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)
  isExternal: true
- uid: System.Windows.Threading.Dispatcher.InvokeAsync*
  commentId: Overload:System.Windows.Threading.Dispatcher.InvokeAsync
  name: InvokeAsync
  nameWithType: Dispatcher.InvokeAsync
  fullName: System.Windows.Threading.Dispatcher.InvokeAsync
- uid: System.Windows.Threading.DispatcherPriority
  commentId: T:System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.Dispatcher.DisableProcessing*
  commentId: Overload:System.Windows.Threading.Dispatcher.DisableProcessing
  name: DisableProcessing
  nameWithType: Dispatcher.DisableProcessing
  fullName: System.Windows.Threading.Dispatcher.DisableProcessing
- uid: System.Windows.Threading.DispatcherProcessingDisabled
  commentId: T:System.Windows.Threading.DispatcherProcessingDisabled
  parent: System.Windows.Threading
  name: DispatcherProcessingDisabled
  nameWithType: DispatcherProcessingDisabled
  fullName: System.Windows.Threading.DispatcherProcessingDisabled
