### YamlMime:ManagedReference
items:
- uid: System.Windows.Messaging.LocalMessageReceiver
  commentId: T:System.Windows.Messaging.LocalMessageReceiver
  id: LocalMessageReceiver
  parent: System.Windows.Messaging
  children:
  - System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String)
  - System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})
  - System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
  - System.Windows.Messaging.LocalMessageReceiver.AnyDomain
  - System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
  - System.Windows.Messaging.LocalMessageReceiver.Dispose
  - System.Windows.Messaging.LocalMessageReceiver.Listen
  - System.Windows.Messaging.LocalMessageReceiver.MessageReceived
  - System.Windows.Messaging.LocalMessageReceiver.NameScope
  - System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  langs:
  - csharp
  - vb
  name: LocalMessageReceiver
  nameWithType: LocalMessageReceiver
  fullName: System.Windows.Messaging.LocalMessageReceiver
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LocalMessageReceiver
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 9
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public sealed class LocalMessageReceiver : IDisposable
    content.vb: >-
      <NotImplemented>

      Public NotInheritable Class LocalMessageReceiver
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Messaging.LocalMessageReceiver.AnyDomain
  commentId: F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain
  id: AnyDomain
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: AnyDomain
  nameWithType: LocalMessageReceiver.AnyDomain
  fullName: System.Windows.Messaging.LocalMessageReceiver.AnyDomain
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AnyDomain
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 16
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public static readonly IEnumerable<string> AnyDomain
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly AnyDomain As IEnumerable(Of String)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String)
  commentId: M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: LocalMessageReceiver(String)
  nameWithType: LocalMessageReceiver.LocalMessageReceiver(String)
  fullName: System.Windows.Messaging.LocalMessageReceiver.LocalMessageReceiver(System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 33
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public LocalMessageReceiver(string receiverName)
    parameters:
    - id: receiverName
      type: System.String
    content.vb: >-
      <NotImplemented>

      Public Sub New(receiverName As String)
  overload: System.Windows.Messaging.LocalMessageReceiver.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})'
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: LocalMessageReceiver(String, ReceiverNameScope, IEnumerable<String>)
  nameWithType: LocalMessageReceiver.LocalMessageReceiver(String, ReceiverNameScope, IEnumerable<String>)
  fullName: System.Windows.Messaging.LocalMessageReceiver.LocalMessageReceiver(System.String, System.Windows.Messaging.ReceiverNameScope, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public LocalMessageReceiver(string receiverName, ReceiverNameScope nameScope, IEnumerable<string> allowedSenderDomains)
    parameters:
    - id: receiverName
      type: System.String
    - id: nameScope
      type: System.Windows.Messaging.ReceiverNameScope
    - id: allowedSenderDomains
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: >-
      <NotImplemented>

      Public Sub New(receiverName As String, nameScope As ReceiverNameScope, allowedSenderDomains As IEnumerable(Of String))
  overload: System.Windows.Messaging.LocalMessageReceiver.#ctor*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: LocalMessageReceiver.LocalMessageReceiver(String, ReceiverNameScope, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Messaging.LocalMessageReceiver.LocalMessageReceiver(System.String, System.Windows.Messaging.ReceiverNameScope, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: LocalMessageReceiver(String, ReceiverNameScope, IEnumerable(Of String))
- uid: System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
  id: AllowedSenderDomains
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: AllowedSenderDomains
  nameWithType: LocalMessageReceiver.AllowedSenderDomains
  fullName: System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowedSenderDomains
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 79
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public IEnumerable<string> AllowedSenderDomains { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property AllowedSenderDomains As IEnumerable(Of String)
  overload: System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
  id: DisableSenderTrustCheck
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: DisableSenderTrustCheck
  nameWithType: LocalMessageReceiver.DisableSenderTrustCheck
  fullName: System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DisableSenderTrustCheck
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public bool DisableSenderTrustCheck { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <NotImplemented>

      Public Property DisableSenderTrustCheck As Boolean
  overload: System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageReceiver.NameScope
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.NameScope
  id: NameScope
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: NameScope
  nameWithType: LocalMessageReceiver.NameScope
  fullName: System.Windows.Messaging.LocalMessageReceiver.NameScope
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: NameScope
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 108
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public ReceiverNameScope NameScope { get; }
    parameters: []
    return:
      type: System.Windows.Messaging.ReceiverNameScope
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property NameScope As ReceiverNameScope
  overload: System.Windows.Messaging.LocalMessageReceiver.NameScope*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  commentId: P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  id: ReceiverName
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: ReceiverName
  nameWithType: LocalMessageReceiver.ReceiverName
  fullName: System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ReceiverName
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 116
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public string ReceiverName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ReceiverName As String
  overload: System.Windows.Messaging.LocalMessageReceiver.ReceiverName*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Messaging.LocalMessageReceiver.MessageReceived
  commentId: E:System.Windows.Messaging.LocalMessageReceiver.MessageReceived
  id: MessageReceived
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: MessageReceived
  nameWithType: LocalMessageReceiver.MessageReceived
  fullName: System.Windows.Messaging.LocalMessageReceiver.MessageReceived
  type: Event
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MessageReceived
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 123
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public event EventHandler<MessageReceivedEventArgs> MessageReceived
    return:
      type: System.EventHandler{System.Windows.Messaging.MessageReceivedEventArgs}
    content.vb: >-
      <NotImplemented>

      Public Event MessageReceived As EventHandler(Of MessageReceivedEventArgs)
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageReceiver.Dispose
  commentId: M:System.Windows.Messaging.LocalMessageReceiver.Dispose
  id: Dispose
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LocalMessageReceiver.Dispose()
  fullName: System.Windows.Messaging.LocalMessageReceiver.Dispose()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Dispose
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 129
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public void Dispose()
    content.vb: >-
      <NotImplemented>

      Public Sub Dispose
  overload: System.Windows.Messaging.LocalMessageReceiver.Dispose*
  implements:
  - System.IDisposable.Dispose
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Messaging.LocalMessageReceiver.Listen
  commentId: M:System.Windows.Messaging.LocalMessageReceiver.Listen
  id: Listen
  parent: System.Windows.Messaging.LocalMessageReceiver
  langs:
  - csharp
  - vb
  name: Listen()
  nameWithType: LocalMessageReceiver.Listen()
  fullName: System.Windows.Messaging.LocalMessageReceiver.Listen()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Listen
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Messaging/WORKINPROGRESS/LocalMessageReceiver.cs
    startLine: 150
  assemblies:
  - OpenSilver
  namespace: System.Windows.Messaging
  syntax:
    content: >-
      [NotImplemented]

      public void Listen()
    content.vb: >-
      <NotImplemented>

      Public Sub Listen
  overload: System.Windows.Messaging.LocalMessageReceiver.Listen*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Messaging
  commentId: N:System.Windows.Messaging
  name: System.Windows.Messaging
  nameWithType: System.Windows.Messaging
  fullName: System.Windows.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Windows.Messaging.LocalMessageReceiver.#ctor*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.#ctor
  name: LocalMessageReceiver
  nameWithType: LocalMessageReceiver.LocalMessageReceiver
  fullName: System.Windows.Messaging.LocalMessageReceiver.LocalMessageReceiver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Messaging.ReceiverNameScope
  commentId: T:System.Windows.Messaging.ReceiverNameScope
  parent: System.Windows.Messaging
  name: ReceiverNameScope
  nameWithType: ReceiverNameScope
  fullName: System.Windows.Messaging.ReceiverNameScope
- uid: System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
  name: AllowedSenderDomains
  nameWithType: LocalMessageReceiver.AllowedSenderDomains
  fullName: System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains
- uid: System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
  name: DisableSenderTrustCheck
  nameWithType: LocalMessageReceiver.DisableSenderTrustCheck
  fullName: System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Messaging.LocalMessageReceiver.NameScope*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.NameScope
  name: NameScope
  nameWithType: LocalMessageReceiver.NameScope
  fullName: System.Windows.Messaging.LocalMessageReceiver.NameScope
- uid: System.Windows.Messaging.LocalMessageReceiver.ReceiverName*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.ReceiverName
  name: ReceiverName
  nameWithType: LocalMessageReceiver.ReceiverName
  fullName: System.Windows.Messaging.LocalMessageReceiver.ReceiverName
- uid: System.EventHandler{System.Windows.Messaging.MessageReceivedEventArgs}
  commentId: T:System.EventHandler{System.Windows.Messaging.MessageReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageReceivedEventArgs>
  nameWithType: EventHandler<MessageReceivedEventArgs>
  fullName: System.EventHandler<System.Windows.Messaging.MessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of MessageReceivedEventArgs)
  fullName.vb: System.EventHandler(Of System.Windows.Messaging.MessageReceivedEventArgs)
  name.vb: EventHandler(Of MessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Messaging.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: System.Windows.Messaging.MessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Messaging.MessageReceivedEventArgs
    name: MessageReceivedEventArgs
    nameWithType: MessageReceivedEventArgs
    fullName: System.Windows.Messaging.MessageReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Messaging.LocalMessageReceiver.Dispose*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.Dispose
  name: Dispose
  nameWithType: LocalMessageReceiver.Dispose
  fullName: System.Windows.Messaging.LocalMessageReceiver.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Messaging.LocalMessageReceiver.Listen*
  commentId: Overload:System.Windows.Messaging.LocalMessageReceiver.Listen
  name: Listen
  nameWithType: LocalMessageReceiver.Listen
  fullName: System.Windows.Messaging.LocalMessageReceiver.Listen
