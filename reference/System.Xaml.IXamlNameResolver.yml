### YamlMime:ManagedReference
items:
- uid: System.Xaml.IXamlNameResolver
  commentId: T:System.Xaml.IXamlNameResolver
  id: IXamlNameResolver
  parent: System.Xaml
  children:
  - System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  - System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  - System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  - System.Xaml.IXamlNameResolver.Resolve(System.String)
  - System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  langs:
  - csharp
  - vb
  name: IXamlNameResolver
  nameWithType: IXamlNameResolver
  fullName: System.Xaml.IXamlNameResolver
  type: Interface
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IXamlNameResolver
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 29
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: public interface IXamlNameResolver
    content.vb: Public Interface IXamlNameResolver
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  commentId: P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  id: IsFixupTokenAvailable
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: IsFixupTokenAvailable
  nameWithType: IXamlNameResolver.IsFixupTokenAvailable
  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsFixupTokenAvailable
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 31
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: bool IsFixupTokenAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsFixupTokenAvailable As Boolean
  overload: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  commentId: E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  id: OnNameScopeInitializationComplete
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: OnNameScopeInitializationComplete
  nameWithType: IXamlNameResolver.OnNameScopeInitializationComplete
  fullName: System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete
  type: Event
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OnNameScopeInitializationComplete
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 32
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: event EventHandler OnNameScopeInitializationComplete
    return:
      type: System.EventHandler
    content.vb: Event OnNameScopeInitializationComplete As EventHandler
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String})
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: GetFixupToken(IEnumerable<String>)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetFixupToken
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 33
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: object GetFixupToken(IEnumerable<string> names)
    parameters:
    - id: names
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Object
    content.vb: Function GetFixupToken(names As IEnumerable(Of String)) As Object
  overload: System.Xaml.IXamlNameResolver.GetFixupToken*
  nameWithType.vb: IXamlNameResolver.GetFixupToken(IEnumerable(Of String))
  fullName.vb: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetFixupToken(IEnumerable(Of String))
- uid: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  id: GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: GetFixupToken(IEnumerable<String>, Boolean)
  nameWithType: IXamlNameResolver.GetFixupToken(IEnumerable<String>, Boolean)
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetFixupToken
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 34
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: object GetFixupToken(IEnumerable<string> names, bool canAssignDirectly)
    parameters:
    - id: names
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: canAssignDirectly
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Function GetFixupToken(names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object
  overload: System.Xaml.IXamlNameResolver.GetFixupToken*
  nameWithType.vb: IXamlNameResolver.GetFixupToken(IEnumerable(Of String), Boolean)
  fullName.vb: System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  name.vb: GetFixupToken(IEnumerable(Of String), Boolean)
- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  commentId: M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  id: GetAllNamesAndValuesInScope
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: GetAllNamesAndValuesInScope()
  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope()
  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetAllNamesAndValuesInScope
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 35
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: IEnumerable<KeyValuePair<string, object>> GetAllNamesAndValuesInScope()
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
    content.vb: Function GetAllNamesAndValuesInScope As IEnumerable(Of KeyValuePair(Of String, Object))
  overload: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String)
  commentId: M:System.Xaml.IXamlNameResolver.Resolve(System.String)
  id: Resolve(System.String)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: Resolve(String)
  nameWithType: IXamlNameResolver.Resolve(String)
  fullName: System.Xaml.IXamlNameResolver.Resolve(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Resolve
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 36
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: object Resolve(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Function Resolve(name As String) As Object
  overload: System.Xaml.IXamlNameResolver.Resolve*
- uid: System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  commentId: M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)
  id: Resolve(System.String,System.Boolean@)
  parent: System.Xaml.IXamlNameResolver
  langs:
  - csharp
  - vb
  name: Resolve(String, out Boolean)
  nameWithType: IXamlNameResolver.Resolve(String, out Boolean)
  fullName: System.Xaml.IXamlNameResolver.Resolve(System.String, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Resolve
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml/IXamlNameResolver.cs
    startLine: 37
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml
  syntax:
    content: object Resolve(string name, out bool isFullyInitialized)
    parameters:
    - id: name
      type: System.String
    - id: isFullyInitialized
      type: System.Boolean
    return:
      type: System.Object
    content.vb: Function Resolve(name As String, ByRef isFullyInitialized As Boolean) As Object
  overload: System.Xaml.IXamlNameResolver.Resolve*
  nameWithType.vb: IXamlNameResolver.Resolve(String, ByRef Boolean)
  fullName.vb: System.Xaml.IXamlNameResolver.Resolve(System.String, ByRef System.Boolean)
  name.vb: Resolve(String, ByRef Boolean)
references:
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable*
  commentId: Overload:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
  name: IsFixupTokenAvailable
  nameWithType: IXamlNameResolver.IsFixupTokenAvailable
  fullName: System.Xaml.IXamlNameResolver.IsFixupTokenAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Xaml.IXamlNameResolver.GetFixupToken*
  commentId: Overload:System.Xaml.IXamlNameResolver.GetFixupToken
  name: GetFixupToken
  nameWithType: IXamlNameResolver.GetFixupToken
  fullName: System.Xaml.IXamlNameResolver.GetFixupToken
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope*
  commentId: Overload:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
  name: GetAllNamesAndValuesInScope
  nameWithType: IXamlNameResolver.GetAllNamesAndValuesInScope
  fullName: System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.IXamlNameResolver.Resolve*
  commentId: Overload:System.Xaml.IXamlNameResolver.Resolve
  name: Resolve
  nameWithType: IXamlNameResolver.Resolve
  fullName: System.Xaml.IXamlNameResolver.Resolve
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
