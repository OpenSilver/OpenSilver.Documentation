### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.RangeValuePatternIdentifiers
  commentId: T:System.Windows.Automation.RangeValuePatternIdentifiers
  id: RangeValuePatternIdentifiers
  parent: System.Windows.Automation
  children:
  - System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty
  - System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty
  - System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty
  - System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty
  - System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty
  - System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty
  langs:
  - csharp
  - vb
  name: RangeValuePatternIdentifiers
  nameWithType: RangeValuePatternIdentifiers
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RangeValuePatternIdentifiers
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 10
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static class RangeValuePatternIdentifiers
    content.vb: >-
      <NotImplemented>

      Public Module RangeValuePatternIdentifiers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty
  id: IsReadOnlyProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: IsReadOnlyProperty
  nameWithType: RangeValuePatternIdentifiers.IsReadOnlyProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: IsReadOnlyProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 21
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty IsReadOnlyProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly IsReadOnlyProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty
  id: LargeChangeProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: LargeChangeProperty
  nameWithType: RangeValuePatternIdentifiers.LargeChangeProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: LargeChangeProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 30
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty LargeChangeProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly LargeChangeProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty
  id: MaximumProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: MaximumProperty
  nameWithType: RangeValuePatternIdentifiers.MaximumProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MaximumProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty MaximumProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly MaximumProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty
  id: MinimumProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: MinimumProperty
  nameWithType: RangeValuePatternIdentifiers.MinimumProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: MinimumProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty MinimumProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly MinimumProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty
  id: SmallChangeProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: SmallChangeProperty
  nameWithType: RangeValuePatternIdentifiers.SmallChangeProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SmallChangeProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 57
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty SmallChangeProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly SmallChangeProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty
  commentId: F:System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty
  id: ValueProperty
  parent: System.Windows.Automation.RangeValuePatternIdentifiers
  langs:
  - csharp
  - vb
  name: ValueProperty
  nameWithType: RangeValuePatternIdentifiers.ValueProperty
  fullName: System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty
  type: Field
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ValueProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Automation/WORKINPROGRESS/RangeValuePatternIdentifiers.cs
    startLine: 66
  assemblies:
  - OpenSilver
  namespace: System.Windows.Automation
  syntax:
    content: >-
      [NotImplemented]

      public static readonly AutomationProperty ValueProperty
    return:
      type: System.Windows.Automation.AutomationProperty
    content.vb: >-
      <NotImplemented>

      Public Shared ReadOnly ValueProperty As AutomationProperty
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Windows.Automation
  commentId: N:System.Windows.Automation
  name: System.Windows.Automation
  nameWithType: System.Windows.Automation
  fullName: System.Windows.Automation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Automation.AutomationProperty
  commentId: T:System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
