### YamlMime:ManagedReference
items:
- uid: Microsoft.Windows.DragEventArgs
  commentId: T:Microsoft.Windows.DragEventArgs
  id: DragEventArgs
  parent: Microsoft.Windows
  children:
  - Microsoft.Windows.DragEventArgs.AllowedEffects
  - Microsoft.Windows.DragEventArgs.Data
  - Microsoft.Windows.DragEventArgs.Effects
  - Microsoft.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)
  - Microsoft.Windows.DragEventArgs.Handled
  langs:
  - csharp
  - vb
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: Microsoft.Windows.DragEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nProvides data for drag-and-drop events in Silverlight.\n"
  example: []
  syntax:
    content: 'public sealed class DragEventArgs : ExtendedRoutedEventArgs'
    content.vb: >-
      Public NotInheritable Class DragEventArgs

          Inherits ExtendedRoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - Microsoft.Windows.ExtendedRoutedEventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Windows.DragEventArgs.Effects
  commentId: P:Microsoft.Windows.DragEventArgs.Effects
  id: Effects
  parent: Microsoft.Windows.DragEventArgs
  langs:
  - csharp
  - vb
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: Microsoft.Windows.DragEventArgs.Effects
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Effects
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 75
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nGets or sets the target drop-and-drop operation.\n"
  example: []
  syntax:
    content: public DragDropEffects Effects { get; set; }
    parameters: []
    return:
      type: Microsoft.Windows.DragDropEffects
    content.vb: Public Property Effects As DragDropEffects
  overload: Microsoft.Windows.DragEventArgs.Effects*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Windows.DragEventArgs.Data
  commentId: P:Microsoft.Windows.DragEventArgs.Data
  id: Data
  parent: Microsoft.Windows.DragEventArgs
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: Microsoft.Windows.DragEventArgs.Data
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Data
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 82
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nGets a data object (implements IDataObject) that contains\nthe data associated with the corresponding drag event. This value is not\nuseful in all event cases; see Remarks.\n"
  example: []
  syntax:
    content: public IDataObject Data { get; }
    parameters: []
    return:
      type: Microsoft.Windows.IDataObject
    content.vb: Public ReadOnly Property Data As IDataObject
  overload: Microsoft.Windows.DragEventArgs.Data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Windows.DragEventArgs.Handled
  commentId: P:Microsoft.Windows.DragEventArgs.Handled
  id: Handled
  parent: Microsoft.Windows.DragEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  nameWithType: DragEventArgs.Handled
  fullName: Microsoft.Windows.DragEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Handled
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 88
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nGets or sets a value that indicates the present state of the event handling\nfor a routed event as it travels the route.\n"
  example: []
  syntax:
    content: public bool Handled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Handled As Boolean
  overload: Microsoft.Windows.DragEventArgs.Handled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)
  commentId: M:Microsoft.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)
  id: GetPosition(System.Windows.UIElement)
  parent: Microsoft.Windows.DragEventArgs
  langs:
  - csharp
  - vb
  name: GetPosition(UIElement)
  nameWithType: DragEventArgs.GetPosition(UIElement)
  fullName: Microsoft.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetPosition
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 96
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nReturns a drop point that is relative to a specified UIElement\n"
  example: []
  syntax:
    content: public Point GetPosition(UIElement relativeTo)
    parameters:
    - id: relativeTo
      type: System.Windows.UIElement
      description: The UIElement for which to get a relative drop point.
    return:
      type: System.Windows.Point
      description: A drop point that is relative to the element specified in relativeTo.
    content.vb: Public Function GetPosition(relativeTo As UIElement) As Point
  overload: Microsoft.Windows.DragEventArgs.GetPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Windows.DragEventArgs.AllowedEffects
  commentId: P:Microsoft.Windows.DragEventArgs.AllowedEffects
  id: AllowedEffects
  parent: Microsoft.Windows.DragEventArgs
  langs:
  - csharp
  - vb
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: Microsoft.Windows.DragEventArgs.AllowedEffects
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: AllowedEffects
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls/DragEventArgs.cs
    startLine: 112
  assemblies:
  - OpenSilver
  namespace: Microsoft.Windows
  summary: "\nGets a member of the System.Windows.DragDropEffects enumeration that specifies\nwhich operations are allowed by the originator of the drag event.\n"
  example: []
  syntax:
    content: public DragDropEffects AllowedEffects { get; }
    parameters: []
    return:
      type: Microsoft.Windows.DragDropEffects
    content.vb: Public ReadOnly Property AllowedEffects As DragDropEffects
  overload: Microsoft.Windows.DragEventArgs.AllowedEffects*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Windows
  commentId: N:Microsoft.Windows
  name: Microsoft.Windows
  nameWithType: Microsoft.Windows
  fullName: Microsoft.Windows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.Windows.ExtendedRoutedEventArgs
  commentId: T:Microsoft.Windows.ExtendedRoutedEventArgs
  parent: Microsoft.Windows
  name: ExtendedRoutedEventArgs
  nameWithType: ExtendedRoutedEventArgs
  fullName: Microsoft.Windows.ExtendedRoutedEventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: Microsoft.Windows.DragEventArgs.Effects*
  commentId: Overload:Microsoft.Windows.DragEventArgs.Effects
  name: Effects
  nameWithType: DragEventArgs.Effects
  fullName: Microsoft.Windows.DragEventArgs.Effects
- uid: Microsoft.Windows.DragDropEffects
  commentId: T:Microsoft.Windows.DragDropEffects
  parent: Microsoft.Windows
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: Microsoft.Windows.DragDropEffects
- uid: Microsoft.Windows.DragEventArgs.Data*
  commentId: Overload:Microsoft.Windows.DragEventArgs.Data
  name: Data
  nameWithType: DragEventArgs.Data
  fullName: Microsoft.Windows.DragEventArgs.Data
- uid: Microsoft.Windows.IDataObject
  commentId: T:Microsoft.Windows.IDataObject
  parent: Microsoft.Windows
  name: IDataObject
  nameWithType: IDataObject
  fullName: Microsoft.Windows.IDataObject
- uid: Microsoft.Windows.DragEventArgs.Handled*
  commentId: Overload:Microsoft.Windows.DragEventArgs.Handled
  name: Handled
  nameWithType: DragEventArgs.Handled
  fullName: Microsoft.Windows.DragEventArgs.Handled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Windows.DragEventArgs.GetPosition*
  commentId: Overload:Microsoft.Windows.DragEventArgs.GetPosition
  name: GetPosition
  nameWithType: DragEventArgs.GetPosition
  fullName: Microsoft.Windows.DragEventArgs.GetPosition
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Point
  commentId: T:System.Windows.Point
  parent: System.Windows
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: Microsoft.Windows.DragEventArgs.AllowedEffects*
  commentId: Overload:Microsoft.Windows.DragEventArgs.AllowedEffects
  name: AllowedEffects
  nameWithType: DragEventArgs.AllowedEffects
  fullName: Microsoft.Windows.DragEventArgs.AllowedEffects
