### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.WriteableBitmap
  commentId: T:System.Windows.Media.Imaging.WriteableBitmap
  id: WriteableBitmap
  parent: System.Windows.Media.Imaging
  children:
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  - System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)
  - System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.Media.Imaging.BitmapSource)
  - System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  - System.Windows.Media.Imaging.WriteableBitmap.Invalidate
  - System.Windows.Media.Imaging.WriteableBitmap.Pixels
  - System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)
  - System.Windows.Media.Imaging.WriteableBitmap.RenderAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  - System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
  - System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize
  langs:
  - csharp
  - vb
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WriteableBitmap
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 20
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nProvides a <xref href=\"System.Windows.Media.Imaging.BitmapSource\" data-throw-if-not-resolved=\"false\"></xref> that can be written to and updated.\n"
  example: []
  syntax:
    content: 'public sealed class WriteableBitmap : BitmapSource, IDependencyObject'
    content.vb: >-
      Public NotInheritable Class WriteableBitmap
          Inherits BitmapSource
          Implements IDependencyObject
  inheritance:
  - System.Object
  - System.Windows.DependencyObject
  - System.Windows.Media.ImageSource
  - System.Windows.Media.Imaging.BitmapSource
  inheritedMembers:
  - System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
  - System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty
  - System.Windows.Media.Imaging.BitmapSource.PixelHeight
  - System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty
  - System.Windows.Media.Imaging.BitmapSource.PixelWidth
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.Dispatcher
  - System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CheckAccess
  - System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: WriteableBitmap(Int32, Int32)
  nameWithType: WriteableBitmap.WriteableBitmap(Int32, Int32)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 48
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.Imaging.WriteableBitmap\" data-throw-if-not-resolved=\"false\"></xref> class \nusing the provided dimensions.\n"
  example: []
  syntax:
    content: public WriteableBitmap(int pixelWidth, int pixelHeight)
    parameters:
    - id: pixelWidth
      type: System.Int32
      description: "\nThe width of the bitmap.\n"
    - id: pixelHeight
      type: System.Int32
      description: "\nThe height of the bitmap.\n"
    content.vb: Public Sub New(pixelWidth As Integer, pixelHeight As Integer)
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">pixelWidth</code> or <code data-dev-comment-type=\"paramref\" class=\"paramref\">pixelHeight</code> is zero or less.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)
  id: '#ctor(System.Windows.Media.Imaging.BitmapSource)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: WriteableBitmap(BitmapSource)
  nameWithType: WriteableBitmap.WriteableBitmap(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(System.Windows.Media.Imaging.BitmapSource)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 75
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.Imaging.WriteableBitmap\" data-throw-if-not-resolved=\"false\"></xref> class \nusing the provided <xref href=\"System.Windows.Media.Imaging.BitmapSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public WriteableBitmap(BitmapSource source)
    parameters:
    - id: source
      type: System.Windows.Media.Imaging.BitmapSource
      description: "\nThe <xref href=\"System.Windows.Media.Imaging.BitmapSource\" data-throw-if-not-resolved=\"false\"></xref> to use for initialization.\n"
    content.vb: Public Sub New(source As BitmapSource)
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.Media.Imaging.BitmapSource)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.Media.Imaging.BitmapSource)
  id: CreateAsync(System.Windows.Media.Imaging.BitmapSource)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: CreateAsync(BitmapSource)
  nameWithType: WriteableBitmap.CreateAsync(BitmapSource)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.Media.Imaging.BitmapSource)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 86
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  syntax:
    content: public static async Task<WriteableBitmap> CreateAsync(BitmapSource source)
    parameters:
    - id: source
      type: System.Windows.Media.Imaging.BitmapSource
    return:
      type: System.Threading.Tasks.Task{System.Windows.Media.Imaging.WriteableBitmap}
    content.vb: Public Shared Function CreateAsync(source As BitmapSource) As Task(Of WriteableBitmap)
  overload: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)
  id: '#ctor(System.Windows.UIElement,System.Windows.Media.Transform)'
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: WriteableBitmap(UIElement, Transform)
  nameWithType: WriteableBitmap.WriteableBitmap(UIElement, Transform)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap(System.Windows.UIElement, System.Windows.Media.Transform)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 113
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.Imaging.WriteableBitmap\" data-throw-if-not-resolved=\"false\"></xref> class using \nthe provided element and transform.\n"
  example: []
  syntax:
    content: public WriteableBitmap(UIElement element, Transform transform)
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "\nThe desired element to be rendered within the bitmap.\n"
    - id: transform
      type: System.Windows.Media.Transform
      description: "\nThe transform the user wants to apply to the element as the last step before \ndrawing into the bitmap. This is particularly interesting for you if you want \nthe bitmap to respect its transform. This value can be null.\n"
    content.vb: Public Sub New(element As UIElement, transform As Transform)
  overload: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  id: CreateAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: CreateAsync(UIElement, Transform)
  nameWithType: WriteableBitmap.CreateAsync(UIElement, Transform)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync(System.Windows.UIElement, System.Windows.Media.Transform)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: CreateAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 124
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  syntax:
    content: public static async Task<WriteableBitmap> CreateAsync(UIElement element, Transform transform)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: transform
      type: System.Windows.Media.Transform
    return:
      type: System.Threading.Tasks.Task{System.Windows.Media.Imaging.WriteableBitmap}
    content.vb: Public Shared Function CreateAsync(element As UIElement, transform As Transform) As Task(Of WriteableBitmap)
  overload: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
  commentId: P:System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
  id: UseSilverlightCompatibilityMode
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: UseSilverlightCompatibilityMode
  nameWithType: WriteableBitmap.UseSilverlightCompatibilityMode
  fullName: System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: UseSilverlightCompatibilityMode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 144
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nGets or sets a value indicating if <xref href=\"System.Windows.Media.Imaging.WriteableBitmap\" data-throw-if-not-resolved=\"false\"></xref> should follow Silverlight&apos;s behavior \nto set its <xref href=\"System.Windows.Media.Imaging.WriteableBitmap.Pixels\" data-throw-if-not-resolved=\"false\"></xref>. In Silverlight, a pixel is stored in an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> in the format \n<strong>BGRA</strong>, while OpenSilver stores it in the <strong>RGBA</strong> format. In other words, this means the first \nand third bytes are swapped.\n"
  example: []
  syntax:
    content: public static bool UseSilverlightCompatibilityMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\nA flag that indicates if the Silverlight compatibility mode is enabled. The default value is false.\n"
    content.vb: Public Shared Property UseSilverlightCompatibilityMode As Boolean
  overload: System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize
  id: WaitToInitialize
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: WaitToInitialize()
  nameWithType: WriteableBitmap.WaitToInitialize()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: WaitToInitialize
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 149
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nUser must call WaitToInitialize after instantiation in order to load the buffer\n"
  example: []
  syntax:
    content: public Task WaitToInitialize()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function WaitToInitialize As Task
  overload: System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.Pixels
  commentId: P:System.Windows.Media.Imaging.WriteableBitmap.Pixels
  id: Pixels
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: Pixels
  nameWithType: WriteableBitmap.Pixels
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Pixels
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Pixels
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 157
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nGets an array representing the 2-D texture of the bitmap.\n"
  example: []
  syntax:
    content: public int[] Pixels { get; }
    parameters: []
    return:
      type: System.Int32[]
      description: "\nAn array of integers representing the 2-D texture of the bitmap.\n"
    content.vb: Public ReadOnly Property Pixels As Integer()
  overload: System.Windows.Media.Imaging.WriteableBitmap.Pixels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)
  id: Render(System.Windows.UIElement,System.Windows.Media.Transform)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: Render(UIElement, Transform)
  nameWithType: WriteableBitmap.Render(UIElement, Transform)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement, System.Windows.Media.Transform)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Render
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 173
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nRenders an element within the bitmap.\n"
  example: []
  syntax:
    content: public void Render(UIElement element, Transform transform)
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "\nThe element to be rendered within the bitmap.\n"
    - id: transform
      type: System.Windows.Media.Transform
      description: "\nThe transform to apply to the element before drawing into the bitmap. \nIf an empty transform is supplied, the bits representing the element \nshow up at the same offset as if they were placed within their parent.\n"
    content.vb: Public Sub Render(element As UIElement, transform As Transform)
  overload: System.Windows.Media.Imaging.WriteableBitmap.Render*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">element</code> is null.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.RenderAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.RenderAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  id: RenderAsync(System.Windows.UIElement,System.Windows.Media.Transform)
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: RenderAsync(UIElement, Transform)
  nameWithType: WriteableBitmap.RenderAsync(UIElement, Transform)
  fullName: System.Windows.Media.Imaging.WriteableBitmap.RenderAsync(System.Windows.UIElement, System.Windows.Media.Transform)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RenderAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 183
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  syntax:
    content: public Task RenderAsync(UIElement element, Transform transform)
    parameters:
    - id: element
      type: System.Windows.UIElement
    - id: transform
      type: System.Windows.Media.Transform
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RenderAsync(element As UIElement, transform As Transform) As Task
  overload: System.Windows.Media.Imaging.WriteableBitmap.RenderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Imaging.WriteableBitmap.Invalidate
  commentId: M:System.Windows.Media.Imaging.WriteableBitmap.Invalidate
  id: Invalidate
  parent: System.Windows.Media.Imaging.WriteableBitmap
  langs:
  - csharp
  - vb
  name: Invalidate()
  nameWithType: WriteableBitmap.Invalidate()
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Invalidate()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Invalidate
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Imaging/WriteableBitmap.cs
    startLine: 196
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Imaging
  summary: "\nRequests a draw or redraw of the entire bitmap.\n"
  example: []
  syntax:
    content: public void Invalidate()
    content.vb: Public Sub Invalidate
  overload: System.Windows.Media.Imaging.WriteableBitmap.Invalidate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Media.Imaging.BitmapSource
  commentId: T:System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Imaging
  commentId: N:System.Windows.Media.Imaging
  name: System.Windows.Media.Imaging
  nameWithType: System.Windows.Media.Imaging
  fullName: System.Windows.Media.Imaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Media.ImageSource
  commentId: T:System.Windows.Media.ImageSource
  parent: System.Windows.Media
  name: ImageSource
  nameWithType: ImageSource
  fullName: System.Windows.Media.ImageSource
- uid: System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
  commentId: M:System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
  parent: System.Windows.Media.Imaging.BitmapSource
  isExternal: true
  name: SetSource(Stream)
  nameWithType: BitmapSource.SetSource(Stream)
  fullName: System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
  spec.csharp:
  - uid: System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
    name: SetSource
    nameWithType: BitmapSource.SetSource
    fullName: System.Windows.Media.Imaging.BitmapSource.SetSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)
    name: SetSource
    nameWithType: BitmapSource.SetSource
    fullName: System.Windows.Media.Imaging.BitmapSource.SetSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty
  commentId: F:System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty
  parent: System.Windows.Media.Imaging.BitmapSource
  name: PixelHeightProperty
  nameWithType: BitmapSource.PixelHeightProperty
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty
- uid: System.Windows.Media.Imaging.BitmapSource.PixelHeight
  commentId: P:System.Windows.Media.Imaging.BitmapSource.PixelHeight
  parent: System.Windows.Media.Imaging.BitmapSource
  name: PixelHeight
  nameWithType: BitmapSource.PixelHeight
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelHeight
- uid: System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty
  commentId: F:System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty
  parent: System.Windows.Media.Imaging.BitmapSource
  name: PixelWidthProperty
  nameWithType: BitmapSource.PixelWidthProperty
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty
- uid: System.Windows.Media.Imaging.BitmapSource.PixelWidth
  commentId: P:System.Windows.Media.Imaging.BitmapSource.PixelWidth
  parent: System.Windows.Media.Imaging.BitmapSource
  name: PixelWidth
  nameWithType: BitmapSource.PixelWidth
  fullName: System.Windows.Media.Imaging.BitmapSource.PixelWidth
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  commentId: M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: DependencyObject.OnPropertyChanged
    fullName: System.Windows.DependencyObject.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Dispatcher
  commentId: P:System.Windows.DependencyObject.Dispatcher
  parent: System.Windows.DependencyObject
  name: Dispatcher
  nameWithType: DependencyObject.Dispatcher
  fullName: System.Windows.DependencyObject.Dispatcher
- uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnAttachedToVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
    name: INTERNAL_OnAttachedToVisualTree
    nameWithType: DependencyObject.INTERNAL_OnAttachedToVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnAttachedToVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  commentId: M:System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  parent: System.Windows.DependencyObject
  name: INTERNAL_OnDetachedFromVisualTree()
  nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree()
  spec.csharp:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
    name: INTERNAL_OnDetachedFromVisualTree
    nameWithType: DependencyObject.INTERNAL_OnDetachedFromVisualTree
    fullName: System.Windows.DependencyObject.INTERNAL_OnDetachedFromVisualTree
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CheckAccess
  commentId: M:System.Windows.DependencyObject.CheckAccess
  parent: System.Windows.DependencyObject
  name: CheckAccess()
  nameWithType: DependencyObject.CheckAccess()
  fullName: System.Windows.DependencyObject.CheckAccess()
  spec.csharp:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CheckAccess
    name: CheckAccess
    nameWithType: DependencyObject.CheckAccess
    fullName: System.Windows.DependencyObject.CheckAccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: DependencyObject.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: DependencyObject.GetAnimationBaseValue
    fullName: System.Windows.DependencyObject.GetAnimationBaseValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Media
  commentId: N:System.Windows.Media
  name: System.Windows.Media
  nameWithType: System.Windows.Media
  fullName: System.Windows.Media
- uid: System.Windows.Media.Imaging.WriteableBitmap
  commentId: T:System.Windows.Media.Imaging.WriteableBitmap
  name: WriteableBitmap
  nameWithType: WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Windows.Media.Imaging.WriteableBitmap.#ctor*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.#ctor
  name: WriteableBitmap
  nameWithType: WriteableBitmap.WriteableBitmap
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WriteableBitmap
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.CreateAsync
  name: CreateAsync
  nameWithType: WriteableBitmap.CreateAsync
  fullName: System.Windows.Media.Imaging.WriteableBitmap.CreateAsync
- uid: System.Threading.Tasks.Task{System.Windows.Media.Imaging.WriteableBitmap}
  commentId: T:System.Threading.Tasks.Task{System.Windows.Media.Imaging.WriteableBitmap}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WriteableBitmap>
  nameWithType: Task<WriteableBitmap>
  fullName: System.Threading.Tasks.Task<System.Windows.Media.Imaging.WriteableBitmap>
  nameWithType.vb: Task(Of WriteableBitmap)
  fullName.vb: System.Threading.Tasks.Task(Of System.Windows.Media.Imaging.WriteableBitmap)
  name.vb: Task(Of WriteableBitmap)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.Imaging.WriteableBitmap
    name: WriteableBitmap
    nameWithType: WriteableBitmap
    fullName: System.Windows.Media.Imaging.WriteableBitmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Media.Imaging.WriteableBitmap
    name: WriteableBitmap
    nameWithType: WriteableBitmap
    fullName: System.Windows.Media.Imaging.WriteableBitmap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Windows.UIElement
  commentId: T:System.Windows.UIElement
  parent: System.Windows
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Media.Transform
  commentId: T:System.Windows.Media.Transform
  parent: System.Windows.Media
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.Imaging.WriteableBitmap.Pixels
  commentId: P:System.Windows.Media.Imaging.WriteableBitmap.Pixels
  isExternal: true
- uid: System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
  name: UseSilverlightCompatibilityMode
  nameWithType: WriteableBitmap.UseSilverlightCompatibilityMode
  fullName: System.Windows.Media.Imaging.WriteableBitmap.UseSilverlightCompatibilityMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize
  name: WaitToInitialize
  nameWithType: WriteableBitmap.WaitToInitialize
  fullName: System.Windows.Media.Imaging.WriteableBitmap.WaitToInitialize
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Windows.Media.Imaging.WriteableBitmap.Pixels*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.Pixels
  name: Pixels
  nameWithType: WriteableBitmap.Pixels
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Pixels
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Media.Imaging.WriteableBitmap.Render*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.Render
  name: Render
  nameWithType: WriteableBitmap.Render
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Render
- uid: System.Windows.Media.Imaging.WriteableBitmap.RenderAsync*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.RenderAsync
  name: RenderAsync
  nameWithType: WriteableBitmap.RenderAsync
  fullName: System.Windows.Media.Imaging.WriteableBitmap.RenderAsync
- uid: System.Windows.Media.Imaging.WriteableBitmap.Invalidate*
  commentId: Overload:System.Windows.Media.Imaging.WriteableBitmap.Invalidate
  name: Invalidate
  nameWithType: WriteableBitmap.Invalidate
  fullName: System.Windows.Media.Imaging.WriteableBitmap.Invalidate
