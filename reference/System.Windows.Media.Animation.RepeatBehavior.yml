### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.RepeatBehavior
  commentId: T:System.Windows.Media.Animation.RepeatBehavior
  id: RepeatBehavior
  parent: System.Windows.Media.Animation
  children:
  - System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  - System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)
  - System.Windows.Media.Animation.RepeatBehavior.Count
  - System.Windows.Media.Animation.RepeatBehavior.Duration
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.Forever
  - System.Windows.Media.Animation.RepeatBehavior.GetHashCode
  - System.Windows.Media.Animation.RepeatBehavior.HasCount
  - System.Windows.Media.Animation.RepeatBehavior.HasDuration
  - System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Animation.RepeatBehavior.ToString
  - System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)
  langs:
  - csharp
  - vb
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: RepeatBehavior
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 22
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nDescribes how a <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> repeats its simple duration.\n"
  example: []
  syntax:
    content: 'public struct RepeatBehavior : IFormattable'
    content.vb: >-
      Public Structure RepeatBehavior
          Implements IFormattable
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: RepeatBehavior(Double)
  nameWithType: RepeatBehavior.RepeatBehavior(Double)
  fullName: System.Windows.Media.Animation.RepeatBehavior.RepeatBehavior(System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 39
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nstructure with the specified iteration count.\n"
  example: []
  syntax:
    content: public RepeatBehavior(double count)
    parameters:
    - id: count
      type: System.Double
      description: "\nA number greater than or equal to 0 that specifies the number of iterations for\nan animation.\n"
    content.vb: Public Sub New(count As Double)
  overload: System.Windows.Media.Animation.RepeatBehavior.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\ncount evaluates to infinity, a value that is not a number, or is negative.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: RepeatBehavior(TimeSpan)
  nameWithType: RepeatBehavior.RepeatBehavior(TimeSpan)
  fullName: System.Windows.Media.Animation.RepeatBehavior.RepeatBehavior(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 64
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nstructure with the specified repeat duration.\n"
  example: []
  syntax:
    content: public RepeatBehavior(TimeSpan duration)
    parameters:
    - id: duration
      type: System.TimeSpan
      description: "\nThe total length of time that the <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> should\nplay (its active duration).\n"
    content.vb: Public Sub New(duration As TimeSpan)
  overload: System.Windows.Media.Animation.RepeatBehavior.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\nduration evaluates to a negative number.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.Forever
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Forever
  id: Forever
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Forever
  nameWithType: RepeatBehavior.Forever
  fullName: System.Windows.Media.Animation.RepeatBehavior.Forever
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Forever
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 80
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets a <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref> that specifies an infinite\nnumber of repetitions.\n"
  example: []
  syntax:
    content: public static readonly RepeatBehavior Forever { get; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.RepeatBehavior
    content.vb: Public Shared ReadOnly Property Forever As RepeatBehavior
  overload: System.Windows.Media.Animation.RepeatBehavior.Forever*
  modifiers.csharp:
  - public
  - static
  - readonly
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.Count
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Count
  id: Count
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RepeatBehavior.Count
  fullName: System.Windows.Media.Animation.RepeatBehavior.Count
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Count
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 98
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets the number of times a <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> should repeat.\n"
  example: []
  syntax:
    content: public readonly double Count { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Count As Double
  overload: System.Windows.Media.Animation.RepeatBehavior.Count*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThis <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref> describes a repeat duration,\nnot an iteration count.\n"
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.Duration
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.Duration
  id: Duration
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: RepeatBehavior.Duration
  fullName: System.Windows.Media.Animation.RepeatBehavior.Duration
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Duration
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 122
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets the total length of time a <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> should\nplay.\n"
  example: []
  syntax:
    content: public readonly TimeSpan Duration { get; }
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nThe total length of time a timeline should play.\n"
    content.vb: Public ReadOnly Property Duration As TimeSpan
  overload: System.Windows.Media.Animation.RepeatBehavior.Duration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThis <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref> describes an iteration count,\nnot a repeat duration.\n"
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.HasCount
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.HasCount
  id: HasCount
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: HasCount
  nameWithType: RepeatBehavior.HasCount
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasCount
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HasCount
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 139
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets a value that indicates whether the repeat behavior has a specified iteration\ncount.\n"
  example: []
  syntax:
    content: public readonly bool HasCount { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasCount As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.HasCount*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.HasDuration
  commentId: P:System.Windows.Media.Animation.RepeatBehavior.HasDuration
  id: HasDuration
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: HasDuration
  nameWithType: RepeatBehavior.HasDuration
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasDuration
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HasDuration
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 154
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nGets a value that indicates whether the repeat behavior has a specified repeat\nduration.\n"
  example: []
  syntax:
    content: public readonly bool HasDuration { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if the instance represents a repeat duration; otherwise, false.\n"
    content.vb: Public ReadOnly Property HasDuration As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.HasDuration*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Equals(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 172
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two specified <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nvalues are equal.\n"
  example: []
  syntax:
    content: public static bool Equals(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior1 are equal to that\nof repeatBehavior2; otherwise, false.\n"
    content.vb: Public Shared Function Equals(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RepeatBehavior.Equals(Object)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 188
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the specified object is equal to this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Equals(object value)
    parameters:
    - id: value
      type: System.Object
      description: "\nThe object to compare with this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Boolean
      description: "\ntrue if value is a <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref> that represents\nthe same repeat behavior as this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>;\notherwise, false.\n"
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  id: Equals(System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equals(RepeatBehavior)
  nameWithType: RepeatBehavior.Equals(RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Equals
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 211
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nReturns a value that indicates whether the specified <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nis equal to this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Equals(RepeatBehavior repeatBehavior)
    parameters:
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "\nThe value to compare to this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior are equal to this\n<xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, false.\n"
    content.vb: Public Function Equals(repeatBehavior As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.GetHashCode
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.GetHashCode
  id: GetHashCode
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RepeatBehavior.GetHashCode()
  fullName: System.Windows.Media.Animation.RepeatBehavior.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetHashCode
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 243
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nReturns the hash code of this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: System.Windows.Media.Animation.RepeatBehavior.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.Animation.RepeatBehavior.ToString
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.ToString
  id: ToString
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RepeatBehavior.ToString()
  fullName: System.Windows.Media.Animation.RepeatBehavior.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 273
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nReturns a string representation of this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string representation of this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: System.Windows.Media.Animation.RepeatBehavior.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: RepeatBehavior.ToString(IFormatProvider)
  fullName: System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 288
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nReturns a string representation of this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nwith the specified format.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\nThe format used to construct the return value.\n"
    return:
      type: System.String
      description: "\nA string representation of this <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: System.Windows.Media.Animation.RepeatBehavior.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  nameWithType: RepeatBehavior.IFormattable.ToString(String, IFormatProvider)
  fullName: System.Windows.Media.Animation.RepeatBehavior.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.IFormattable.ToString
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 299
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\n\n"
  example: []
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: ''
    - id: formatProvider
      type: System.IFormatProvider
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Function System.IFormattable.ToString(format As String, formatProvider As IFormatProvider) As String Implements IFormattable.ToString
  overload: System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: RepeatBehavior.System.IFormattable.ToString(String, IFormatProvider)
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Equality(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Equality(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equality(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Equality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 348
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two specified <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref>\nvalues are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if both the type and repeat behavior of repeatBehavior1 are equal to that\nof repeatBehavior2; otherwise, false.\n"
    content.vb: Public Shared Operator =(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  commentId: M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  id: op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.RepeatBehavior
  langs:
  - csharp
  - vb
  name: Inequality(RepeatBehavior, RepeatBehavior)
  nameWithType: RepeatBehavior.Inequality(RepeatBehavior, RepeatBehavior)
  fullName: System.Windows.Media.Animation.RepeatBehavior.Inequality(System.Windows.Media.Animation.RepeatBehavior, System.Windows.Media.Animation.RepeatBehavior)
  type: Operator
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: op_Inequality
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Media.Animation/RepeatBehavior.cs
    startLine: 363
  assemblies:
  - OpenSilver
  namespace: System.Windows.Media.Animation
  summary: "\nIndicates whether the two <xref href=\"System.Windows.Media.Animation.RepeatBehavior\" data-throw-if-not-resolved=\"false\"></xref> values\nare not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(RepeatBehavior repeatBehavior1, RepeatBehavior repeatBehavior2)
    parameters:
    - id: repeatBehavior1
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The first value to compare.
    - id: repeatBehavior2
      type: System.Windows.Media.Animation.RepeatBehavior
      description: The second value to compare.
    return:
      type: System.Boolean
      description: "\ntrue if repeatBehavior1 and repeatBehavior2 are different types or the repeat\nbehavior properties are not equal; otherwise, false.\n"
    content.vb: Public Shared Operator <>(repeatBehavior1 As RepeatBehavior, repeatBehavior2 As RepeatBehavior) As Boolean
  overload: System.Windows.Media.Animation.RepeatBehavior.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Media.Animation.Timeline
  commentId: T:System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation
  commentId: N:System.Windows.Media.Animation
  name: System.Windows.Media.Animation
  nameWithType: System.Windows.Media.Animation
  fullName: System.Windows.Media.Animation
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Animation.RepeatBehavior
  commentId: T:System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Windows.Media.Animation.RepeatBehavior.#ctor*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.#ctor
  name: RepeatBehavior
  nameWithType: RepeatBehavior.RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior.RepeatBehavior
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.RepeatBehavior.Forever*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Forever
  name: Forever
  nameWithType: RepeatBehavior.Forever
  fullName: System.Windows.Media.Animation.RepeatBehavior.Forever
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Media.Animation.RepeatBehavior.Count*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Count
  name: Count
  nameWithType: RepeatBehavior.Count
  fullName: System.Windows.Media.Animation.RepeatBehavior.Count
- uid: System.Windows.Media.Animation.RepeatBehavior.Duration*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Duration
  name: Duration
  nameWithType: RepeatBehavior.Duration
  fullName: System.Windows.Media.Animation.RepeatBehavior.Duration
- uid: System.Windows.Media.Animation.RepeatBehavior.HasCount*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.HasCount
  name: HasCount
  nameWithType: RepeatBehavior.HasCount
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasCount
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.RepeatBehavior.HasDuration*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.HasDuration
  name: HasDuration
  nameWithType: RepeatBehavior.HasDuration
  fullName: System.Windows.Media.Animation.RepeatBehavior.HasDuration
- uid: System.Windows.Media.Animation.RepeatBehavior.Equals*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.Equals
  name: Equals
  nameWithType: RepeatBehavior.Equals
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equals
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.RepeatBehavior.GetHashCode*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.GetHashCode
  name: GetHashCode
  nameWithType: RepeatBehavior.GetHashCode
  fullName: System.Windows.Media.Animation.RepeatBehavior.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.RepeatBehavior.ToString*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.ToString
  name: ToString
  nameWithType: RepeatBehavior.ToString
  fullName: System.Windows.Media.Animation.RepeatBehavior.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString
  name: IFormattable.ToString
  nameWithType: RepeatBehavior.IFormattable.ToString
  fullName: System.Windows.Media.Animation.RepeatBehavior.System.IFormattable.ToString
  nameWithType.vb: RepeatBehavior.System.IFormattable.ToString
  name.vb: System.IFormattable.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Equality*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.op_Equality
  name: Equality
  nameWithType: RepeatBehavior.Equality
  fullName: System.Windows.Media.Animation.RepeatBehavior.Equality
- uid: System.Windows.Media.Animation.RepeatBehavior.op_Inequality*
  commentId: Overload:System.Windows.Media.Animation.RepeatBehavior.op_Inequality
  name: Inequality
  nameWithType: RepeatBehavior.Inequality
  fullName: System.Windows.Media.Animation.RepeatBehavior.Inequality
