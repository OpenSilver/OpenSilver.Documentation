### YamlMime:ManagedReference
items:
- uid: System.Windows.Browser.ScriptObject
  commentId: T:System.Windows.Browser.ScriptObject
  id: ScriptObject
  parent: System.Windows.Browser
  children:
  - System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  - System.Windows.Browser.ScriptObject.ConvertTo``1
  - System.Windows.Browser.ScriptObject.Dispatcher
  - System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  - System.Windows.Browser.ScriptObject.GetProperty(System.String)
  - System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  - System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  - System.Windows.Browser.ScriptObject.ManagedObject
  - System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  - System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  - System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: System.Windows.Browser.ScriptObject
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ScriptObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 28
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nDefines the core behavior for the <xref href=\"System.Windows.Browser.HtmlObject\" data-throw-if-not-resolved=\"false\"></xref> class, and\nprovides a base class for browser Document Object Model (DOM) access types.\n"
  example: []
  syntax:
    content: 'public class ScriptObject : IDynamicMetaObjectProvider'
    content.vb: >-
      Public Class ScriptObject
          Implements IDynamicMetaObjectProvider
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Browser.HtmlObject
  - System.Windows.Browser.ScriptObjectCollection
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Browser.ScriptObject.Dispatcher
  commentId: P:System.Windows.Browser.ScriptObject.Dispatcher
  id: Dispatcher
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: Dispatcher
  nameWithType: ScriptObject.Dispatcher
  fullName: System.Windows.Browser.ScriptObject.Dispatcher
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Dispatcher
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nGets an instance of the dispatcher.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public Dispatcher Dispatcher { get; }
    parameters: []
    return:
      type: System.Windows.Threading.Dispatcher
      description: "\nThe dispatcher associated with the user interface (UI) thread.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property Dispatcher As Dispatcher
  overload: System.Windows.Browser.ScriptObject.Dispatcher*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.ScriptObject.ManagedObject
  commentId: P:System.Windows.Browser.ScriptObject.ManagedObject
  id: ManagedObject
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: ManagedObject
  nameWithType: ScriptObject.ManagedObject
  fullName: System.Windows.Browser.ScriptObject.ManagedObject
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ManagedObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 62
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nGets the underlying managed object reference of the <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public object ManagedObject { get; }
    parameters: []
    return:
      type: System.Object
      description: "\nA managed object reference if the current <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref>\nwraps a managed type; otherwise, null.\n"
    content.vb: >-
      <NotImplemented>

      Public ReadOnly Property ManagedObject As Object
  overload: System.Windows.Browser.ScriptObject.ManagedObject*
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Browser.ScriptObject.ConvertTo``1
  commentId: M:System.Windows.Browser.ScriptObject.ConvertTo``1
  id: ConvertTo``1
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: ConvertTo<T>()
  nameWithType: ScriptObject.ConvertTo<T>()
  fullName: System.Windows.Browser.ScriptObject.ConvertTo<T>()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertTo
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 91
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nConverts the current scriptable object to a specified type.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public T ConvertTo<T>()
    typeParameters:
    - id: T
      description: "\nThe type to convert the current scriptable object to.\n"
    return:
      type: '{T}'
      description: "\nAn object of type T.\n"
    content.vb: >-
      <NotImplemented>

      Public Function ConvertTo(Of T) As T
  overload: System.Windows.Browser.ScriptObject.ConvertTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe conversion failed or is not supported.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: ScriptObject.ConvertTo(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Windows.Browser.ScriptObject.ConvertTo(Of T)()
  name.vb: ConvertTo(Of T)()
- uid: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  commentId: M:System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  id: GetProperty(System.Int32)
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: GetProperty(Int32)
  nameWithType: ScriptObject.GetProperty(Int32)
  fullName: System.Windows.Browser.ScriptObject.GetProperty(System.Int32)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 108
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nGets the value of a property that is identified by ordinal number on the current\nscriptable object.\n"
  example: []
  syntax:
    content: public object GetProperty(int index)
    parameters:
    - id: index
      type: System.Int32
      description: "\nThe ordinal number of the property.\n"
    return:
      type: System.Object
      description: "\nA null reference if the property does not exist or\nif the underlying <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref> is a managed type.\n"
    content.vb: Public Function GetProperty(index As Integer) As Object
  overload: System.Windows.Browser.ScriptObject.GetProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Browser.ScriptObject.GetProperty(System.String)
  commentId: M:System.Windows.Browser.ScriptObject.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: GetProperty(String)
  nameWithType: ScriptObject.GetProperty(String)
  fullName: System.Windows.Browser.ScriptObject.GetProperty(System.String)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 130
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nGets the value of a property that is identified by name on the current scriptable\nobject.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public virtual object GetProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the property.\n"
    return:
      type: System.Object
      description: "\nA null reference if the property does not exist or\nif the underlying <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref> is a managed type.\n"
    content.vb: >-
      <NotImplemented>

      Public Overridable Function GetProperty(name As String) As Object
  overload: System.Windows.Browser.ScriptObject.GetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nname is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nname is an empty string.-or-name contains an embedded null character (\\0).\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  commentId: M:System.Windows.Browser.ScriptObject.Invoke(System.String,System.Object[])
  id: Invoke(System.String,System.Object[])
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: Invoke(String, Object[])
  nameWithType: ScriptObject.Invoke(String, Object[])
  fullName: System.Windows.Browser.ScriptObject.Invoke(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Invoke
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 160
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nInvokes a method on the current scriptable object, and optionally passes in one\nor more method parameters.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public virtual object Invoke(string name, params object[] args)
    parameters:
    - id: name
      type: System.String
      description: "\nThe method to invoke.\n"
    - id: args
      type: System.Object[]
      description: "\nParameters to be passed to the method.\n"
    return:
      type: System.Object
      description: "\nAn object that represents the return value from the underlying JavaScript method.\n"
    content.vb: >-
      <NotImplemented>

      Public Overridable Function Invoke(name As String, ParamArray args As Object()) As Object
  overload: System.Windows.Browser.ScriptObject.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nname is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nname is an empty string.-or-name contains an embedded null character (\\0).-or-The\nmethod does not exist or is not scriptable.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe underlying method invocation results in an error. The .NET Framework attempts\nto return the error text that is associated with the error.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: ScriptObject.Invoke(String, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Windows.Browser.ScriptObject.Invoke(System.String, System.Object())
  name.vb: Invoke(String, Object())
- uid: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  commentId: M:System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  id: InvokeSelf(System.Object[])
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: InvokeSelf(Object[])
  nameWithType: ScriptObject.InvokeSelf(Object[])
  fullName: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object[])
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: InvokeSelf
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 187
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nInvokes the current <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref> and assumes that it represents\na JavaScript method.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public virtual object InvokeSelf(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
      description: "\nParameters to be passed to the underlying JavaScript method.\n"
    return:
      type: System.Object
      description: "\nAn object that represents the return value from the underlying JavaScript method.\n"
    content.vb: >-
      <NotImplemented>

      Public Overridable Function InvokeSelf(ParamArray args As Object()) As Object
  overload: System.Windows.Browser.ScriptObject.InvokeSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nname is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nname is an empty string.-or-name contains an embedded null character (\\0).-or-The\nmethod does not exist or is not scriptable.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThe current <xref href=\"System.Windows.Browser.ScriptObject\" data-throw-if-not-resolved=\"false\"></xref> is not a method.-or-The underlying\nmethod invocation results in an error.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  nameWithType.vb: ScriptObject.InvokeSelf(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Windows.Browser.ScriptObject.InvokeSelf(System.Object())
  name.vb: InvokeSelf(Object())
- uid: System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  commentId: M:System.Windows.Browser.ScriptObject.SetProperty(System.Int32,System.Object)
  id: SetProperty(System.Int32,System.Object)
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: SetProperty(Int32, Object)
  nameWithType: ScriptObject.SetProperty(Int32, Object)
  fullName: System.Windows.Browser.ScriptObject.SetProperty(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 213
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nSets the value of a property that is identified by ordinal number on the current\nscriptable object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public void SetProperty(int index, object value)
    parameters:
    - id: index
      type: System.Int32
      description: "\nThe ordinal number of the property.\n"
    - id: value
      type: System.Object
      description: "\nThe value to set the property to.\n"
    content.vb: >-
      <NotImplemented>

      Public Sub SetProperty(index As Integer, value As Object)
  overload: System.Windows.Browser.ScriptObject.SetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nindex is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nindex identifies an empty string.\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nA type mismatch exists between the supplied type and the target property.-or-The\nproperty is not settable.-or-All other failures.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  commentId: M:System.Windows.Browser.ScriptObject.SetProperty(System.String,System.Object)
  id: SetProperty(System.String,System.Object)
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: SetProperty(String, Object)
  nameWithType: ScriptObject.SetProperty(String, Object)
  fullName: System.Windows.Browser.ScriptObject.SetProperty(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetProperty
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 237
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nSets a property that is identified by name on the current scriptable object.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      public virtual void SetProperty(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: "\nThe name of the property.\n"
    - id: value
      type: System.Object
      description: "\nThe value to set the property to.\n"
    content.vb: >-
      <NotImplemented>

      Public Overridable Sub SetProperty(name As String, value As Object)
  overload: System.Windows.Browser.ScriptObject.SetProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nname is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nname is an empty string.-or-name contains an embedded null character (\\0).\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nA type mismatch exists between the supplied type and the target property.-or-The\nproperty is not settable.-or-All other failures.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  commentId: M:System.Windows.Browser.ScriptObject.ConvertTo(System.Type,System.Boolean)
  id: ConvertTo(System.Type,System.Boolean)
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: ConvertTo(Type, Boolean)
  nameWithType: ScriptObject.ConvertTo(Type, Boolean)
  fullName: System.Windows.Browser.ScriptObject.ConvertTo(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ConvertTo
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 281
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nConverts the current scriptable object to a specified type, with serialization\nsupport.\n"
  example: []
  syntax:
    content: >-
      [NotImplemented]

      protected virtual object ConvertTo(Type targetType, bool allowSerialization)
    parameters:
    - id: targetType
      type: System.Type
      description: "\nThe type to convert the current scriptable object to.\n"
    - id: allowSerialization
      type: System.Boolean
      description: "\nA flag which enables the current scriptable object to be serialized.\n"
    return:
      type: System.Object
      description: "\nAn object of type targetType.\n"
    content.vb: >-
      <NotImplemented>

      Protected Overridable Function ConvertTo(targetType As Type, allowSerialization As Boolean) As Object
  overload: System.Windows.Browser.ScriptObject.ConvertTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThe conversion failed or is not supported.\n"
  attributes:
  - type: OpenSilver.NotImplementedAttribute
    ctor: OpenSilver.NotImplementedAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Windows.Browser.ScriptObject
  langs:
  - csharp
  - vb
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: ScriptObject.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Windows.Browser.ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Browser/WORKINPROGRESS/ScriptObject.cs
    startLine: 297
  assemblies:
  - OpenSilver
  namespace: System.Windows.Browser
  summary: "\nReturns the <xref href=\"System.Dynamic.DynamicMetaObject\" data-throw-if-not-resolved=\"false\"></xref> responsible for binding operations\nperformed on this object.\n"
  example: []
  syntax:
    content: DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
      description: "\nThe expression tree representation of the runtime value.\n"
    return:
      type: System.Dynamic.DynamicMetaObject
      description: "\nThe <xref href=\"System.Dynamic.DynamicMetaObject\" data-throw-if-not-resolved=\"false\"></xref> to bind this object.\n"
    content.vb: Function System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(parameter As Expression) As DynamicMetaObject Implements IDynamicMetaObjectProvider.GetMetaObject
  overload: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
references:
- uid: System.Windows.Browser.HtmlObject
  commentId: T:System.Windows.Browser.HtmlObject
  parent: System.Windows.Browser
  name: HtmlObject
  nameWithType: HtmlObject
  fullName: System.Windows.Browser.HtmlObject
- uid: System.Windows.Browser
  commentId: N:System.Windows.Browser
  name: System.Windows.Browser
  nameWithType: System.Windows.Browser
  fullName: System.Windows.Browser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Windows.Browser.ScriptObject.Dispatcher*
  commentId: Overload:System.Windows.Browser.ScriptObject.Dispatcher
  name: Dispatcher
  nameWithType: ScriptObject.Dispatcher
  fullName: System.Windows.Browser.ScriptObject.Dispatcher
- uid: System.Windows.Threading.Dispatcher
  commentId: T:System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
- uid: System.Windows.Browser.ScriptObject
  commentId: T:System.Windows.Browser.ScriptObject
  parent: System.Windows.Browser
  name: ScriptObject
  nameWithType: ScriptObject
  fullName: System.Windows.Browser.ScriptObject
- uid: System.Windows.Browser.ScriptObject.ManagedObject*
  commentId: Overload:System.Windows.Browser.ScriptObject.ManagedObject
  name: ManagedObject
  nameWithType: ScriptObject.ManagedObject
  fullName: System.Windows.Browser.ScriptObject.ManagedObject
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.Windows.Browser.ScriptObject.ConvertTo*
  commentId: Overload:System.Windows.Browser.ScriptObject.ConvertTo
  name: ConvertTo
  nameWithType: ScriptObject.ConvertTo
  fullName: System.Windows.Browser.ScriptObject.ConvertTo
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Windows.Browser.ScriptObject.GetProperty*
  commentId: Overload:System.Windows.Browser.ScriptObject.GetProperty
  name: GetProperty
  nameWithType: ScriptObject.GetProperty
  fullName: System.Windows.Browser.ScriptObject.GetProperty
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.Windows.Browser.ScriptObject.Invoke*
  commentId: Overload:System.Windows.Browser.ScriptObject.Invoke
  name: Invoke
  nameWithType: ScriptObject.Invoke
  fullName: System.Windows.Browser.ScriptObject.Invoke
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Windows.Browser.ScriptObject.InvokeSelf*
  commentId: Overload:System.Windows.Browser.ScriptObject.InvokeSelf
  name: InvokeSelf
  nameWithType: ScriptObject.InvokeSelf
  fullName: System.Windows.Browser.ScriptObject.InvokeSelf
- uid: System.Windows.Browser.ScriptObject.SetProperty*
  commentId: Overload:System.Windows.Browser.ScriptObject.SetProperty
  name: SetProperty
  nameWithType: ScriptObject.SetProperty
  fullName: System.Windows.Browser.ScriptObject.SetProperty
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Dynamic.DynamicMetaObject
  commentId: T:System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: true
  name: DynamicMetaObject
  nameWithType: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  commentId: Overload:System.Windows.Browser.ScriptObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject
  name: IDynamicMetaObjectProvider.GetMetaObject
  nameWithType: ScriptObject.IDynamicMetaObjectProvider.GetMetaObject
  fullName: System.Windows.Browser.ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  nameWithType.vb: ScriptObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
- uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
