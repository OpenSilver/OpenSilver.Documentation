### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ItemsControlExtensions
  commentId: T:System.Windows.Controls.ItemsControlExtensions
  id: ItemsControlExtensions
  parent: System.Windows.Controls
  children:
  - System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)
  - System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)
  langs:
  - csharp
  - vb
  name: ItemsControlExtensions
  nameWithType: ItemsControlExtensions
  fullName: System.Windows.Controls.ItemsControlExtensions
  type: Class
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ItemsControlExtensions
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 18
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nProvides useful extensions to ItemsControl instances.\n"
  example: []
  syntax:
    content: public static class ItemsControlExtensions
    content.vb: Public Module ItemsControlExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)
  id: GetItemsHost(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetItemsHost(ItemsControl)
  nameWithType: ItemsControlExtensions.GetItemsHost(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsHost(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetItemsHost
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 31
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the Panel that contains the containers of an ItemsControl.\n"
  example: []
  syntax:
    content: public static Panel GetItemsHost(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: System.Windows.Controls.Panel
      description: "\nThe Panel that contains the containers of an ItemsControl, or null\nif the Panel could not be found.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetItemsHost(control As ItemsControl) As Panel
  overload: System.Windows.Controls.ItemsControlExtensions.GetItemsHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)
  id: GetScrollHost(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetScrollHost(ItemsControl)
  nameWithType: ItemsControlExtensions.GetScrollHost(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetScrollHost(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetScrollHost
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 70
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGets the ScrollViewer that contains the containers of an\nItemsControl.\n"
  example: []
  syntax:
    content: public static ScrollViewer GetScrollHost(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: System.Windows.Controls.ScrollViewer
      description: "\nThe ScrollViewer that contains the containers of an ItemsControl, or\nnull if a ScrollViewer could not be found.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetScrollHost(control As ItemsControl) As ScrollViewer
  overload: System.Windows.Controls.ItemsControlExtensions.GetScrollHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  id: GetContainers(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetContainers(ItemsControl)
  nameWithType: ItemsControlExtensions.GetContainers(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetContainers
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 102
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGet the item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: public static IEnumerable<DependencyObject> GetContainers(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
      description: The item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContainers(control As ItemsControl) As IEnumerable(Of DependencyObject)
  overload: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetContainers``1(System.Windows.Controls.ItemsControl)
  id: GetContainers``1(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetContainers<TContainer>(ItemsControl)
  nameWithType: ItemsControlExtensions.GetContainers<TContainer>(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers<TContainer>(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetContainers
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 123
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGet the item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<TContainer> GetContainers<TContainer>(this ItemsControl control)
          where TContainer : DependencyObject
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    typeParameters:
    - id: TContainer
      description: "\nThe type of the item containers.\n"
    return:
      type: System.Collections.Generic.IEnumerable{{TContainer}}
      description: The item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetContainers(Of TContainer As DependencyObject)(control As ItemsControl) As IEnumerable(Of TContainer)
  overload: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  nameWithType.vb: ItemsControlExtensions.GetContainers(Of TContainer)(ItemsControl)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Controls.ItemsControlExtensions.GetContainers(Of TContainer)(System.Windows.Controls.ItemsControl)
  name.vb: GetContainers(Of TContainer)(ItemsControl)
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  id: GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetItemsAndContainers(ItemsControl)
  nameWithType: ItemsControlExtensions.GetItemsAndContainers(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetItemsAndContainers
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 159
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGet the items and item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: public static IEnumerable<KeyValuePair<object, DependencyObject>> GetItemsAndContainers(this ItemsControl control)
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Windows.DependencyObject}}
      description: The items and item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetItemsAndContainers(control As ItemsControl) As IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  overload: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  commentId: M:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  id: GetItemsAndContainers``1(System.Windows.Controls.ItemsControl)
  isExtensionMethod: true
  parent: System.Windows.Controls.ItemsControlExtensions
  langs:
  - csharp
  - vb
  name: GetItemsAndContainers<TContainer>(ItemsControl)
  nameWithType: ItemsControlExtensions.GetItemsAndContainers<TContainer>(ItemsControl)
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers<TContainer>(System.Windows.Controls.ItemsControl)
  type: Method
  source:
    remote:
      path: src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetItemsAndContainers
    path: ../OpenSilverGit/src/Runtime/Controls.Toolkit/Common/ItemsControlExtensions.cs
    startLine: 180
  assemblies:
  - OpenSilver.Controls.Toolkit
  namespace: System.Windows.Controls
  summary: "\nGet the items and item containers of an ItemsControl.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<KeyValuePair<object, TContainer>> GetItemsAndContainers<TContainer>(this ItemsControl control)
          where TContainer : DependencyObject
    parameters:
    - id: control
      type: System.Windows.Controls.ItemsControl
      description: The ItemsControl.
    typeParameters:
    - id: TContainer
      description: "\nThe type of the item containers.\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,{TContainer}}}
      description: The items and item containers of an ItemsControl.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetItemsAndContainers(Of TContainer As DependencyObject)(control As ItemsControl) As IEnumerable(Of KeyValuePair(Of Object, TContainer))
  overload: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">control</code> is null.\n"
  nameWithType.vb: ItemsControlExtensions.GetItemsAndContainers(Of TContainer)(ItemsControl)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers(Of TContainer)(System.Windows.Controls.ItemsControl)
  name.vb: GetItemsAndContainers(Of TContainer)(ItemsControl)
references:
- uid: System.Windows.Controls
  commentId: N:System.Windows.Controls
  name: System.Windows.Controls
  nameWithType: System.Windows.Controls
  fullName: System.Windows.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsHost*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetItemsHost
  name: GetItemsHost
  nameWithType: ItemsControlExtensions.GetItemsHost
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsHost
- uid: System.Windows.Controls.ItemsControl
  commentId: T:System.Windows.Controls.ItemsControl
  parent: System.Windows.Controls
  name: ItemsControl
  nameWithType: ItemsControl
  fullName: System.Windows.Controls.ItemsControl
- uid: System.Windows.Controls.Panel
  commentId: T:System.Windows.Controls.Panel
  parent: System.Windows.Controls
  name: Panel
  nameWithType: Panel
  fullName: System.Windows.Controls.Panel
- uid: System.Windows.Controls.ItemsControlExtensions.GetScrollHost*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetScrollHost
  name: GetScrollHost
  nameWithType: ItemsControlExtensions.GetScrollHost
  fullName: System.Windows.Controls.ItemsControlExtensions.GetScrollHost
- uid: System.Windows.Controls.ScrollViewer
  commentId: T:System.Windows.Controls.ScrollViewer
  parent: System.Windows.Controls
  name: ScrollViewer
  nameWithType: ScrollViewer
  fullName: System.Windows.Controls.ScrollViewer
- uid: System.Windows.Controls.ItemsControlExtensions.GetContainers*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetContainers
  name: GetContainers
  nameWithType: ItemsControlExtensions.GetContainers
  fullName: System.Windows.Controls.ItemsControlExtensions.GetContainers
- uid: System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
  commentId: T:System.Collections.Generic.IEnumerable{System.Windows.DependencyObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DependencyObject>
  nameWithType: IEnumerable<DependencyObject>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.DependencyObject>
  nameWithType.vb: IEnumerable(Of DependencyObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Windows.DependencyObject)
  name.vb: IEnumerable(Of DependencyObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{{TContainer}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TContainer>
  nameWithType: IEnumerable<TContainer>
  fullName: System.Collections.Generic.IEnumerable<TContainer>
  nameWithType.vb: IEnumerable(Of TContainer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TContainer)
  name.vb: IEnumerable(Of TContainer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers*
  commentId: Overload:System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers
  name: GetItemsAndContainers
  nameWithType: ItemsControlExtensions.GetItemsAndContainers
  fullName: System.Windows.Controls.ItemsControlExtensions.GetItemsAndContainers
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Windows.DependencyObject}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,System.Windows.DependencyObject}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, DependencyObject>>
  nameWithType: IEnumerable<KeyValuePair<Object, DependencyObject>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, System.Windows.DependencyObject>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, System.Windows.DependencyObject))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, DependencyObject))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,{TContainer}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Object, TContainer>>
  nameWithType: IEnumerable<KeyValuePair<Object, TContainer>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Object, TContainer>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Object, TContainer))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Object, TContainer))
  name.vb: IEnumerable(Of KeyValuePair(Of Object, TContainer))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContainer
    nameWithType: TContainer
    fullName: TContainer
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
