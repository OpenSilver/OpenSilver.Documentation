### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingOperations
  commentId: T:System.Windows.Data.BindingOperations
  id: BindingOperations
  parent: System.Windows.Data
  children:
  - System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.Binding)
  - System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  langs:
  - csharp
  - vb
  name: BindingOperations
  nameWithType: BindingOperations
  fullName: System.Windows.Data.BindingOperations
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: BindingOperations
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nProvides static methods to manipulate bindings, including <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"System.Windows.Data.MultiBinding\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public static class BindingOperations
    content.vb: Public Module BindingOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  commentId: M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  id: SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  - vb
  name: SetBinding(DependencyObject, DependencyProperty, BindingBase)
  nameWithType: BindingOperations.SetBinding(DependencyObject, DependencyProperty, BindingBase)
  fullName: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject, System.Windows.DependencyProperty, System.Windows.Data.BindingBase)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
    startLine: 42
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nCreates and associates a new instance of <xref href=\"System.Windows.Data.BindingExpressionBase\" data-throw-if-not-resolved=\"false\"></xref>\nwith the specified binding target property.\n"
  example: []
  syntax:
    content: public static BindingExpressionBase SetBinding(DependencyObject target, DependencyProperty dp, BindingBase binding)
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "\nThe binding target of the binding.\n"
    - id: dp
      type: System.Windows.DependencyProperty
      description: "\nThe target property of the binding.\n"
    - id: binding
      type: System.Windows.Data.BindingBase
      description: "\nThe <xref href=\"System.Windows.Data.BindingBase\" data-throw-if-not-resolved=\"false\"></xref> object that describes the binding.\n"
    return:
      type: System.Windows.Data.BindingExpressionBase
      description: "\nThe instance of <xref href=\"System.Windows.Data.BindingExpressionBase\" data-throw-if-not-resolved=\"false\"></xref> created for and associated\nwith the specified property. The <xref href=\"System.Windows.Data.BindingExpressionBase\" data-throw-if-not-resolved=\"false\"></xref> class is \nthe base class of <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Shared Function SetBinding(target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase
  overload: System.Windows.Data.BindingOperations.SetBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe binding parameter cannot be null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.Binding)
  commentId: M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.Binding)
  id: SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.Binding)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  - vb
  name: SetBinding(DependencyObject, DependencyProperty, Binding)
  nameWithType: BindingOperations.SetBinding(DependencyObject, DependencyProperty, Binding)
  fullName: System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject, System.Windows.DependencyProperty, System.Windows.Data.Binding)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: SetBinding
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
    startLine: 87
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nCreates and associates a new <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> with the specified binding target property.\n"
  example: []
  syntax:
    content: public static BindingExpression SetBinding(DependencyObject target, DependencyProperty dp, Binding binding)
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "\nThe binding target of the binding.\n"
    - id: dp
      type: System.Windows.DependencyProperty
      description: "\nThe target property of the binding.\n"
    - id: binding
      type: System.Windows.Data.Binding
      description: "\nThe <xref href=\"System.Windows.Data.Binding\" data-throw-if-not-resolved=\"false\"></xref> object that describes the binding.\n"
    return:
      type: System.Windows.Data.BindingExpression
      description: "\nThe instance of <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> created for and associated with the specified property.\n"
    content.vb: Public Shared Function SetBinding(target As DependencyObject, dp As DependencyProperty, binding As Binding) As BindingExpression
  overload: System.Windows.Data.BindingOperations.SetBinding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  commentId: M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  - vb
  name: GetBindingExpression(DependencyObject, DependencyProperty)
  nameWithType: BindingOperations.GetBindingExpression(DependencyObject, DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject, System.Windows.DependencyProperty)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetBindingExpression
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
    startLine: 107
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nReturns the <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object associated with the specified binding \ntarget property on the specified object.\n"
  example: []
  syntax:
    content: public static BindingExpression GetBindingExpression(DependencyObject target, DependencyProperty dp)
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "\nThe binding target object where dp is.\n"
    - id: dp
      type: System.Windows.DependencyProperty
      description: "\nThe binding target property from which to retrieve the <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
    return:
      type: System.Windows.Data.BindingExpression
      description: "\nThe <xref href=\"System.Windows.Data.BindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object associated with the given property or null if \nnone exists.\n"
    content.vb: Public Shared Function GetBindingExpression(target As DependencyObject, dp As DependencyProperty) As BindingExpression
  overload: System.Windows.Data.BindingOperations.GetBindingExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe target and dp parameters cannot be null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  commentId: M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Data.BindingOperations
  langs:
  - csharp
  - vb
  name: GetMultiBindingExpression(DependencyObject, DependencyProperty)
  nameWithType: BindingOperations.GetMultiBindingExpression(DependencyObject, DependencyProperty)
  fullName: System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject, System.Windows.DependencyProperty)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetMultiBindingExpression
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Data/BindingOperations.cs
    startLine: 138
  assemblies:
  - OpenSilver
  namespace: System.Windows.Data
  summary: "\nReturns the <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object associated with the specified binding \ntarget property on the specified object.\n"
  example: []
  syntax:
    content: public static MultiBindingExpression GetMultiBindingExpression(DependencyObject target, DependencyProperty dp)
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "\nThe binding target object where dp is.\n"
    - id: dp
      type: System.Windows.DependencyProperty
      description: "\nThe binding target property from which to retrieve the <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
    return:
      type: System.Windows.Data.MultiBindingExpression
      description: "\nThe <xref href=\"System.Windows.Data.MultiBindingExpression\" data-throw-if-not-resolved=\"false\"></xref> object associated with the given property or null if none \nexists.\n"
    content.vb: Public Shared Function GetMultiBindingExpression(target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression
  overload: System.Windows.Data.BindingOperations.GetMultiBindingExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe target and dp parameters cannot be null.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Windows.Data.Binding
  commentId: T:System.Windows.Data.Binding
  parent: System.Windows.Data
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.MultiBinding
  commentId: T:System.Windows.Data.MultiBinding
  parent: System.Windows.Data
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Data.BindingExpressionBase
  commentId: T:System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Windows.Data.BindingBase
  commentId: T:System.Windows.Data.BindingBase
  parent: System.Windows.Data
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.Data.BindingExpression
  commentId: T:System.Windows.Data.BindingExpression
  parent: System.Windows.Data
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
- uid: System.Windows.Data.MultiBindingExpression
  commentId: T:System.Windows.Data.MultiBindingExpression
  parent: System.Windows.Data
  name: MultiBindingExpression
  nameWithType: MultiBindingExpression
  fullName: System.Windows.Data.MultiBindingExpression
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Windows.Data.BindingOperations.SetBinding*
  commentId: Overload:System.Windows.Data.BindingOperations.SetBinding
  name: SetBinding
  nameWithType: BindingOperations.SetBinding
  fullName: System.Windows.Data.BindingOperations.SetBinding
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Data.BindingOperations.GetBindingExpression*
  commentId: Overload:System.Windows.Data.BindingOperations.GetBindingExpression
  name: GetBindingExpression
  nameWithType: BindingOperations.GetBindingExpression
  fullName: System.Windows.Data.BindingOperations.GetBindingExpression
- uid: System.Windows.Data.BindingOperations.GetMultiBindingExpression*
  commentId: Overload:System.Windows.Data.BindingOperations.GetMultiBindingExpression
  name: GetMultiBindingExpression
  nameWithType: BindingOperations.GetMultiBindingExpression
  fullName: System.Windows.Data.BindingOperations.GetMultiBindingExpression
