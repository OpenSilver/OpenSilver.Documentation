### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.StylusPoint
  commentId: T:System.Windows.Input.StylusPoint
  id: StylusPoint
  parent: System.Windows.Input
  children:
  - System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)
  - System.Windows.Input.StylusPoint.PressureFactor
  - System.Windows.Input.StylusPoint.X
  - System.Windows.Input.StylusPoint.Y
  langs:
  - csharp
  - vb
  name: StylusPoint
  nameWithType: StylusPoint
  fullName: System.Windows.Input.StylusPoint
  type: Struct
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: StylusPoint
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
    startLine: 19
  assemblies:
  - OpenSilver
  namespace: System.Windows.Input
  summary: "\nRepresents a single point collected while the user is entering ink strokes with\nthe stylus or mouse.\n"
  example: []
  syntax:
    content: public struct StylusPoint
    content.vb: Public Structure StylusPoint
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Input.StylusPoint
  langs:
  - csharp
  - vb
  name: StylusPoint(Double, Double)
  nameWithType: StylusPoint.StylusPoint(Double, Double)
  fullName: System.Windows.Input.StylusPoint.StylusPoint(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: System.Windows.Input
  summary: "\nInitializes a new instance of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public StylusPoint(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: "\nThe x-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref> in a pixel grid.\n"
    - id: y
      type: System.Double
      description: "\nThe y-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref> in a pixel grid.\n"
    content.vb: Public Sub New(x As Double, y As Double)
  overload: System.Windows.Input.StylusPoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Input.StylusPoint.X
  commentId: P:System.Windows.Input.StylusPoint.X
  id: X
  parent: System.Windows.Input.StylusPoint
  langs:
  - csharp
  - vb
  name: X
  nameWithType: StylusPoint.X
  fullName: System.Windows.Input.StylusPoint.X
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: X
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
    startLine: 50
  assemblies:
  - OpenSilver
  namespace: System.Windows.Input
  summary: "\nGets or sets the value for the x-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double X { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe x-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref> in a pixel grid. The default is 0.\n"
    content.vb: Public Property X As Double
  overload: System.Windows.Input.StylusPoint.X*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<xref href=\"System.Windows.Input.StylusPoint.X\" data-throw-if-not-resolved=\"false\"></xref> is set a value that evaluates to infinity or a value that is not a number.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Input.StylusPoint.Y
  commentId: P:System.Windows.Input.StylusPoint.Y
  id: Y
  parent: System.Windows.Input.StylusPoint
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: StylusPoint.Y
  fullName: System.Windows.Input.StylusPoint.Y
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Y
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
    startLine: 73
  assemblies:
  - OpenSilver
  namespace: System.Windows.Input
  summary: "\nGets or sets the value for the y-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public double Y { get; set; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe y-coordinate of the <xref href=\"System.Windows.Input.StylusPoint\" data-throw-if-not-resolved=\"false\"></xref> in a pixel grid. The default is 0.\n"
    content.vb: Public Property Y As Double
  overload: System.Windows.Input.StylusPoint.Y*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<xref href=\"System.Windows.Input.StylusPoint.Y\" data-throw-if-not-resolved=\"false\"></xref> is set a value that evaluates to infinity or a value that is not a number.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Windows.Input.StylusPoint.PressureFactor
  commentId: P:System.Windows.Input.StylusPoint.PressureFactor
  id: PressureFactor
  parent: System.Windows.Input.StylusPoint
  langs:
  - csharp
  - vb
  name: PressureFactor
  nameWithType: StylusPoint.PressureFactor
  fullName: System.Windows.Input.StylusPoint.PressureFactor
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: PressureFactor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.input/StylusPoint.cs
    startLine: 96
  assemblies:
  - OpenSilver
  namespace: System.Windows.Input
  summary: "\nGets or sets the pressure factor of the stylus on the screen.\n"
  example: []
  syntax:
    content: public float PressureFactor { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe pressure factor of the stylus on the screen. The default is 0.5.\n"
    content.vb: Public Property PressureFactor As Single
  overload: System.Windows.Input.StylusPoint.PressureFactor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<xref href=\"System.Windows.Input.StylusPoint.PressureFactor\" data-throw-if-not-resolved=\"false\"></xref>is set to a value that is less than 0 or greater than 1.0.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Input.StylusPoint
  commentId: T:System.Windows.Input.StylusPoint
  name: StylusPoint
  nameWithType: StylusPoint
  fullName: System.Windows.Input.StylusPoint
- uid: System.Windows.Input.StylusPoint.#ctor*
  commentId: Overload:System.Windows.Input.StylusPoint.#ctor
  name: StylusPoint
  nameWithType: StylusPoint.StylusPoint
  fullName: System.Windows.Input.StylusPoint.StylusPoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Input.StylusPoint.X
  commentId: P:System.Windows.Input.StylusPoint.X
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Windows.Input.StylusPoint.X*
  commentId: Overload:System.Windows.Input.StylusPoint.X
  name: X
  nameWithType: StylusPoint.X
  fullName: System.Windows.Input.StylusPoint.X
- uid: System.Windows.Input.StylusPoint.Y
  commentId: P:System.Windows.Input.StylusPoint.Y
  isExternal: true
- uid: System.Windows.Input.StylusPoint.Y*
  commentId: Overload:System.Windows.Input.StylusPoint.Y
  name: Y
  nameWithType: StylusPoint.Y
  fullName: System.Windows.Input.StylusPoint.Y
- uid: System.Windows.Input.StylusPoint.PressureFactor
  commentId: P:System.Windows.Input.StylusPoint.PressureFactor
  isExternal: true
- uid: System.Windows.Input.StylusPoint.PressureFactor*
  commentId: Overload:System.Windows.Input.StylusPoint.PressureFactor
  name: PressureFactor
  nameWithType: StylusPoint.PressureFactor
  fullName: System.Windows.Input.StylusPoint.PressureFactor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
