### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs
  commentId: T:System.Windows.Controls.Primitives.DragStartedEventArgs
  id: DragStartedEventArgs
  parent: System.Windows.Controls.Primitives
  children:
  - System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)
  - System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
  - System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
  langs:
  - csharp
  - vb
  name: DragStartedEventArgs
  nameWithType: DragStartedEventArgs
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: DragStartedEventArgs
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
    startLine: 18
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nProvides data for the DragStarted event that occurs when a user drags a Thumb control with the mouse.\n"
  example: []
  syntax:
    content: 'public class DragStartedEventArgs : RoutedEventArgs'
    content.vb: >-
      Public Class DragStartedEventArgs
          Inherits RoutedEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  inheritedMembers:
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)
  commentId: M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Controls.Primitives.DragStartedEventArgs
  langs:
  - csharp
  - vb
  name: DragStartedEventArgs(Double, Double)
  nameWithType: DragStartedEventArgs.DragStartedEventArgs(Double, Double)
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.DragStartedEventArgs(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nInitializes a new instance of the DragStartedEventArgs class.\n"
  example: []
  syntax:
    content: public DragStartedEventArgs(double horizontalOffset, double verticalOffset)
    parameters:
    - id: horizontalOffset
      type: System.Double
      description: The horizontal distance between the current mouse position and the thumb coordinates.
    - id: verticalOffset
      type: System.Double
      description: The vertical distance between the current mouse position and the thumb coordinates.
    content.vb: Public Sub New(horizontalOffset As Double, verticalOffset As Double)
  overload: System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
  commentId: P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
  id: HorizontalOffset
  parent: System.Windows.Controls.Primitives.DragStartedEventArgs
  langs:
  - csharp
  - vb
  name: HorizontalOffset
  nameWithType: DragStartedEventArgs.HorizontalOffset
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: HorizontalOffset
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
    startLine: 35
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGets the horizontal distance between the current mouse position and the thumb\ncoordinates.\n"
  example: []
  syntax:
    content: public double HorizontalOffset { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property HorizontalOffset As Double
  overload: System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
  commentId: P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
  id: VerticalOffset
  parent: System.Windows.Controls.Primitives.DragStartedEventArgs
  langs:
  - csharp
  - vb
  name: VerticalOffset
  nameWithType: DragStartedEventArgs.VerticalOffset
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: VerticalOffset
    path: ../OpenSilverGit/src/Runtime/Runtime/System.Windows.Controls.Primitives/DragStartedEventArgs.cs
    startLine: 41
  assemblies:
  - OpenSilver
  namespace: System.Windows.Controls.Primitives
  summary: "\nGets the vertical distance between the current mouse position and the thumb\ncoordinates.\n"
  example: []
  syntax:
    content: public double VerticalOffset { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property VerticalOffset As Double
  overload: System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Windows.Controls.Primitives
  commentId: N:System.Windows.Controls.Primitives
  name: System.Windows.Controls.Primitives
  nameWithType: System.Windows.Controls.Primitives
  fullName: System.Windows.Controls.Primitives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  parent: System.Windows
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
- uid: System.Windows.RoutedEventArgs.OriginalSource
  commentId: P:System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: System.Windows.RoutedEventArgs.OriginalSource
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor*
  commentId: Overload:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor
  name: DragStartedEventArgs
  nameWithType: DragStartedEventArgs.DragStartedEventArgs
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.DragStartedEventArgs
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset*
  commentId: Overload:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
  name: HorizontalOffset
  nameWithType: DragStartedEventArgs.HorizontalOffset
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset
- uid: System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset*
  commentId: Overload:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
  name: VerticalOffset
  nameWithType: DragStartedEventArgs.VerticalOffset
  fullName: System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset
