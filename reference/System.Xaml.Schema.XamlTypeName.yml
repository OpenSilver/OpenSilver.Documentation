### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeName
  commentId: T:System.Xaml.Schema.XamlTypeName
  id: XamlTypeName
  parent: System.Xaml.Schema
  children:
  - System.Xaml.Schema.XamlTypeName.#ctor
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  - System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeName.Name
  - System.Xaml.Schema.XamlTypeName.Namespace
  - System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ToString
  - System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  - System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  - System.Xaml.Schema.XamlTypeName.TypeArguments
  langs:
  - csharp
  - vb
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
  type: Class
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: XamlTypeName
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 29
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public class XamlTypeName
    content.vb: Public Class XamlTypeName
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  commentId: M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  id: Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: Parse(String, IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String, IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(System.String, System.Xaml.IXamlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Parse
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 31
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static XamlTypeName Parse(string typeName, IXamlNamespaceResolver namespaceResolver)
    parameters:
    - id: typeName
      type: System.String
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
    return:
      type: System.Xaml.Schema.XamlTypeName
    content.vb: Public Shared Function Parse(typeName As String, namespaceResolver As IXamlNamespaceResolver) As XamlTypeName
  overload: System.Xaml.Schema.XamlTypeName.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  commentId: M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  id: TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: TryParse(String, IXamlNamespaceResolver, out XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String, IXamlNamespaceResolver, out XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(System.String, System.Xaml.IXamlNamespaceResolver, out System.Xaml.Schema.XamlTypeName)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryParse
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 39
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static bool TryParse(string typeName, IXamlNamespaceResolver namespaceResolver, out XamlTypeName result)
    parameters:
    - id: typeName
      type: System.String
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
    - id: result
      type: System.Xaml.Schema.XamlTypeName
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParse(typeName As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As XamlTypeName) As Boolean
  overload: System.Xaml.Schema.XamlTypeName.TryParse*
  nameWithType.vb: XamlTypeName.TryParse(String, IXamlNamespaceResolver, ByRef XamlTypeName)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xaml.Schema.XamlTypeName.TryParse(System.String, System.Xaml.IXamlNamespaceResolver, ByRef System.Xaml.Schema.XamlTypeName)
  name.vb: TryParse(String, IXamlNamespaceResolver, ByRef XamlTypeName)
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  commentId: M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  id: ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: ParseList(String, IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String, IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(System.String, System.Xaml.IXamlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ParseList
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 104
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static IList<XamlTypeName> ParseList(string typeNameList, IXamlNamespaceResolver namespaceResolver)
    parameters:
    - id: typeNameList
      type: System.String
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
    content.vb: Public Shared Function ParseList(typeNameList As String, namespaceResolver As IXamlNamespaceResolver) As IList(Of XamlTypeName)
  overload: System.Xaml.Schema.XamlTypeName.ParseList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  commentId: M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  id: TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: TryParseList(String, IXamlNamespaceResolver, out IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String, IXamlNamespaceResolver, out IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(System.String, System.Xaml.IXamlNamespaceResolver, out System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TryParseList
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 114
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static bool TryParseList(string typeNameList, IXamlNamespaceResolver namespaceResolver, out IList<XamlTypeName> list)
    parameters:
    - id: typeNameList
      type: System.String
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
    - id: list
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseList(typeNameList As String, namespaceResolver As IXamlNamespaceResolver, ByRef list As IList(Of XamlTypeName)) As Boolean
  overload: System.Xaml.Schema.XamlTypeName.TryParseList*
  nameWithType.vb: XamlTypeName.TryParseList(String, IXamlNamespaceResolver, ByRef IList(Of XamlTypeName))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xaml.Schema.XamlTypeName.TryParseList(System.String, System.Xaml.IXamlNamespaceResolver, ByRef System.Collections.Generic.IList(Of System.Xaml.Schema.XamlTypeName))
  name.vb: TryParseList(String, IXamlNamespaceResolver, ByRef IList(Of XamlTypeName))
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  commentId: M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: ToString(IList<XamlTypeName>, INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>, INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>, System.Xaml.INamespacePrefixLookup)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 170
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public static string ToString(IList<XamlTypeName> typeNameList, INamespacePrefixLookup prefixLookup)
    parameters:
    - id: typeNameList
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
    return:
      type: System.String
    content.vb: Public Shared Function ToString(typeNameList As IList(Of XamlTypeName), prefixLookup As INamespacePrefixLookup) As String
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  nameWithType.vb: XamlTypeName.ToString(IList(Of XamlTypeName), INamespacePrefixLookup)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList(Of System.Xaml.Schema.XamlTypeName), System.Xaml.INamespacePrefixLookup)
  name.vb: ToString(IList(Of XamlTypeName), INamespacePrefixLookup)
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  commentId: M:System.Xaml.Schema.XamlTypeName.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 197
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlTypeName()
    content.vb: Public Sub New
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(System.Xaml.XamlType)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 204
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlTypeName(XamlType xamlType)
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
    content.vb: Public Sub New(xamlType As XamlType)
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  commentId: M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: XamlTypeName(String, String)
  nameWithType: XamlTypeName.XamlTypeName(String, String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 220
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlTypeName(string xamlNamespace, string name)
    parameters:
    - id: xamlNamespace
      type: System.String
    - id: name
      type: System.String
    content.vb: Public Sub New(xamlNamespace As String, name As String)
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  commentId: M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: XamlTypeName(String, String, IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String, String, IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(System.String, System.String, System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>)
  type: Constructor
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 225
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public XamlTypeName(string xamlNamespace, string name, IEnumerable<XamlTypeName> typeArguments)
    parameters:
    - id: xamlNamespace
      type: System.String
    - id: name
      type: System.String
    - id: typeArguments
      type: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
    content.vb: Public Sub New(xamlNamespace As String, name As String, typeArguments As IEnumerable(Of XamlTypeName))
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  nameWithType.vb: XamlTypeName.XamlTypeName(String, String, IEnumerable(Of XamlTypeName))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xaml.Schema.XamlTypeName.XamlTypeName(System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Xaml.Schema.XamlTypeName))
  name.vb: XamlTypeName(String, String, IEnumerable(Of XamlTypeName))
- uid: System.Xaml.Schema.XamlTypeName.Name
  commentId: P:System.Xaml.Schema.XamlTypeName.Name
  id: Name
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Name
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 240
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: System.Xaml.Schema.XamlTypeName.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  commentId: P:System.Xaml.Schema.XamlTypeName.Namespace
  id: Namespace
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Namespace
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 241
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Namespace As String
  overload: System.Xaml.Schema.XamlTypeName.Namespace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  commentId: P:System.Xaml.Schema.XamlTypeName.TypeArguments
  id: TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
  type: Property
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: TypeArguments
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 242
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public IList<XamlTypeName> TypeArguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
    content.vb: Public ReadOnly Property TypeArguments As IList(Of XamlTypeName)
  overload: System.Xaml.Schema.XamlTypeName.TypeArguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xaml.Schema.XamlTypeName.ToString
  commentId: M:System.Xaml.Schema.XamlTypeName.ToString
  id: ToString
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 244
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  commentId: M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  - vb
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  type: Method
  source:
    remote:
      path: src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ToString
    path: ../OpenSilverGit/src/Runtime/OpenSilver.Xaml/System.Xaml.Schema/XamlTypeName.cs
    startLine: 249
  assemblies:
  - OpenSilver.Xaml
  namespace: System.Xaml.Schema
  syntax:
    content: public string ToString(INamespacePrefixLookup prefixLookup)
    parameters:
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
    return:
      type: System.String
    content.vb: Public Function ToString(prefixLookup As INamespacePrefixLookup) As String
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xaml.Schema
  commentId: N:System.Xaml.Schema
  name: System.Xaml.Schema
  nameWithType: System.Xaml.Schema
  fullName: System.Xaml.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Xaml.Schema.XamlTypeName.Parse*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.Parse
  name: Parse
  nameWithType: XamlTypeName.Parse
  fullName: System.Xaml.Schema.XamlTypeName.Parse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.IXamlNamespaceResolver
  commentId: T:System.Xaml.IXamlNamespaceResolver
  parent: System.Xaml
  name: IXamlNamespaceResolver
  nameWithType: IXamlNamespaceResolver
  fullName: System.Xaml.IXamlNamespaceResolver
- uid: System.Xaml.Schema.XamlTypeName
  commentId: T:System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml
  commentId: N:System.Xaml
  name: System.Xaml
  nameWithType: System.Xaml
  fullName: System.Xaml
- uid: System.Xaml.Schema.XamlTypeName.TryParse*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.TryParse
  name: TryParse
  nameWithType: XamlTypeName.TryParse
  fullName: System.Xaml.Schema.XamlTypeName.TryParse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Schema.XamlTypeName.ParseList*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.ParseList
  name: ParseList
  nameWithType: XamlTypeName.ParseList
  fullName: System.Xaml.Schema.XamlTypeName.ParseList
- uid: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
  commentId: T:System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<XamlTypeName>
  nameWithType: IList<XamlTypeName>
  fullName: System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>
  nameWithType.vb: IList(Of XamlTypeName)
  fullName.vb: System.Collections.Generic.IList(Of System.Xaml.Schema.XamlTypeName)
  name.vb: IList(Of XamlTypeName)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: System.Xaml.Schema.XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: System.Xaml.Schema.XamlTypeName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xaml.Schema.XamlTypeName.TryParseList*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.TryParseList
  name: TryParseList
  nameWithType: XamlTypeName.TryParseList
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList
- uid: System.Xaml.Schema.XamlTypeName.ToString*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.ToString
  name: ToString
  nameWithType: XamlTypeName.ToString
  fullName: System.Xaml.Schema.XamlTypeName.ToString
- uid: System.Xaml.INamespacePrefixLookup
  commentId: T:System.Xaml.INamespacePrefixLookup
  parent: System.Xaml
  name: INamespacePrefixLookup
  nameWithType: INamespacePrefixLookup
  fullName: System.Xaml.INamespacePrefixLookup
- uid: System.Xaml.Schema.XamlTypeName.#ctor*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.#ctor
  name: XamlTypeName
  nameWithType: XamlTypeName.XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName
- uid: System.Xaml.XamlType
  commentId: T:System.Xaml.XamlType
  parent: System.Xaml
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XamlTypeName>
  nameWithType: IEnumerable<XamlTypeName>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>
  nameWithType.vb: IEnumerable(Of XamlTypeName)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xaml.Schema.XamlTypeName)
  name.vb: IEnumerable(Of XamlTypeName)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: System.Xaml.Schema.XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: System.Xaml.Schema.XamlTypeName
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xaml.Schema.XamlTypeName.Name*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.Name
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.Namespace
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments*
  commentId: Overload:System.Xaml.Schema.XamlTypeName.TypeArguments
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
