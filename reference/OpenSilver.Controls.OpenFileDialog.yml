### YamlMime:ManagedReference
items:
- uid: OpenSilver.Controls.OpenFileDialog
  commentId: T:OpenSilver.Controls.OpenFileDialog
  id: OpenFileDialog
  parent: OpenSilver.Controls
  children:
  - OpenSilver.Controls.OpenFileDialog.#ctor
  - OpenSilver.Controls.OpenFileDialog.File
  - OpenSilver.Controls.OpenFileDialog.Files
  - OpenSilver.Controls.OpenFileDialog.Filter
  - OpenSilver.Controls.OpenFileDialog.Multiselect
  - OpenSilver.Controls.OpenFileDialog.ShowDialogAsync
  - OpenSilver.Controls.OpenFileDialog.ShowDialogAsync(System.Windows.Window)
  langs:
  - csharp
  - vb
  name: OpenFileDialog
  nameWithType: OpenFileDialog
  fullName: OpenSilver.Controls.OpenFileDialog
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: OpenFileDialog
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 25
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nProvides a dialog box that enables the user to select one or more files.\n"
  example: []
  syntax:
    content: public sealed class OpenFileDialog
    content.vb: Public NotInheritable Class OpenFileDialog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: OpenSilver.Controls.OpenFileDialog.#ctor
  commentId: M:OpenSilver.Controls.OpenFileDialog.#ctor
  id: '#ctor'
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: OpenFileDialog()
  nameWithType: OpenFileDialog.OpenFileDialog()
  fullName: OpenSilver.Controls.OpenFileDialog.OpenFileDialog()
  type: Constructor
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: .ctor
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 34
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nInitializes a new instance of the <xref href=\"OpenSilver.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OpenFileDialog()
    content.vb: Public Sub New
  overload: OpenSilver.Controls.OpenFileDialog.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Controls.OpenFileDialog.Multiselect
  commentId: P:OpenSilver.Controls.OpenFileDialog.Multiselect
  id: Multiselect
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: OpenSilver.Controls.OpenFileDialog.Multiselect
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Multiselect
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 158
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nGets or sets a value that indicates whether the <xref href=\"OpenSilver.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>\nallows users to select multiple files.\n"
  example: []
  syntax:
    content: public bool Multiselect { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\ntrue if multiple selections are allowed; otherwise, false. The default is false.\n"
    content.vb: Public Property Multiselect As Boolean
  overload: OpenSilver.Controls.OpenFileDialog.Multiselect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenSilver.Controls.OpenFileDialog.Filter
  commentId: P:OpenSilver.Controls.OpenFileDialog.Filter
  id: Filter
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: OpenFileDialog.Filter
  fullName: OpenSilver.Controls.OpenFileDialog.Filter
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Filter
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 182
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nGets or sets a filter string that specifies the file types and descriptions to\ndisplay in the <xref href=\"OpenSilver.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string Filter { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA filter string that specifies the file types and descriptions to display in\nthe <xref href=\"OpenSilver.Controls.OpenFileDialog\" data-throw-if-not-resolved=\"false\"></xref>. The default is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property Filter As String
  overload: OpenSilver.Controls.OpenFileDialog.Filter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OpenSilver.Controls.OpenFileDialog.File
  commentId: P:OpenSilver.Controls.OpenFileDialog.File
  id: File
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: File
  nameWithType: OpenFileDialog.File
  fullName: OpenSilver.Controls.OpenFileDialog.File
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: File
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 203
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nGets a <xref href=\"OpenSilver.IO.MemoryFileInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the selected file. If multiple files are\nselected, returns the first selected file.\n"
  example: []
  syntax:
    content: public MemoryFileInfo File { get; }
    parameters: []
    return:
      type: OpenSilver.IO.MemoryFileInfo
      description: "\nThe selected file. If multiple files are selected, returns the first selected\nfile.\n"
    content.vb: Public ReadOnly Property File As MemoryFileInfo
  overload: OpenSilver.Controls.OpenFileDialog.File*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OpenSilver.Controls.OpenFileDialog.Files
  commentId: P:OpenSilver.Controls.OpenFileDialog.Files
  id: Files
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: OpenFileDialog.Files
  fullName: OpenSilver.Controls.OpenFileDialog.Files
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Files
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 214
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nGets a collection of <xref href=\"OpenSilver.IO.MemoryFileInfo\" data-throw-if-not-resolved=\"false\"></xref> objects for the selected files.\n"
  example: []
  syntax:
    content: public IEnumerable<MemoryFileInfo> Files { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{OpenSilver.IO.MemoryFileInfo}
    content.vb: Public ReadOnly Property Files As IEnumerable(Of MemoryFileInfo)
  overload: OpenSilver.Controls.OpenFileDialog.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync
  commentId: M:OpenSilver.Controls.OpenFileDialog.ShowDialogAsync
  id: ShowDialogAsync
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: ShowDialogAsync()
  nameWithType: OpenFileDialog.ShowDialogAsync()
  fullName: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShowDialogAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 224
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nOpens the default browser file dialog. This returns a Task, differently from Silverlight.\nThis is because it is not possible to wait for the dialog to conclude, since the process is single-threaded.\n"
  example: []
  syntax:
    content: public Task<bool?> ShowDialogAsync()
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
      description: A Task that will have the result of the file dialog. True for files selected, false for cancel/exit.
    content.vb: Public Function ShowDialogAsync As Task(Of Boolean?)
  overload: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync(System.Windows.Window)
  commentId: M:OpenSilver.Controls.OpenFileDialog.ShowDialogAsync(System.Windows.Window)
  id: ShowDialogAsync(System.Windows.Window)
  parent: OpenSilver.Controls.OpenFileDialog
  langs:
  - csharp
  - vb
  name: ShowDialogAsync(Window)
  nameWithType: OpenFileDialog.ShowDialogAsync(Window)
  fullName: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync(System.Windows.Window)
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
      branch: develop
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: ShowDialogAsync
    path: ../OpenSilverGit/src/Runtime/Runtime/OpenSilver/Controls/OpenFileDialog.cs
    startLine: 235
  assemblies:
  - OpenSilver
  namespace: OpenSilver.Controls
  summary: "\nOpens the default browser file dialog. This returns a Task, differently from Silverlight.\nThis is because it is not possible to wait for the dialog to conclude, since the process is single-threaded.\n"
  example: []
  syntax:
    content: public Task<bool?> ShowDialogAsync(Window owner)
    parameters:
    - id: owner
      type: System.Windows.Window
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
      description: A Task that will have the result of the file dialog. True for files selected, false for cancel/exit.
    content.vb: Public Function ShowDialogAsync(owner As Window) As Task(Of Boolean?)
  overload: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OpenSilver.Controls
  commentId: N:OpenSilver.Controls
  name: OpenSilver.Controls
  nameWithType: OpenSilver.Controls
  fullName: OpenSilver.Controls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: OpenSilver.Controls.OpenFileDialog
  commentId: T:OpenSilver.Controls.OpenFileDialog
  name: OpenFileDialog
  nameWithType: OpenFileDialog
  fullName: OpenSilver.Controls.OpenFileDialog
- uid: OpenSilver.Controls.OpenFileDialog.#ctor*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.#ctor
  name: OpenFileDialog
  nameWithType: OpenFileDialog.OpenFileDialog
  fullName: OpenSilver.Controls.OpenFileDialog.OpenFileDialog
- uid: OpenSilver.Controls.OpenFileDialog.Multiselect*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.Multiselect
  name: Multiselect
  nameWithType: OpenFileDialog.Multiselect
  fullName: OpenSilver.Controls.OpenFileDialog.Multiselect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
- uid: OpenSilver.Controls.OpenFileDialog.Filter*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.Filter
  name: Filter
  nameWithType: OpenFileDialog.Filter
  fullName: OpenSilver.Controls.OpenFileDialog.Filter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OpenSilver.IO.MemoryFileInfo
  commentId: T:OpenSilver.IO.MemoryFileInfo
  parent: OpenSilver.IO
  name: MemoryFileInfo
  nameWithType: MemoryFileInfo
  fullName: OpenSilver.IO.MemoryFileInfo
- uid: OpenSilver.Controls.OpenFileDialog.File*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.File
  name: File
  nameWithType: OpenFileDialog.File
  fullName: OpenSilver.Controls.OpenFileDialog.File
- uid: OpenSilver.IO
  commentId: N:OpenSilver.IO
  name: OpenSilver.IO
  nameWithType: OpenSilver.IO
  fullName: OpenSilver.IO
- uid: OpenSilver.Controls.OpenFileDialog.Files*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.Files
  name: Files
  nameWithType: OpenFileDialog.Files
  fullName: OpenSilver.Controls.OpenFileDialog.Files
- uid: System.Collections.Generic.IEnumerable{OpenSilver.IO.MemoryFileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{OpenSilver.IO.MemoryFileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MemoryFileInfo>
  nameWithType: IEnumerable<MemoryFileInfo>
  fullName: System.Collections.Generic.IEnumerable<OpenSilver.IO.MemoryFileInfo>
  nameWithType.vb: IEnumerable(Of MemoryFileInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OpenSilver.IO.MemoryFileInfo)
  name.vb: IEnumerable(Of MemoryFileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenSilver.IO.MemoryFileInfo
    name: MemoryFileInfo
    nameWithType: MemoryFileInfo
    fullName: OpenSilver.IO.MemoryFileInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenSilver.IO.MemoryFileInfo
    name: MemoryFileInfo
    nameWithType: MemoryFileInfo
    fullName: OpenSilver.IO.MemoryFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync*
  commentId: Overload:OpenSilver.Controls.OpenFileDialog.ShowDialogAsync
  name: ShowDialogAsync
  nameWithType: OpenFileDialog.ShowDialogAsync
  fullName: OpenSilver.Controls.OpenFileDialog.ShowDialogAsync
- uid: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Nullable<Boolean>>
  nameWithType: Task<Nullable<Boolean>>
  fullName: System.Threading.Tasks.Task<System.Nullable<System.Boolean>>
  nameWithType.vb: Task(Of Nullable(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of System.Nullable(Of System.Boolean))
  name.vb: Task(Of Nullable(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Windows.Window
  commentId: T:System.Windows.Window
  parent: System.Windows
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows
  commentId: N:System.Windows
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
