### YamlMime:ManagedReference
items:
- uid: System.Linq.Grouping`2
  commentId: T:System.Linq.Grouping`2
  id: Grouping`2
  parent: System.Linq
  children:
  - System.Linq.Grouping`2.GetEnumerator
  - System.Linq.Grouping`2.Key
  - System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: Grouping<TKey, TElement>
  nameWithType: Grouping<TKey, TElement>
  fullName: System.Linq.Grouping<TKey, TElement>
  type: Class
  source:
    remote:
      path: src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Grouping
    path: ../OpenSilverGit/src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
    startLine: 26
  assemblies:
  - OpenSilver
  namespace: System.Linq
  syntax:
    content: 'public class Grouping<TKey, TElement> : IGrouping<TKey, TElement>, IEnumerable<TElement>, IEnumerable'
    typeParameters:
    - id: TKey
    - id: TElement
    content.vb: >-
      Public Class Grouping(Of TKey, TElement)

          Implements IGrouping(Of TKey, TElement), IEnumerable(Of TElement), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Linq.IGrouping{{TKey},{TElement}}
  - System.Collections.Generic.IEnumerable{{TElement}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  nameWithType.vb: Grouping(Of TKey, TElement)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Linq.Grouping(Of TKey, TElement)
  name.vb: Grouping(Of TKey, TElement)
- uid: System.Linq.Grouping`2.Key
  commentId: P:System.Linq.Grouping`2.Key
  id: Key
  parent: System.Linq.Grouping`2
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Grouping<TKey, TElement>.Key
  fullName: System.Linq.Grouping<TKey, TElement>.Key
  type: Property
  source:
    remote:
      path: src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: Key
    path: ../OpenSilverGit/src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
    startLine: 31
  assemblies:
  - OpenSilver
  namespace: System.Linq
  syntax:
    content: public TKey Key { get; }
    parameters: []
    return:
      type: '{TKey}'
    content.vb: Public ReadOnly Property Key As TKey
  overload: System.Linq.Grouping`2.Key*
  implements:
  - System.Linq.IGrouping{{TKey},{TElement}}.Key
  nameWithType.vb: Grouping(Of TKey, TElement).Key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).Key
- uid: System.Linq.Grouping`2.GetEnumerator
  commentId: M:System.Linq.Grouping`2.GetEnumerator
  id: GetEnumerator
  parent: System.Linq.Grouping`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Grouping<TKey, TElement>.GetEnumerator()
  fullName: System.Linq.Grouping<TKey, TElement>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: GetEnumerator
    path: ../OpenSilverGit/src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
    startLine: 47
  assemblies:
  - OpenSilver
  namespace: System.Linq
  syntax:
    content: public IEnumerator<TElement> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TElement}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of TElement)
  overload: System.Linq.Grouping`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
  nameWithType.vb: Grouping(Of TKey, TElement).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).GetEnumerator()
- uid: System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Linq.Grouping`2
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: Grouping<TKey, TElement>.IEnumerable.GetEnumerator()
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
      branch: releases/OpenSilver/1.1.0
      repo: https://github.com/OpenSilver/OpenSilver.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../OpenSilverGit/src/Runtime/Runtime/ToBeReviewed/Grouping_2.cs
    startLine: 52
  assemblies:
  - OpenSilver
  namespace: System.Linq
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Grouping(Of TKey, TElement).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: System.Linq
  commentId: N:System.Linq
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.IGrouping{{TKey},{TElement}}
  commentId: T:System.Linq.IGrouping{`0,`1}
  parent: System.Linq
  definition: System.Linq.IGrouping`2
  name: IGrouping<TKey, TElement>
  nameWithType: IGrouping<TKey, TElement>
  fullName: System.Linq.IGrouping<TKey, TElement>
  nameWithType.vb: IGrouping(Of TKey, TElement)
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement)
  name.vb: IGrouping(Of TKey, TElement)
  spec.csharp:
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  nameWithType.vb: IEnumerable(Of TElement)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  parent: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  definition: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  name: ToJavaScriptObject()
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject()
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject()
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.IGrouping`2
  commentId: T:System.Linq.IGrouping`2
  isExternal: true
  name: IGrouping<TKey, TElement>
  nameWithType: IGrouping<TKey, TElement>
  fullName: System.Linq.IGrouping<TKey, TElement>
  nameWithType.vb: IGrouping(Of TKey, TElement)
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement)
  name.vb: IGrouping(Of TKey, TElement)
  spec.csharp:
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    nameWithType: IGrouping
    fullName: System.Linq.IGrouping
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  commentId: M:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  isExternal: true
  name: ToJavaScriptObject(Object)
  nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject(Object)
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
  spec.csharp:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject(System.Object)
    name: ToJavaScriptObject
    nameWithType: ToJavaScriptObjectExtender.ToJavaScriptObject
    fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender.ToJavaScriptObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  commentId: T:ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
  parent: ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender.ToJavaScriptObjectExtender
- uid: ToJavaScriptObjectExtender
  commentId: N:ToJavaScriptObjectExtender
  name: ToJavaScriptObjectExtender
  nameWithType: ToJavaScriptObjectExtender
  fullName: ToJavaScriptObjectExtender
- uid: System.Linq.Grouping`2.Key*
  commentId: Overload:System.Linq.Grouping`2.Key
  name: Key
  nameWithType: Grouping<TKey, TElement>.Key
  fullName: System.Linq.Grouping<TKey, TElement>.Key
  nameWithType.vb: Grouping(Of TKey, TElement).Key
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).Key
- uid: System.Linq.IGrouping{{TKey},{TElement}}.Key
  commentId: P:System.Linq.IGrouping{`0,`1}.Key
  parent: System.Linq.IGrouping{{TKey},{TElement}}
  definition: System.Linq.IGrouping`2.Key
  name: Key
  nameWithType: IGrouping<TKey, TElement>.Key
  fullName: System.Linq.IGrouping<TKey, TElement>.Key
  nameWithType.vb: IGrouping(Of TKey, TElement).Key
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement).Key
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Linq.IGrouping`2.Key
  commentId: P:System.Linq.IGrouping`2.Key
  isExternal: true
  name: Key
  nameWithType: IGrouping<TKey, TElement>.Key
  fullName: System.Linq.IGrouping<TKey, TElement>.Key
  nameWithType.vb: IGrouping(Of TKey, TElement).Key
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement).Key
- uid: TKey
  commentId: '!:TKey'
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Linq.Grouping`2.GetEnumerator*
  commentId: Overload:System.Linq.Grouping`2.GetEnumerator
  name: GetEnumerator
  nameWithType: Grouping<TKey, TElement>.GetEnumerator
  fullName: System.Linq.Grouping<TKey, TElement>.GetEnumerator
  nameWithType.vb: Grouping(Of TKey, TElement).GetEnumerator
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`1}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TElement}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TElement>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TElement).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TElement>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TElement).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TElement}}
  commentId: T:System.Collections.Generic.IEnumerator{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TElement>
  nameWithType: IEnumerator<TElement>
  fullName: System.Collections.Generic.IEnumerator<TElement>
  nameWithType.vb: IEnumerator(Of TElement)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TElement)
  name.vb: IEnumerator(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:System.Linq.Grouping`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: Grouping<TKey, TElement>.IEnumerable.GetEnumerator
  fullName: System.Linq.Grouping<TKey, TElement>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Grouping(Of TKey, TElement).System.Collections.IEnumerable.GetEnumerator
  fullName.vb: System.Linq.Grouping(Of TKey, TElement).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
